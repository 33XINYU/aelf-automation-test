// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aedpos_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Client.Consensus.AEDPoS {

  /// <summary>Holder for reflection information generated from aedpos_contract.proto</summary>
  public static partial class AedposContractReflection {

    #region Descriptor
    /// <summary>File descriptor for aedpos_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AedposContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVhZWRwb3NfY29udHJhY3QucHJvdG8iHAoJTWluZXJMaXN0Eg8KB3B1Ymtl",
            "eXMYASADKAwiHQoKUHVia2V5TGlzdBIPCgdwdWJrZXlzGAEgAygJIlAKGE1p",
            "bmVyTGlzdFdpdGhSb3VuZE51bWJlchIeCgptaW5lcl9saXN0GAEgASgLMgou",
            "TWluZXJMaXN0EhQKDHJvdW5kX251bWJlchgCIAEoEiIoChFHZXRNaW5lckxp",
            "c3RJbnB1dBITCgt0ZXJtX251bWJlchgBIAEoEkIfqgIcQUVsZi5DbGllbnQu",
            "Q29uc2Vuc3VzLkFFRFBvU2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Consensus.AEDPoS.MinerList), global::AElf.Client.Consensus.AEDPoS.MinerList.Parser, new[]{ "Pubkeys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Consensus.AEDPoS.PubkeyList), global::AElf.Client.Consensus.AEDPoS.PubkeyList.Parser, new[]{ "Pubkeys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Consensus.AEDPoS.MinerListWithRoundNumber), global::AElf.Client.Consensus.AEDPoS.MinerListWithRoundNumber.Parser, new[]{ "MinerList", "RoundNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Consensus.AEDPoS.GetMinerListInput), global::AElf.Client.Consensus.AEDPoS.GetMinerListInput.Parser, new[]{ "TermNumber" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///aedpos_contract
  /// </summary>
  public sealed partial class MinerList : pb::IMessage<MinerList> {
    private static readonly pb::MessageParser<MinerList> _parser = new pb::MessageParser<MinerList>(() => new MinerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MinerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerList(MinerList other) : this() {
      pubkeys_ = other.pubkeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerList Clone() {
      return new MinerList(this);
    }

    /// <summary>Field number for the "pubkeys" field.</summary>
    public const int PubkeysFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_pubkeys_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> pubkeys_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Pubkeys {
      get { return pubkeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MinerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MinerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pubkeys_.Equals(other.pubkeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pubkeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pubkeys_.WriteTo(output, _repeated_pubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pubkeys_.CalculateSize(_repeated_pubkeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MinerList other) {
      if (other == null) {
        return;
      }
      pubkeys_.Add(other.pubkeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pubkeys_.AddEntriesFrom(input, _repeated_pubkeys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PubkeyList : pb::IMessage<PubkeyList> {
    private static readonly pb::MessageParser<PubkeyList> _parser = new pb::MessageParser<PubkeyList>(() => new PubkeyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubkeyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubkeyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubkeyList(PubkeyList other) : this() {
      pubkeys_ = other.pubkeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubkeyList Clone() {
      return new PubkeyList(this);
    }

    /// <summary>Field number for the "pubkeys" field.</summary>
    public const int PubkeysFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_pubkeys_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> pubkeys_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Pubkeys {
      get { return pubkeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PubkeyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubkeyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pubkeys_.Equals(other.pubkeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pubkeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pubkeys_.WriteTo(output, _repeated_pubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pubkeys_.CalculateSize(_repeated_pubkeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubkeyList other) {
      if (other == null) {
        return;
      }
      pubkeys_.Add(other.pubkeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pubkeys_.AddEntriesFrom(input, _repeated_pubkeys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MinerListWithRoundNumber : pb::IMessage<MinerListWithRoundNumber> {
    private static readonly pb::MessageParser<MinerListWithRoundNumber> _parser = new pb::MessageParser<MinerListWithRoundNumber>(() => new MinerListWithRoundNumber());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MinerListWithRoundNumber> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerListWithRoundNumber() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerListWithRoundNumber(MinerListWithRoundNumber other) : this() {
      minerList_ = other.minerList_ != null ? other.minerList_.Clone() : null;
      roundNumber_ = other.roundNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerListWithRoundNumber Clone() {
      return new MinerListWithRoundNumber(this);
    }

    /// <summary>Field number for the "miner_list" field.</summary>
    public const int MinerListFieldNumber = 1;
    private global::AElf.Client.Consensus.AEDPoS.MinerList minerList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Consensus.AEDPoS.MinerList MinerList {
      get { return minerList_; }
      set {
        minerList_ = value;
      }
    }

    /// <summary>Field number for the "round_number" field.</summary>
    public const int RoundNumberFieldNumber = 2;
    private long roundNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MinerListWithRoundNumber);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MinerListWithRoundNumber other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MinerList, other.MinerList)) return false;
      if (RoundNumber != other.RoundNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (minerList_ != null) hash ^= MinerList.GetHashCode();
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (minerList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinerList);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(RoundNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (minerList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinerList);
      }
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(RoundNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MinerListWithRoundNumber other) {
      if (other == null) {
        return;
      }
      if (other.minerList_ != null) {
        if (minerList_ == null) {
          MinerList = new global::AElf.Client.Consensus.AEDPoS.MinerList();
        }
        MinerList.MergeFrom(other.MinerList);
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (minerList_ == null) {
              MinerList = new global::AElf.Client.Consensus.AEDPoS.MinerList();
            }
            input.ReadMessage(MinerList);
            break;
          }
          case 16: {
            RoundNumber = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMinerListInput : pb::IMessage<GetMinerListInput> {
    private static readonly pb::MessageParser<GetMinerListInput> _parser = new pb::MessageParser<GetMinerListInput>(() => new GetMinerListInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMinerListInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinerListInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinerListInput(GetMinerListInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinerListInput Clone() {
      return new GetMinerListInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMinerListInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMinerListInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMinerListInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
