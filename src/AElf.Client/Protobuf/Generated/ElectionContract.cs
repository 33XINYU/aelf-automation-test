// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: election_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Client.Election {

  /// <summary>Holder for reflection information generated from election_contract.proto</summary>
  public static partial class ElectionContractReflection {

    #region Descriptor
    /// <summary>File descriptor for election_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ElectionContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdlbGVjdGlvbl9jb250cmFjdC5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90bxoMY2xpZW50LnByb3RvIt8BChRDYW5kaWRhdGVJbmZv",
            "cm1hdGlvbhIOCgZwdWJrZXkYASABKAkSDQoFdGVybXMYAiADKBISFwoPcHJv",
            "ZHVjZWRfYmxvY2tzGAMgASgSEhkKEW1pc3NlZF90aW1lX3Nsb3RzGAQgASgS",
            "EiMKG2NvbnRpbnVhbF9hcHBvaW50bWVudF9jb3VudBgFIAEoEhIxChthbm5v",
            "dW5jZW1lbnRfdHJhbnNhY3Rpb25faWQYBiABKAsyDC5jbGllbnQuSGFzaBIc",
            "ChRpc19jdXJyZW50X2NhbmRpZGF0ZRgHIAEoCCIrChRHZXRUZXJtU25hcHNo",
            "b3RJbnB1dBITCgt0ZXJtX251bWJlchgBIAEoEiKxAQoMVGVybVNuYXBzaG90",
            "EhgKEGVuZF9yb3VuZF9udW1iZXIYASABKBISFAoMbWluZWRfYmxvY2tzGAIg",
            "ASgSEjoKD2VsZWN0aW9uX3Jlc3VsdBgDIAMoCzIhLlRlcm1TbmFwc2hvdC5F",
            "bGVjdGlvblJlc3VsdEVudHJ5GjUKE0VsZWN0aW9uUmVzdWx0RW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgSOgI4ASItChZHZXRFbGVjdGlvblJl",
            "c3VsdElucHV0EhMKC3Rlcm1fbnVtYmVyGAEgASgSIpcBCg5FbGVjdGlvblJl",
            "c3VsdBITCgt0ZXJtX251bWJlchgBIAEoEhItCgdyZXN1bHRzGAIgAygLMhwu",
            "RWxlY3Rpb25SZXN1bHQuUmVzdWx0c0VudHJ5EhEKCWlzX2FjdGl2ZRgDIAEo",
            "CBouCgxSZXN1bHRzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgS",
            "OgI4ASKxAgoLRWxlY3RvclZvdGUSLgoYYWN0aXZlX3ZvdGluZ19yZWNvcmRf",
            "aWRzGAEgAygLMgwuY2xpZW50Lkhhc2gSMQobd2l0aGRyYXduX3ZvdGluZ19y",
            "ZWNvcmRfaWRzGAIgAygLMgwuY2xpZW50Lkhhc2gSIQoZYWN0aXZlX3ZvdGVk",
            "X3ZvdGVzX2Ftb3VudBgDIAEoEhIeChZhbGxfdm90ZWRfdm90ZXNfYW1vdW50",
            "GAQgASgSEjQKFWFjdGl2ZV92b3RpbmdfcmVjb3JkcxgFIAMoCzIVLkVsZWN0",
            "aW9uVm90aW5nUmVjb3JkEjYKF3dpdGhkcmF3bl92b3Rlc19yZWNvcmRzGAYg",
            "AygLMhUuRWxlY3Rpb25Wb3RpbmdSZWNvcmQSDgoGcHVia2V5GAcgASgMIoID",
            "ChRFbGVjdGlvblZvdGluZ1JlY29yZBIeCgV2b3RlchgBIAEoCzIPLmNsaWVu",
            "dC5BZGRyZXNzEhEKCWNhbmRpZGF0ZRgCIAEoCRIOCgZhbW91bnQYAyABKBIS",
            "EwoLdGVybV9udW1iZXIYBCABKBISHQoHdm90ZV9pZBgFIAEoCzIMLmNsaWVu",
            "dC5IYXNoEhEKCWxvY2tfdGltZRgHIAEoEhI0ChB1bmxvY2tfdGltZXN0YW1w",
            "GAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI2ChJ3aXRoZHJh",
            "d190aW1lc3RhbXAYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "EjIKDnZvdGVfdGltZXN0YW1wGAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBIUCgxpc193aXRoZHJhd24YDSABKAgSDgoGd2VpZ2h0GA4gASgS",
            "EhgKEGlzX2NoYW5nZV90YXJnZXQYDyABKAgi6QIKDUNhbmRpZGF0ZVZvdGUS",
            "Nwohb2J0YWluZWRfYWN0aXZlX3ZvdGluZ19yZWNvcmRfaWRzGAEgAygLMgwu",
            "Y2xpZW50Lkhhc2gSOgokb2J0YWluZWRfd2l0aGRyYXduX3ZvdGluZ19yZWNv",
            "cmRfaWRzGAIgAygLMgwuY2xpZW50Lkhhc2gSKgoib2J0YWluZWRfYWN0aXZl",
            "X3ZvdGVkX3ZvdGVzX2Ftb3VudBgDIAEoEhInCh9hbGxfb2J0YWluZWRfdm90",
            "ZWRfdm90ZXNfYW1vdW50GAQgASgSEj0KHm9idGFpbmVkX2FjdGl2ZV92b3Rp",
            "bmdfcmVjb3JkcxgFIAMoCzIVLkVsZWN0aW9uVm90aW5nUmVjb3JkEj8KIG9i",
            "dGFpbmVkX3dpdGhkcmF3bl92b3Rlc19yZWNvcmRzGAYgAygLMhUuRWxlY3Rp",
            "b25Wb3RpbmdSZWNvcmQSDgoGcHVia2V5GAcgASgMIjIKIUdldFdlbGZhcmVS",
            "ZXdhcmRBbW91bnRTYW1wbGVJbnB1dBINCgV2YWx1ZRgBIAMoEiIzCiJHZXRX",
            "ZWxmYXJlUmV3YXJkQW1vdW50U2FtcGxlT3V0cHV0Eg0KBXZhbHVlGAEgAygS",
            "IjAKD1BhZ2VJbmZvcm1hdGlvbhINCgVzdGFydBgBIAEoERIOCgZsZW5ndGgY",
            "AiABKBEiZgoPQ2FuZGlkYXRlRGV0YWlsEjQKFWNhbmRpZGF0ZV9pbmZvcm1h",
            "dGlvbhgBIAEoCzIVLkNhbmRpZGF0ZUluZm9ybWF0aW9uEh0KFW9idGFpbmVk",
            "X3ZvdGVzX2Ftb3VudBgCIAEoEiJICiVHZXRQYWdlYWJsZUNhbmRpZGF0ZUlu",
            "Zm9ybWF0aW9uT3V0cHV0Eh8KBXZhbHVlGAEgAygLMhAuQ2FuZGlkYXRlRGV0",
            "YWlsIqEBChVEYXRhQ2VudGVyUmFua2luZ0xpc3QSPQoMZGF0YV9jZW50ZXJz",
            "GAEgAygLMicuRGF0YUNlbnRlclJhbmtpbmdMaXN0LkRhdGFDZW50ZXJzRW50",
            "cnkSFQoNbWluaW11bV92b3RlcxgCIAEoEhoyChBEYXRhQ2VudGVyc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoEjoCOAFCF6oCFEFFbGYuQ2xp",
            "ZW50LkVsZWN0aW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::AElf.Client.Proto.ClientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.CandidateInformation), global::AElf.Client.Election.CandidateInformation.Parser, new[]{ "Pubkey", "Terms", "ProducedBlocks", "MissedTimeSlots", "ContinualAppointmentCount", "AnnouncementTransactionId", "IsCurrentCandidate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.GetTermSnapshotInput), global::AElf.Client.Election.GetTermSnapshotInput.Parser, new[]{ "TermNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.TermSnapshot), global::AElf.Client.Election.TermSnapshot.Parser, new[]{ "EndRoundNumber", "MinedBlocks", "ElectionResult" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.GetElectionResultInput), global::AElf.Client.Election.GetElectionResultInput.Parser, new[]{ "TermNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.ElectionResult), global::AElf.Client.Election.ElectionResult.Parser, new[]{ "TermNumber", "Results", "IsActive" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.ElectorVote), global::AElf.Client.Election.ElectorVote.Parser, new[]{ "ActiveVotingRecordIds", "WithdrawnVotingRecordIds", "ActiveVotedVotesAmount", "AllVotedVotesAmount", "ActiveVotingRecords", "WithdrawnVotesRecords", "Pubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.ElectionVotingRecord), global::AElf.Client.Election.ElectionVotingRecord.Parser, new[]{ "Voter", "Candidate", "Amount", "TermNumber", "VoteId", "LockTime", "UnlockTimestamp", "WithdrawTimestamp", "VoteTimestamp", "IsWithdrawn", "Weight", "IsChangeTarget" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.CandidateVote), global::AElf.Client.Election.CandidateVote.Parser, new[]{ "ObtainedActiveVotingRecordIds", "ObtainedWithdrawnVotingRecordIds", "ObtainedActiveVotedVotesAmount", "AllObtainedVotedVotesAmount", "ObtainedActiveVotingRecords", "ObtainedWithdrawnVotesRecords", "Pubkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.GetWelfareRewardAmountSampleInput), global::AElf.Client.Election.GetWelfareRewardAmountSampleInput.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.GetWelfareRewardAmountSampleOutput), global::AElf.Client.Election.GetWelfareRewardAmountSampleOutput.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.PageInformation), global::AElf.Client.Election.PageInformation.Parser, new[]{ "Start", "Length" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.CandidateDetail), global::AElf.Client.Election.CandidateDetail.Parser, new[]{ "CandidateInformation", "ObtainedVotesAmount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.GetPageableCandidateInformationOutput), global::AElf.Client.Election.GetPageableCandidateInformationOutput.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Election.DataCenterRankingList), global::AElf.Client.Election.DataCenterRankingList.Parser, new[]{ "DataCenters", "MinimumVotes" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///election_contract
  /// </summary>
  public sealed partial class CandidateInformation : pb::IMessage<CandidateInformation> {
    private static readonly pb::MessageParser<CandidateInformation> _parser = new pb::MessageParser<CandidateInformation>(() => new CandidateInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateInformation(CandidateInformation other) : this() {
      pubkey_ = other.pubkey_;
      terms_ = other.terms_.Clone();
      producedBlocks_ = other.producedBlocks_;
      missedTimeSlots_ = other.missedTimeSlots_;
      continualAppointmentCount_ = other.continualAppointmentCount_;
      announcementTransactionId_ = other.announcementTransactionId_ != null ? other.announcementTransactionId_.Clone() : null;
      isCurrentCandidate_ = other.isCurrentCandidate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateInformation Clone() {
      return new CandidateInformation(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "terms" field.</summary>
    public const int TermsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_terms_codec
        = pb::FieldCodec.ForSInt64(18);
    private readonly pbc::RepeatedField<long> terms_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Terms {
      get { return terms_; }
    }

    /// <summary>Field number for the "produced_blocks" field.</summary>
    public const int ProducedBlocksFieldNumber = 3;
    private long producedBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProducedBlocks {
      get { return producedBlocks_; }
      set {
        producedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "missed_time_slots" field.</summary>
    public const int MissedTimeSlotsFieldNumber = 4;
    private long missedTimeSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MissedTimeSlots {
      get { return missedTimeSlots_; }
      set {
        missedTimeSlots_ = value;
      }
    }

    /// <summary>Field number for the "continual_appointment_count" field.</summary>
    public const int ContinualAppointmentCountFieldNumber = 5;
    private long continualAppointmentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ContinualAppointmentCount {
      get { return continualAppointmentCount_; }
      set {
        continualAppointmentCount_ = value;
      }
    }

    /// <summary>Field number for the "announcement_transaction_id" field.</summary>
    public const int AnnouncementTransactionIdFieldNumber = 6;
    private global::AElf.Client.Proto.Hash announcementTransactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash AnnouncementTransactionId {
      get { return announcementTransactionId_; }
      set {
        announcementTransactionId_ = value;
      }
    }

    /// <summary>Field number for the "is_current_candidate" field.</summary>
    public const int IsCurrentCandidateFieldNumber = 7;
    private bool isCurrentCandidate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCurrentCandidate {
      get { return isCurrentCandidate_; }
      set {
        isCurrentCandidate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if(!terms_.Equals(other.terms_)) return false;
      if (ProducedBlocks != other.ProducedBlocks) return false;
      if (MissedTimeSlots != other.MissedTimeSlots) return false;
      if (ContinualAppointmentCount != other.ContinualAppointmentCount) return false;
      if (!object.Equals(AnnouncementTransactionId, other.AnnouncementTransactionId)) return false;
      if (IsCurrentCandidate != other.IsCurrentCandidate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      hash ^= terms_.GetHashCode();
      if (ProducedBlocks != 0L) hash ^= ProducedBlocks.GetHashCode();
      if (MissedTimeSlots != 0L) hash ^= MissedTimeSlots.GetHashCode();
      if (ContinualAppointmentCount != 0L) hash ^= ContinualAppointmentCount.GetHashCode();
      if (announcementTransactionId_ != null) hash ^= AnnouncementTransactionId.GetHashCode();
      if (IsCurrentCandidate != false) hash ^= IsCurrentCandidate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      terms_.WriteTo(output, _repeated_terms_codec);
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(MissedTimeSlots);
      }
      if (ContinualAppointmentCount != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(ContinualAppointmentCount);
      }
      if (announcementTransactionId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AnnouncementTransactionId);
      }
      if (IsCurrentCandidate != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsCurrentCandidate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      size += terms_.CalculateSize(_repeated_terms_codec);
      if (ProducedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MissedTimeSlots);
      }
      if (ContinualAppointmentCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ContinualAppointmentCount);
      }
      if (announcementTransactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnouncementTransactionId);
      }
      if (IsCurrentCandidate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateInformation other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      terms_.Add(other.terms_);
      if (other.ProducedBlocks != 0L) {
        ProducedBlocks = other.ProducedBlocks;
      }
      if (other.MissedTimeSlots != 0L) {
        MissedTimeSlots = other.MissedTimeSlots;
      }
      if (other.ContinualAppointmentCount != 0L) {
        ContinualAppointmentCount = other.ContinualAppointmentCount;
      }
      if (other.announcementTransactionId_ != null) {
        if (announcementTransactionId_ == null) {
          AnnouncementTransactionId = new global::AElf.Client.Proto.Hash();
        }
        AnnouncementTransactionId.MergeFrom(other.AnnouncementTransactionId);
      }
      if (other.IsCurrentCandidate != false) {
        IsCurrentCandidate = other.IsCurrentCandidate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            terms_.AddEntriesFrom(input, _repeated_terms_codec);
            break;
          }
          case 24: {
            ProducedBlocks = input.ReadSInt64();
            break;
          }
          case 32: {
            MissedTimeSlots = input.ReadSInt64();
            break;
          }
          case 40: {
            ContinualAppointmentCount = input.ReadSInt64();
            break;
          }
          case 50: {
            if (announcementTransactionId_ == null) {
              AnnouncementTransactionId = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(AnnouncementTransactionId);
            break;
          }
          case 56: {
            IsCurrentCandidate = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTermSnapshotInput : pb::IMessage<GetTermSnapshotInput> {
    private static readonly pb::MessageParser<GetTermSnapshotInput> _parser = new pb::MessageParser<GetTermSnapshotInput>(() => new GetTermSnapshotInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTermSnapshotInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTermSnapshotInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTermSnapshotInput(GetTermSnapshotInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTermSnapshotInput Clone() {
      return new GetTermSnapshotInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTermSnapshotInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTermSnapshotInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTermSnapshotInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TermSnapshot : pb::IMessage<TermSnapshot> {
    private static readonly pb::MessageParser<TermSnapshot> _parser = new pb::MessageParser<TermSnapshot>(() => new TermSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TermSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TermSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TermSnapshot(TermSnapshot other) : this() {
      endRoundNumber_ = other.endRoundNumber_;
      minedBlocks_ = other.minedBlocks_;
      electionResult_ = other.electionResult_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TermSnapshot Clone() {
      return new TermSnapshot(this);
    }

    /// <summary>Field number for the "end_round_number" field.</summary>
    public const int EndRoundNumberFieldNumber = 1;
    private long endRoundNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndRoundNumber {
      get { return endRoundNumber_; }
      set {
        endRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "mined_blocks" field.</summary>
    public const int MinedBlocksFieldNumber = 2;
    private long minedBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinedBlocks {
      get { return minedBlocks_; }
      set {
        minedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "election_result" field.</summary>
    public const int ElectionResultFieldNumber = 3;
    private static readonly pbc::MapField<string, long>.Codec _map_electionResult_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForSInt64(16), 26);
    private readonly pbc::MapField<string, long> electionResult_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> ElectionResult {
      get { return electionResult_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TermSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TermSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EndRoundNumber != other.EndRoundNumber) return false;
      if (MinedBlocks != other.MinedBlocks) return false;
      if (!ElectionResult.Equals(other.ElectionResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EndRoundNumber != 0L) hash ^= EndRoundNumber.GetHashCode();
      if (MinedBlocks != 0L) hash ^= MinedBlocks.GetHashCode();
      hash ^= ElectionResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EndRoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(EndRoundNumber);
      }
      if (MinedBlocks != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(MinedBlocks);
      }
      electionResult_.WriteTo(output, _map_electionResult_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EndRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(EndRoundNumber);
      }
      if (MinedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MinedBlocks);
      }
      size += electionResult_.CalculateSize(_map_electionResult_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TermSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.EndRoundNumber != 0L) {
        EndRoundNumber = other.EndRoundNumber;
      }
      if (other.MinedBlocks != 0L) {
        MinedBlocks = other.MinedBlocks;
      }
      electionResult_.Add(other.electionResult_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EndRoundNumber = input.ReadSInt64();
            break;
          }
          case 16: {
            MinedBlocks = input.ReadSInt64();
            break;
          }
          case 26: {
            electionResult_.AddEntriesFrom(input, _map_electionResult_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetElectionResultInput : pb::IMessage<GetElectionResultInput> {
    private static readonly pb::MessageParser<GetElectionResultInput> _parser = new pb::MessageParser<GetElectionResultInput>(() => new GetElectionResultInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetElectionResultInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput(GetElectionResultInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput Clone() {
      return new GetElectionResultInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetElectionResultInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetElectionResultInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetElectionResultInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectionResult : pb::IMessage<ElectionResult> {
    private static readonly pb::MessageParser<ElectionResult> _parser = new pb::MessageParser<ElectionResult>(() => new ElectionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult(ElectionResult other) : this() {
      termNumber_ = other.termNumber_;
      results_ = other.results_.Clone();
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult Clone() {
      return new ElectionResult(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pbc::MapField<string, long>.Codec _map_results_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForSInt64(16), 18);
    private readonly pbc::MapField<string, long> results_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 3;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      if (!Results.Equals(other.Results)) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      hash ^= Results.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(TermNumber);
      }
      results_.WriteTo(output, _map_results_codec);
      if (IsActive != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TermNumber);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionResult other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      results_.Add(other.results_);
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadSInt64();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
          case 24: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectorVote : pb::IMessage<ElectorVote> {
    private static readonly pb::MessageParser<ElectorVote> _parser = new pb::MessageParser<ElectorVote>(() => new ElectorVote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectorVote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectorVote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectorVote(ElectorVote other) : this() {
      activeVotingRecordIds_ = other.activeVotingRecordIds_.Clone();
      withdrawnVotingRecordIds_ = other.withdrawnVotingRecordIds_.Clone();
      activeVotedVotesAmount_ = other.activeVotedVotesAmount_;
      allVotedVotesAmount_ = other.allVotedVotesAmount_;
      activeVotingRecords_ = other.activeVotingRecords_.Clone();
      withdrawnVotesRecords_ = other.withdrawnVotesRecords_.Clone();
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectorVote Clone() {
      return new ElectorVote(this);
    }

    /// <summary>Field number for the "active_voting_record_ids" field.</summary>
    public const int ActiveVotingRecordIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.Hash> _repeated_activeVotingRecordIds_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Proto.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.Hash> activeVotingRecordIds_ = new pbc::RepeatedField<global::AElf.Client.Proto.Hash>();
    /// <summary>
    /// Not withdrawn.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.Hash> ActiveVotingRecordIds {
      get { return activeVotingRecordIds_; }
    }

    /// <summary>Field number for the "withdrawn_voting_record_ids" field.</summary>
    public const int WithdrawnVotingRecordIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.Hash> _repeated_withdrawnVotingRecordIds_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Client.Proto.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.Hash> withdrawnVotingRecordIds_ = new pbc::RepeatedField<global::AElf.Client.Proto.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.Hash> WithdrawnVotingRecordIds {
      get { return withdrawnVotingRecordIds_; }
    }

    /// <summary>Field number for the "active_voted_votes_amount" field.</summary>
    public const int ActiveVotedVotesAmountFieldNumber = 3;
    private long activeVotedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActiveVotedVotesAmount {
      get { return activeVotedVotesAmount_; }
      set {
        activeVotedVotesAmount_ = value;
      }
    }

    /// <summary>Field number for the "all_voted_votes_amount" field.</summary>
    public const int AllVotedVotesAmountFieldNumber = 4;
    private long allVotedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AllVotedVotesAmount {
      get { return allVotedVotesAmount_; }
      set {
        allVotedVotesAmount_ = value;
      }
    }

    /// <summary>Field number for the "active_voting_records" field.</summary>
    public const int ActiveVotingRecordsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::AElf.Client.Election.ElectionVotingRecord> _repeated_activeVotingRecords_codec
        = pb::FieldCodec.ForMessage(42, global::AElf.Client.Election.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord> activeVotingRecords_ = new pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord> ActiveVotingRecords {
      get { return activeVotingRecords_; }
    }

    /// <summary>Field number for the "withdrawn_votes_records" field.</summary>
    public const int WithdrawnVotesRecordsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::AElf.Client.Election.ElectionVotingRecord> _repeated_withdrawnVotesRecords_codec
        = pb::FieldCodec.ForMessage(50, global::AElf.Client.Election.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord> withdrawnVotesRecords_ = new pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord> WithdrawnVotesRecords {
      get { return withdrawnVotesRecords_; }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 7;
    private pb::ByteString pubkey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectorVote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectorVote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activeVotingRecordIds_.Equals(other.activeVotingRecordIds_)) return false;
      if(!withdrawnVotingRecordIds_.Equals(other.withdrawnVotingRecordIds_)) return false;
      if (ActiveVotedVotesAmount != other.ActiveVotedVotesAmount) return false;
      if (AllVotedVotesAmount != other.AllVotedVotesAmount) return false;
      if(!activeVotingRecords_.Equals(other.activeVotingRecords_)) return false;
      if(!withdrawnVotesRecords_.Equals(other.withdrawnVotesRecords_)) return false;
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activeVotingRecordIds_.GetHashCode();
      hash ^= withdrawnVotingRecordIds_.GetHashCode();
      if (ActiveVotedVotesAmount != 0L) hash ^= ActiveVotedVotesAmount.GetHashCode();
      if (AllVotedVotesAmount != 0L) hash ^= AllVotedVotesAmount.GetHashCode();
      hash ^= activeVotingRecords_.GetHashCode();
      hash ^= withdrawnVotesRecords_.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activeVotingRecordIds_.WriteTo(output, _repeated_activeVotingRecordIds_codec);
      withdrawnVotingRecordIds_.WriteTo(output, _repeated_withdrawnVotingRecordIds_codec);
      if (ActiveVotedVotesAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(ActiveVotedVotesAmount);
      }
      if (AllVotedVotesAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(AllVotedVotesAmount);
      }
      activeVotingRecords_.WriteTo(output, _repeated_activeVotingRecords_codec);
      withdrawnVotesRecords_.WriteTo(output, _repeated_withdrawnVotesRecords_codec);
      if (Pubkey.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activeVotingRecordIds_.CalculateSize(_repeated_activeVotingRecordIds_codec);
      size += withdrawnVotingRecordIds_.CalculateSize(_repeated_withdrawnVotingRecordIds_codec);
      if (ActiveVotedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ActiveVotedVotesAmount);
      }
      if (AllVotedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(AllVotedVotesAmount);
      }
      size += activeVotingRecords_.CalculateSize(_repeated_activeVotingRecords_codec);
      size += withdrawnVotesRecords_.CalculateSize(_repeated_withdrawnVotesRecords_codec);
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectorVote other) {
      if (other == null) {
        return;
      }
      activeVotingRecordIds_.Add(other.activeVotingRecordIds_);
      withdrawnVotingRecordIds_.Add(other.withdrawnVotingRecordIds_);
      if (other.ActiveVotedVotesAmount != 0L) {
        ActiveVotedVotesAmount = other.ActiveVotedVotesAmount;
      }
      if (other.AllVotedVotesAmount != 0L) {
        AllVotedVotesAmount = other.AllVotedVotesAmount;
      }
      activeVotingRecords_.Add(other.activeVotingRecords_);
      withdrawnVotesRecords_.Add(other.withdrawnVotesRecords_);
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activeVotingRecordIds_.AddEntriesFrom(input, _repeated_activeVotingRecordIds_codec);
            break;
          }
          case 18: {
            withdrawnVotingRecordIds_.AddEntriesFrom(input, _repeated_withdrawnVotingRecordIds_codec);
            break;
          }
          case 24: {
            ActiveVotedVotesAmount = input.ReadSInt64();
            break;
          }
          case 32: {
            AllVotedVotesAmount = input.ReadSInt64();
            break;
          }
          case 42: {
            activeVotingRecords_.AddEntriesFrom(input, _repeated_activeVotingRecords_codec);
            break;
          }
          case 50: {
            withdrawnVotesRecords_.AddEntriesFrom(input, _repeated_withdrawnVotesRecords_codec);
            break;
          }
          case 58: {
            Pubkey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectionVotingRecord : pb::IMessage<ElectionVotingRecord> {
    private static readonly pb::MessageParser<ElectionVotingRecord> _parser = new pb::MessageParser<ElectionVotingRecord>(() => new ElectionVotingRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionVotingRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord(ElectionVotingRecord other) : this() {
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      candidate_ = other.candidate_;
      amount_ = other.amount_;
      termNumber_ = other.termNumber_;
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      lockTime_ = other.lockTime_;
      unlockTimestamp_ = other.unlockTimestamp_ != null ? other.unlockTimestamp_.Clone() : null;
      withdrawTimestamp_ = other.withdrawTimestamp_ != null ? other.withdrawTimestamp_.Clone() : null;
      voteTimestamp_ = other.voteTimestamp_ != null ? other.voteTimestamp_.Clone() : null;
      isWithdrawn_ = other.isWithdrawn_;
      weight_ = other.weight_;
      isChangeTarget_ = other.isChangeTarget_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord Clone() {
      return new ElectionVotingRecord(this);
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 1;
    private global::AElf.Client.Proto.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "candidate" field.</summary>
    public const int CandidateFieldNumber = 2;
    private string candidate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Candidate {
      get { return candidate_; }
      set {
        candidate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 4;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 5;
    private global::AElf.Client.Proto.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    /// <summary>Field number for the "lock_time" field.</summary>
    public const int LockTimeFieldNumber = 7;
    private long lockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LockTime {
      get { return lockTime_; }
      set {
        lockTime_ = value;
      }
    }

    /// <summary>Field number for the "unlock_timestamp" field.</summary>
    public const int UnlockTimestampFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp unlockTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UnlockTimestamp {
      get { return unlockTimestamp_; }
      set {
        unlockTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "withdraw_timestamp" field.</summary>
    public const int WithdrawTimestampFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp withdrawTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WithdrawTimestamp {
      get { return withdrawTimestamp_; }
      set {
        withdrawTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "vote_timestamp" field.</summary>
    public const int VoteTimestampFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp voteTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VoteTimestamp {
      get { return voteTimestamp_; }
      set {
        voteTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "is_withdrawn" field.</summary>
    public const int IsWithdrawnFieldNumber = 13;
    private bool isWithdrawn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWithdrawn {
      get { return isWithdrawn_; }
      set {
        isWithdrawn_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 14;
    private long weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "is_change_target" field.</summary>
    public const int IsChangeTargetFieldNumber = 15;
    private bool isChangeTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChangeTarget {
      get { return isChangeTarget_; }
      set {
        isChangeTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionVotingRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionVotingRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Voter, other.Voter)) return false;
      if (Candidate != other.Candidate) return false;
      if (Amount != other.Amount) return false;
      if (TermNumber != other.TermNumber) return false;
      if (!object.Equals(VoteId, other.VoteId)) return false;
      if (LockTime != other.LockTime) return false;
      if (!object.Equals(UnlockTimestamp, other.UnlockTimestamp)) return false;
      if (!object.Equals(WithdrawTimestamp, other.WithdrawTimestamp)) return false;
      if (!object.Equals(VoteTimestamp, other.VoteTimestamp)) return false;
      if (IsWithdrawn != other.IsWithdrawn) return false;
      if (Weight != other.Weight) return false;
      if (IsChangeTarget != other.IsChangeTarget) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (Candidate.Length != 0) hash ^= Candidate.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (LockTime != 0L) hash ^= LockTime.GetHashCode();
      if (unlockTimestamp_ != null) hash ^= UnlockTimestamp.GetHashCode();
      if (withdrawTimestamp_ != null) hash ^= WithdrawTimestamp.GetHashCode();
      if (voteTimestamp_ != null) hash ^= VoteTimestamp.GetHashCode();
      if (IsWithdrawn != false) hash ^= IsWithdrawn.GetHashCode();
      if (Weight != 0L) hash ^= Weight.GetHashCode();
      if (IsChangeTarget != false) hash ^= IsChangeTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Voter);
      }
      if (Candidate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Candidate);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(Amount);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(TermNumber);
      }
      if (voteId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VoteId);
      }
      if (LockTime != 0L) {
        output.WriteRawTag(56);
        output.WriteSInt64(LockTime);
      }
      if (unlockTimestamp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UnlockTimestamp);
      }
      if (withdrawTimestamp_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsWithdrawn);
      }
      if (Weight != 0L) {
        output.WriteRawTag(112);
        output.WriteSInt64(Weight);
      }
      if (IsChangeTarget != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsChangeTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (Candidate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Candidate);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Amount);
      }
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TermNumber);
      }
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (LockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(LockTime);
      }
      if (unlockTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockTimestamp);
      }
      if (withdrawTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        size += 1 + 1;
      }
      if (Weight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Weight);
      }
      if (IsChangeTarget != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionVotingRecord other) {
      if (other == null) {
        return;
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Client.Proto.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      if (other.Candidate.Length != 0) {
        Candidate = other.Candidate;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Client.Proto.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      if (other.LockTime != 0L) {
        LockTime = other.LockTime;
      }
      if (other.unlockTimestamp_ != null) {
        if (unlockTimestamp_ == null) {
          UnlockTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UnlockTimestamp.MergeFrom(other.UnlockTimestamp);
      }
      if (other.withdrawTimestamp_ != null) {
        if (withdrawTimestamp_ == null) {
          WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WithdrawTimestamp.MergeFrom(other.WithdrawTimestamp);
      }
      if (other.voteTimestamp_ != null) {
        if (voteTimestamp_ == null) {
          VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VoteTimestamp.MergeFrom(other.VoteTimestamp);
      }
      if (other.IsWithdrawn != false) {
        IsWithdrawn = other.IsWithdrawn;
      }
      if (other.Weight != 0L) {
        Weight = other.Weight;
      }
      if (other.IsChangeTarget != false) {
        IsChangeTarget = other.IsChangeTarget;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voter_ == null) {
              Voter = new global::AElf.Client.Proto.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 18: {
            Candidate = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadSInt64();
            break;
          }
          case 32: {
            TermNumber = input.ReadSInt64();
            break;
          }
          case 42: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
          case 56: {
            LockTime = input.ReadSInt64();
            break;
          }
          case 82: {
            if (unlockTimestamp_ == null) {
              UnlockTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTimestamp);
            break;
          }
          case 90: {
            if (withdrawTimestamp_ == null) {
              WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WithdrawTimestamp);
            break;
          }
          case 98: {
            if (voteTimestamp_ == null) {
              VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VoteTimestamp);
            break;
          }
          case 104: {
            IsWithdrawn = input.ReadBool();
            break;
          }
          case 112: {
            Weight = input.ReadSInt64();
            break;
          }
          case 120: {
            IsChangeTarget = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CandidateVote : pb::IMessage<CandidateVote> {
    private static readonly pb::MessageParser<CandidateVote> _parser = new pb::MessageParser<CandidateVote>(() => new CandidateVote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateVote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateVote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateVote(CandidateVote other) : this() {
      obtainedActiveVotingRecordIds_ = other.obtainedActiveVotingRecordIds_.Clone();
      obtainedWithdrawnVotingRecordIds_ = other.obtainedWithdrawnVotingRecordIds_.Clone();
      obtainedActiveVotedVotesAmount_ = other.obtainedActiveVotedVotesAmount_;
      allObtainedVotedVotesAmount_ = other.allObtainedVotedVotesAmount_;
      obtainedActiveVotingRecords_ = other.obtainedActiveVotingRecords_.Clone();
      obtainedWithdrawnVotesRecords_ = other.obtainedWithdrawnVotesRecords_.Clone();
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateVote Clone() {
      return new CandidateVote(this);
    }

    /// <summary>Field number for the "obtained_active_voting_record_ids" field.</summary>
    public const int ObtainedActiveVotingRecordIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.Hash> _repeated_obtainedActiveVotingRecordIds_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Proto.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.Hash> obtainedActiveVotingRecordIds_ = new pbc::RepeatedField<global::AElf.Client.Proto.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.Hash> ObtainedActiveVotingRecordIds {
      get { return obtainedActiveVotingRecordIds_; }
    }

    /// <summary>Field number for the "obtained_withdrawn_voting_record_ids" field.</summary>
    public const int ObtainedWithdrawnVotingRecordIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.Hash> _repeated_obtainedWithdrawnVotingRecordIds_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Client.Proto.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.Hash> obtainedWithdrawnVotingRecordIds_ = new pbc::RepeatedField<global::AElf.Client.Proto.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.Hash> ObtainedWithdrawnVotingRecordIds {
      get { return obtainedWithdrawnVotingRecordIds_; }
    }

    /// <summary>Field number for the "obtained_active_voted_votes_amount" field.</summary>
    public const int ObtainedActiveVotedVotesAmountFieldNumber = 3;
    private long obtainedActiveVotedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObtainedActiveVotedVotesAmount {
      get { return obtainedActiveVotedVotesAmount_; }
      set {
        obtainedActiveVotedVotesAmount_ = value;
      }
    }

    /// <summary>Field number for the "all_obtained_voted_votes_amount" field.</summary>
    public const int AllObtainedVotedVotesAmountFieldNumber = 4;
    private long allObtainedVotedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AllObtainedVotedVotesAmount {
      get { return allObtainedVotedVotesAmount_; }
      set {
        allObtainedVotedVotesAmount_ = value;
      }
    }

    /// <summary>Field number for the "obtained_active_voting_records" field.</summary>
    public const int ObtainedActiveVotingRecordsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::AElf.Client.Election.ElectionVotingRecord> _repeated_obtainedActiveVotingRecords_codec
        = pb::FieldCodec.ForMessage(42, global::AElf.Client.Election.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord> obtainedActiveVotingRecords_ = new pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord> ObtainedActiveVotingRecords {
      get { return obtainedActiveVotingRecords_; }
    }

    /// <summary>Field number for the "obtained_withdrawn_votes_records" field.</summary>
    public const int ObtainedWithdrawnVotesRecordsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::AElf.Client.Election.ElectionVotingRecord> _repeated_obtainedWithdrawnVotesRecords_codec
        = pb::FieldCodec.ForMessage(50, global::AElf.Client.Election.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord> obtainedWithdrawnVotesRecords_ = new pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Election.ElectionVotingRecord> ObtainedWithdrawnVotesRecords {
      get { return obtainedWithdrawnVotesRecords_; }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 7;
    private pb::ByteString pubkey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateVote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateVote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!obtainedActiveVotingRecordIds_.Equals(other.obtainedActiveVotingRecordIds_)) return false;
      if(!obtainedWithdrawnVotingRecordIds_.Equals(other.obtainedWithdrawnVotingRecordIds_)) return false;
      if (ObtainedActiveVotedVotesAmount != other.ObtainedActiveVotedVotesAmount) return false;
      if (AllObtainedVotedVotesAmount != other.AllObtainedVotedVotesAmount) return false;
      if(!obtainedActiveVotingRecords_.Equals(other.obtainedActiveVotingRecords_)) return false;
      if(!obtainedWithdrawnVotesRecords_.Equals(other.obtainedWithdrawnVotesRecords_)) return false;
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= obtainedActiveVotingRecordIds_.GetHashCode();
      hash ^= obtainedWithdrawnVotingRecordIds_.GetHashCode();
      if (ObtainedActiveVotedVotesAmount != 0L) hash ^= ObtainedActiveVotedVotesAmount.GetHashCode();
      if (AllObtainedVotedVotesAmount != 0L) hash ^= AllObtainedVotedVotesAmount.GetHashCode();
      hash ^= obtainedActiveVotingRecords_.GetHashCode();
      hash ^= obtainedWithdrawnVotesRecords_.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      obtainedActiveVotingRecordIds_.WriteTo(output, _repeated_obtainedActiveVotingRecordIds_codec);
      obtainedWithdrawnVotingRecordIds_.WriteTo(output, _repeated_obtainedWithdrawnVotingRecordIds_codec);
      if (ObtainedActiveVotedVotesAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(ObtainedActiveVotedVotesAmount);
      }
      if (AllObtainedVotedVotesAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(AllObtainedVotedVotesAmount);
      }
      obtainedActiveVotingRecords_.WriteTo(output, _repeated_obtainedActiveVotingRecords_codec);
      obtainedWithdrawnVotesRecords_.WriteTo(output, _repeated_obtainedWithdrawnVotesRecords_codec);
      if (Pubkey.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += obtainedActiveVotingRecordIds_.CalculateSize(_repeated_obtainedActiveVotingRecordIds_codec);
      size += obtainedWithdrawnVotingRecordIds_.CalculateSize(_repeated_obtainedWithdrawnVotingRecordIds_codec);
      if (ObtainedActiveVotedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ObtainedActiveVotedVotesAmount);
      }
      if (AllObtainedVotedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(AllObtainedVotedVotesAmount);
      }
      size += obtainedActiveVotingRecords_.CalculateSize(_repeated_obtainedActiveVotingRecords_codec);
      size += obtainedWithdrawnVotesRecords_.CalculateSize(_repeated_obtainedWithdrawnVotesRecords_codec);
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateVote other) {
      if (other == null) {
        return;
      }
      obtainedActiveVotingRecordIds_.Add(other.obtainedActiveVotingRecordIds_);
      obtainedWithdrawnVotingRecordIds_.Add(other.obtainedWithdrawnVotingRecordIds_);
      if (other.ObtainedActiveVotedVotesAmount != 0L) {
        ObtainedActiveVotedVotesAmount = other.ObtainedActiveVotedVotesAmount;
      }
      if (other.AllObtainedVotedVotesAmount != 0L) {
        AllObtainedVotedVotesAmount = other.AllObtainedVotedVotesAmount;
      }
      obtainedActiveVotingRecords_.Add(other.obtainedActiveVotingRecords_);
      obtainedWithdrawnVotesRecords_.Add(other.obtainedWithdrawnVotesRecords_);
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            obtainedActiveVotingRecordIds_.AddEntriesFrom(input, _repeated_obtainedActiveVotingRecordIds_codec);
            break;
          }
          case 18: {
            obtainedWithdrawnVotingRecordIds_.AddEntriesFrom(input, _repeated_obtainedWithdrawnVotingRecordIds_codec);
            break;
          }
          case 24: {
            ObtainedActiveVotedVotesAmount = input.ReadSInt64();
            break;
          }
          case 32: {
            AllObtainedVotedVotesAmount = input.ReadSInt64();
            break;
          }
          case 42: {
            obtainedActiveVotingRecords_.AddEntriesFrom(input, _repeated_obtainedActiveVotingRecords_codec);
            break;
          }
          case 50: {
            obtainedWithdrawnVotesRecords_.AddEntriesFrom(input, _repeated_obtainedWithdrawnVotesRecords_codec);
            break;
          }
          case 58: {
            Pubkey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWelfareRewardAmountSampleInput : pb::IMessage<GetWelfareRewardAmountSampleInput> {
    private static readonly pb::MessageParser<GetWelfareRewardAmountSampleInput> _parser = new pb::MessageParser<GetWelfareRewardAmountSampleInput>(() => new GetWelfareRewardAmountSampleInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWelfareRewardAmountSampleInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleInput(GetWelfareRewardAmountSampleInput other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleInput Clone() {
      return new GetWelfareRewardAmountSampleInput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForSInt64(10);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWelfareRewardAmountSampleInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWelfareRewardAmountSampleInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWelfareRewardAmountSampleInput other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWelfareRewardAmountSampleOutput : pb::IMessage<GetWelfareRewardAmountSampleOutput> {
    private static readonly pb::MessageParser<GetWelfareRewardAmountSampleOutput> _parser = new pb::MessageParser<GetWelfareRewardAmountSampleOutput>(() => new GetWelfareRewardAmountSampleOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWelfareRewardAmountSampleOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleOutput(GetWelfareRewardAmountSampleOutput other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleOutput Clone() {
      return new GetWelfareRewardAmountSampleOutput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForSInt64(10);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWelfareRewardAmountSampleOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWelfareRewardAmountSampleOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWelfareRewardAmountSampleOutput other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PageInformation : pb::IMessage<PageInformation> {
    private static readonly pb::MessageParser<PageInformation> _parser = new pb::MessageParser<PageInformation>(() => new PageInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PageInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInformation(PageInformation other) : this() {
      start_ = other.start_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInformation Clone() {
      return new PageInformation(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PageInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PageInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Start);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Start);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PageInformation other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadSInt32();
            break;
          }
          case 16: {
            Length = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CandidateDetail : pb::IMessage<CandidateDetail> {
    private static readonly pb::MessageParser<CandidateDetail> _parser = new pb::MessageParser<CandidateDetail>(() => new CandidateDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateDetail(CandidateDetail other) : this() {
      candidateInformation_ = other.candidateInformation_ != null ? other.candidateInformation_.Clone() : null;
      obtainedVotesAmount_ = other.obtainedVotesAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateDetail Clone() {
      return new CandidateDetail(this);
    }

    /// <summary>Field number for the "candidate_information" field.</summary>
    public const int CandidateInformationFieldNumber = 1;
    private global::AElf.Client.Election.CandidateInformation candidateInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Election.CandidateInformation CandidateInformation {
      get { return candidateInformation_; }
      set {
        candidateInformation_ = value;
      }
    }

    /// <summary>Field number for the "obtained_votes_amount" field.</summary>
    public const int ObtainedVotesAmountFieldNumber = 2;
    private long obtainedVotesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObtainedVotesAmount {
      get { return obtainedVotesAmount_; }
      set {
        obtainedVotesAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CandidateInformation, other.CandidateInformation)) return false;
      if (ObtainedVotesAmount != other.ObtainedVotesAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (candidateInformation_ != null) hash ^= CandidateInformation.GetHashCode();
      if (ObtainedVotesAmount != 0L) hash ^= ObtainedVotesAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (candidateInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CandidateInformation);
      }
      if (ObtainedVotesAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(ObtainedVotesAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (candidateInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CandidateInformation);
      }
      if (ObtainedVotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ObtainedVotesAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateDetail other) {
      if (other == null) {
        return;
      }
      if (other.candidateInformation_ != null) {
        if (candidateInformation_ == null) {
          CandidateInformation = new global::AElf.Client.Election.CandidateInformation();
        }
        CandidateInformation.MergeFrom(other.CandidateInformation);
      }
      if (other.ObtainedVotesAmount != 0L) {
        ObtainedVotesAmount = other.ObtainedVotesAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (candidateInformation_ == null) {
              CandidateInformation = new global::AElf.Client.Election.CandidateInformation();
            }
            input.ReadMessage(CandidateInformation);
            break;
          }
          case 16: {
            ObtainedVotesAmount = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPageableCandidateInformationOutput : pb::IMessage<GetPageableCandidateInformationOutput> {
    private static readonly pb::MessageParser<GetPageableCandidateInformationOutput> _parser = new pb::MessageParser<GetPageableCandidateInformationOutput>(() => new GetPageableCandidateInformationOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPageableCandidateInformationOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPageableCandidateInformationOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPageableCandidateInformationOutput(GetPageableCandidateInformationOutput other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPageableCandidateInformationOutput Clone() {
      return new GetPageableCandidateInformationOutput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Election.CandidateDetail> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Election.CandidateDetail.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Election.CandidateDetail> value_ = new pbc::RepeatedField<global::AElf.Client.Election.CandidateDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Election.CandidateDetail> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPageableCandidateInformationOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPageableCandidateInformationOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPageableCandidateInformationOutput other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataCenterRankingList : pb::IMessage<DataCenterRankingList> {
    private static readonly pb::MessageParser<DataCenterRankingList> _parser = new pb::MessageParser<DataCenterRankingList>(() => new DataCenterRankingList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataCenterRankingList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Election.ElectionContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenterRankingList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenterRankingList(DataCenterRankingList other) : this() {
      dataCenters_ = other.dataCenters_.Clone();
      minimumVotes_ = other.minimumVotes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenterRankingList Clone() {
      return new DataCenterRankingList(this);
    }

    /// <summary>Field number for the "data_centers" field.</summary>
    public const int DataCentersFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_dataCenters_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForSInt64(16), 10);
    private readonly pbc::MapField<string, long> dataCenters_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> DataCenters {
      get { return dataCenters_; }
    }

    /// <summary>Field number for the "minimum_votes" field.</summary>
    public const int MinimumVotesFieldNumber = 2;
    private long minimumVotes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinimumVotes {
      get { return minimumVotes_; }
      set {
        minimumVotes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataCenterRankingList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataCenterRankingList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DataCenters.Equals(other.DataCenters)) return false;
      if (MinimumVotes != other.MinimumVotes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DataCenters.GetHashCode();
      if (MinimumVotes != 0L) hash ^= MinimumVotes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dataCenters_.WriteTo(output, _map_dataCenters_codec);
      if (MinimumVotes != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(MinimumVotes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dataCenters_.CalculateSize(_map_dataCenters_codec);
      if (MinimumVotes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(MinimumVotes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataCenterRankingList other) {
      if (other == null) {
        return;
      }
      dataCenters_.Add(other.dataCenters_);
      if (other.MinimumVotes != 0L) {
        MinimumVotes = other.MinimumVotes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dataCenters_.AddEntriesFrom(input, _map_dataCenters_codec);
            break;
          }
          case 16: {
            MinimumVotes = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
