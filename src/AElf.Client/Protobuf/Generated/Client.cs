// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Client.Proto {

  /// <summary>Holder for reflection information generated from client.proto</summary>
  public static partial class ClientReflection {

    #region Descriptor
    /// <summary>File descriptor for client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxjbGllbnQucHJvdG8SBmNsaWVudBofZ29vZ2xlL3Byb3RvYnVmL3RpbWVz",
            "dGFtcC5wcm90byIYCgdBZGRyZXNzEg0KBXZhbHVlGAEgASgMIhUKBEhhc2gS",
            "DQoFdmFsdWUYASABKAwiPwoKTWVya2xlUGF0aBIxChFtZXJrbGVfcGF0aF9u",
            "b2RlcxgBIAMoCzIWLmNsaWVudC5NZXJrbGVQYXRoTm9kZSJICg5NZXJrbGVQ",
            "YXRoTm9kZRIaCgRoYXNoGAEgASgLMgwuY2xpZW50Lkhhc2gSGgoSaXNfbGVm",
            "dF9jaGlsZF9ub2RlGAIgASgIIl8KEEJpbmFyeU1lcmtsZVRyZWUSGwoFbm9k",
            "ZXMYASADKAsyDC5jbGllbnQuSGFzaBIaCgRyb290GAIgASgLMgwuY2xpZW50",
            "Lkhhc2gSEgoKbGVhZl9jb3VudBgDIAEoBSJUCg9TY29wZWRTdGF0ZVBhdGgS",
            "IAoHYWRkcmVzcxgBIAEoCzIPLmNsaWVudC5BZGRyZXNzEh8KBHBhdGgYAiAB",
            "KAsyES5jbGllbnQuU3RhdGVQYXRoIhoKCVN0YXRlUGF0aBINCgVwYXJ0cxgB",
            "IAMoCSJcChlTbWFydENvbnRyYWN0UmVnaXN0cmF0aW9uEhAKCGNhdGVnb3J5",
            "GAEgASgFEgwKBGNvZGUYAiABKAwSHwoJY29kZV9oYXNoGAMgASgLMgwuY2xp",
            "ZW50Lkhhc2gidAoMQ29udHJhY3RJbmZvEhUKDXNlcmlhbF9udW1iZXIYASAB",
            "KAQSEAoIY2F0ZWdvcnkYAyABKAUSHwoJY29kZV9oYXNoGAQgASgLMgwuY2xp",
            "ZW50Lkhhc2gSGgoSaXNfc3lzdGVtX2NvbnRyYWN0GAUgASgIIkIKCk1ldGhv",
            "ZEZlZXMSEwoLbWV0aG9kX25hbWUYASABKAkSHwoEZmVlcxgCIAMoCzIRLmNs",
            "aWVudC5NZXRob2RGZWUiLgoJTWV0aG9kRmVlEg4KBnN5bWJvbBgBIAEoCRIR",
            "CgliYXNpY19mZWUYAiABKBIiUgoMUmVzb3VyY2VJbmZvEiYKBXBhdGhzGAEg",
            "AygLMhcuY2xpZW50LlNjb3BlZFN0YXRlUGF0aBIaChJub25fcGFyYWxsZWxp",
            "emFibGUYAiABKAgiogIKDlByb3Bvc2FsT3V0cHV0EiEKC3Byb3Bvc2FsX2lk",
            "GAEgASgLMgwuY2xpZW50Lkhhc2gSHAoUY29udHJhY3RfbWV0aG9kX25hbWUY",
            "AiABKAkSIwoKdG9fYWRkcmVzcxgDIAEoCzIPLmNsaWVudC5BZGRyZXNzEg4K",
            "BnBhcmFtcxgEIAEoDBIwCgxleHBpcmVkX3RpbWUYBSABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEi0KFG9yZ2FuaXphdGlvbl9hZGRyZXNzGAYg",
            "ASgLMg8uY2xpZW50LkFkZHJlc3MSIQoIcHJvcG9zZXIYByABKAsyDy5jbGll",
            "bnQuQWRkcmVzcxIWCg50b19iZV9yZWxlYXNlZBgIIAEoCCI0ChBWYWxpZGF0",
            "aW9uUmVzdWx0Eg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSLX",
            "AQoWTWV0aG9kQ2FsbGluZ1RocmVzaG9sZBJMChBzeW1ib2xfdG9fYW1vdW50",
            "GAEgAygLMjIuY2xpZW50Lk1ldGhvZENhbGxpbmdUaHJlc2hvbGQuU3ltYm9s",
            "VG9BbW91bnRFbnRyeRI4ChR0aHJlc2hvbGRfY2hlY2tfdHlwZRgCIAEoDjIa",
            "LmNsaWVudC5UaHJlc2hvbGRDaGVja1R5cGUaNQoTU3ltYm9sVG9BbW91bnRF",
            "bnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKBI6AjgBIpsBChhTaWRl",
            "Q2hhaW5JZEFuZEhlaWdodERpY3QSSgoOaWRfaGVpZ2h0X2RpY3QYASADKAsy",
            "Mi5jbGllbnQuU2lkZUNoYWluSWRBbmRIZWlnaHREaWN0LklkSGVpZ2h0RGlj",
            "dEVudHJ5GjMKEUlkSGVpZ2h0RGljdEVudHJ5EgsKA2tleRgBIAEoBRINCgV2",
            "YWx1ZRgCIAEoAzoCOAEiawogU2lkZUNoYWluSW5kZXhpbmdJbmZvcm1hdGlv",
            "bkxpc3QSRwoZaW5kZXhpbmdfaW5mb3JtYXRpb25fbGlzdBgBIAMoCzIkLmNs",
            "aWVudC5TaWRlQ2hhaW5JbmRleGluZ0luZm9ybWF0aW9uImUKHFNpZGVDaGFp",
            "bkluZGV4aW5nSW5mb3JtYXRpb24SEAoIY2hhaW5faWQYASABKAUSFgoOaW5k",
            "ZXhlZF9oZWlnaHQYAiABKAMSGwoTdG9fYmVfaW5kZXhlZF9jb3VudBgDIAEo",
            "AyKuAQoTQ3Jvc3NDaGFpbkJsb2NrRGF0YRI5ChVzaWRlX2NoYWluX2Jsb2Nr",
            "X2RhdGEYASADKAsyGi5jbGllbnQuU2lkZUNoYWluQmxvY2tEYXRhEj0KF3Bh",
            "cmVudF9jaGFpbl9ibG9ja19kYXRhGAIgAygLMhwuY2xpZW50LlBhcmVudENo",
            "YWluQmxvY2tEYXRhEh0KFXByZXZpb3VzX2Jsb2NrX2hlaWdodBgDIAEoAyKa",
            "AQoSU2lkZUNoYWluQmxvY2tEYXRhEg4KBmhlaWdodBgBIAEoAxInChFibG9j",
            "a19oZWFkZXJfaGFzaBgCIAEoCzIMLmNsaWVudC5IYXNoEjkKI3RyYW5zYWN0",
            "aW9uX3N0YXR1c19tZXJrbGVfdHJlZV9yb290GAMgASgLMgwuY2xpZW50Lkhh",
            "c2gSEAoIY2hhaW5faWQYBCABKAUiwwMKFFBhcmVudENoYWluQmxvY2tEYXRh",
            "Eg4KBmhlaWdodBgBIAEoAxI7ChZjcm9zc19jaGFpbl9leHRyYV9kYXRhGAIg",
            "ASgLMhsuY2xpZW50LkNyb3NzQ2hhaW5FeHRyYURhdGESEAoIY2hhaW5faWQY",
            "AyABKAUSOQojdHJhbnNhY3Rpb25fc3RhdHVzX21lcmtsZV90cmVlX3Jvb3QY",
            "BCABKAsyDC5jbGllbnQuSGFzaBJQChNpbmRleGVkX21lcmtsZV9wYXRoGAUg",
            "AygLMjMuY2xpZW50LlBhcmVudENoYWluQmxvY2tEYXRhLkluZGV4ZWRNZXJr",
            "bGVQYXRoRW50cnkSPwoKZXh0cmFfZGF0YRgGIAMoCzIrLmNsaWVudC5QYXJl",
            "bnRDaGFpbkJsb2NrRGF0YS5FeHRyYURhdGFFbnRyeRpMChZJbmRleGVkTWVy",
            "a2xlUGF0aEVudHJ5EgsKA2tleRgBIAEoAxIhCgV2YWx1ZRgCIAEoCzISLmNs",
            "aWVudC5NZXJrbGVQYXRoOgI4ARowCg5FeHRyYURhdGFFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAw6AjgBIlAKE0Nyb3NzQ2hhaW5FeHRyYURh",
            "dGESOQojdHJhbnNhY3Rpb25fc3RhdHVzX21lcmtsZV90cmVlX3Jvb3QYASAB",
            "KAsyDC5jbGllbnQuSGFzaCJWChlJbmRleGVkU2lkZUNoYWluQmxvY2tEYXRh",
            "EjkKFXNpZGVfY2hhaW5fYmxvY2tfZGF0YRgBIAMoCzIaLmNsaWVudC5TaWRl",
            "Q2hhaW5CbG9ja0RhdGEifAocQ3Jvc3NDaGFpbk1lcmtsZVByb29mQ29udGV4",
            "dBIhChlib3VuZF9wYXJlbnRfY2hhaW5faGVpZ2h0GAEgASgDEjkKHW1lcmts",
            "ZV9wYXRoX2Zyb21fcGFyZW50X2NoYWluGAIgASgLMhIuY2xpZW50Lk1lcmts",
            "ZVBhdGgilQIKF0NoYWluSW5pdGlhbGl6YXRpb25EYXRhEhAKCGNoYWluX2lk",
            "GAEgASgFEiAKB2NyZWF0b3IYAiABKAsyDy5jbGllbnQuQWRkcmVzcxI2ChJj",
            "cmVhdGlvbl90aW1lc3RhbXAYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wEhkKEWV4dHJhX2luZm9ybWF0aW9uGAQgAygMEicKH2NyZWF0aW9u",
            "X2hlaWdodF9vbl9wYXJlbnRfY2hhaW4YBSABKAMSKQohY2hhaW5fY3JlYXRv",
            "cl9wcml2aWxlZ2VfcHJlc2VydmVkGAYgASgIEh8KF3NpZGVfY2hhaW5fdG9r",
            "ZW5fc3ltYm9sGAcgASgJKjAKElRocmVzaG9sZENoZWNrVHlwZRILCgdCQUxB",
            "TkNFEAASDQoJQUxMT1dBTkNFEAFCFKoCEUFFbGYuQ2xpZW50LlByb3RvYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.Client.Proto.ThresholdCheckType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.Address), global::AElf.Client.Proto.Address.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.Hash), global::AElf.Client.Proto.Hash.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.MerklePath), global::AElf.Client.Proto.MerklePath.Parser, new[]{ "MerklePathNodes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.MerklePathNode), global::AElf.Client.Proto.MerklePathNode.Parser, new[]{ "Hash", "IsLeftChildNode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.BinaryMerkleTree), global::AElf.Client.Proto.BinaryMerkleTree.Parser, new[]{ "Nodes", "Root", "LeafCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.ScopedStatePath), global::AElf.Client.Proto.ScopedStatePath.Parser, new[]{ "Address", "Path" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.StatePath), global::AElf.Client.Proto.StatePath.Parser, new[]{ "Parts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.SmartContractRegistration), global::AElf.Client.Proto.SmartContractRegistration.Parser, new[]{ "Category", "Code", "CodeHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.ContractInfo), global::AElf.Client.Proto.ContractInfo.Parser, new[]{ "SerialNumber", "Category", "CodeHash", "IsSystemContract" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.MethodFees), global::AElf.Client.Proto.MethodFees.Parser, new[]{ "MethodName", "Fees" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.MethodFee), global::AElf.Client.Proto.MethodFee.Parser, new[]{ "Symbol", "BasicFee" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.ResourceInfo), global::AElf.Client.Proto.ResourceInfo.Parser, new[]{ "Paths", "NonParallelizable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.ProposalOutput), global::AElf.Client.Proto.ProposalOutput.Parser, new[]{ "ProposalId", "ContractMethodName", "ToAddress", "Params", "ExpiredTime", "OrganizationAddress", "Proposer", "ToBeReleased" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.ValidationResult), global::AElf.Client.Proto.ValidationResult.Parser, new[]{ "Success", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.MethodCallingThreshold), global::AElf.Client.Proto.MethodCallingThreshold.Parser, new[]{ "SymbolToAmount", "ThresholdCheckType" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.SideChainIdAndHeightDict), global::AElf.Client.Proto.SideChainIdAndHeightDict.Parser, new[]{ "IdHeightDict" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.SideChainIndexingInformationList), global::AElf.Client.Proto.SideChainIndexingInformationList.Parser, new[]{ "IndexingInformationList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.SideChainIndexingInformation), global::AElf.Client.Proto.SideChainIndexingInformation.Parser, new[]{ "ChainId", "IndexedHeight", "ToBeIndexedCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.CrossChainBlockData), global::AElf.Client.Proto.CrossChainBlockData.Parser, new[]{ "SideChainBlockData", "ParentChainBlockData", "PreviousBlockHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.SideChainBlockData), global::AElf.Client.Proto.SideChainBlockData.Parser, new[]{ "Height", "BlockHeaderHash", "TransactionStatusMerkleTreeRoot", "ChainId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.ParentChainBlockData), global::AElf.Client.Proto.ParentChainBlockData.Parser, new[]{ "Height", "CrossChainExtraData", "ChainId", "TransactionStatusMerkleTreeRoot", "IndexedMerklePath", "ExtraData" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.CrossChainExtraData), global::AElf.Client.Proto.CrossChainExtraData.Parser, new[]{ "TransactionStatusMerkleTreeRoot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.IndexedSideChainBlockData), global::AElf.Client.Proto.IndexedSideChainBlockData.Parser, new[]{ "SideChainBlockData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.CrossChainMerkleProofContext), global::AElf.Client.Proto.CrossChainMerkleProofContext.Parser, new[]{ "BoundParentChainHeight", "MerklePathFromParentChain" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Client.Proto.ChainInitializationData), global::AElf.Client.Proto.ChainInitializationData.Parser, new[]{ "ChainId", "Creator", "CreationTimestamp", "ExtraInformation", "CreationHeightOnParentChain", "ChainCreatorPrivilegePreserved", "SideChainTokenSymbol" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ThresholdCheckType {
    [pbr::OriginalName("BALANCE")] Balance = 0,
    [pbr::OriginalName("ALLOWANCE")] Allowance = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Hash : pb::IMessage<Hash> {
    private static readonly pb::MessageParser<Hash> _parser = new pb::MessageParser<Hash>(() => new Hash());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hash> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash(Hash other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash Clone() {
      return new Hash(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hash);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hash other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MerklePath : pb::IMessage<MerklePath> {
    private static readonly pb::MessageParser<MerklePath> _parser = new pb::MessageParser<MerklePath>(() => new MerklePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MerklePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerklePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerklePath(MerklePath other) : this() {
      merklePathNodes_ = other.merklePathNodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerklePath Clone() {
      return new MerklePath(this);
    }

    /// <summary>Field number for the "merkle_path_nodes" field.</summary>
    public const int MerklePathNodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.MerklePathNode> _repeated_merklePathNodes_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Proto.MerklePathNode.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.MerklePathNode> merklePathNodes_ = new pbc::RepeatedField<global::AElf.Client.Proto.MerklePathNode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.MerklePathNode> MerklePathNodes {
      get { return merklePathNodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MerklePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MerklePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!merklePathNodes_.Equals(other.merklePathNodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= merklePathNodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      merklePathNodes_.WriteTo(output, _repeated_merklePathNodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += merklePathNodes_.CalculateSize(_repeated_merklePathNodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MerklePath other) {
      if (other == null) {
        return;
      }
      merklePathNodes_.Add(other.merklePathNodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            merklePathNodes_.AddEntriesFrom(input, _repeated_merklePathNodes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MerklePathNode : pb::IMessage<MerklePathNode> {
    private static readonly pb::MessageParser<MerklePathNode> _parser = new pb::MessageParser<MerklePathNode>(() => new MerklePathNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MerklePathNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerklePathNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerklePathNode(MerklePathNode other) : this() {
      hash_ = other.hash_ != null ? other.hash_.Clone() : null;
      isLeftChildNode_ = other.isLeftChildNode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerklePathNode Clone() {
      return new MerklePathNode(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::AElf.Client.Proto.Hash hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    /// <summary>Field number for the "is_left_child_node" field.</summary>
    public const int IsLeftChildNodeFieldNumber = 2;
    private bool isLeftChildNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLeftChildNode {
      get { return isLeftChildNode_; }
      set {
        isLeftChildNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MerklePathNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MerklePathNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hash, other.Hash)) return false;
      if (IsLeftChildNode != other.IsLeftChildNode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (IsLeftChildNode != false) hash ^= IsLeftChildNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hash);
      }
      if (IsLeftChildNode != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsLeftChildNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (IsLeftChildNode != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MerklePathNode other) {
      if (other == null) {
        return;
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          Hash = new global::AElf.Client.Proto.Hash();
        }
        Hash.MergeFrom(other.Hash);
      }
      if (other.IsLeftChildNode != false) {
        IsLeftChildNode = other.IsLeftChildNode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hash_ == null) {
              Hash = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(Hash);
            break;
          }
          case 16: {
            IsLeftChildNode = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BinaryMerkleTree : pb::IMessage<BinaryMerkleTree> {
    private static readonly pb::MessageParser<BinaryMerkleTree> _parser = new pb::MessageParser<BinaryMerkleTree>(() => new BinaryMerkleTree());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BinaryMerkleTree> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryMerkleTree() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryMerkleTree(BinaryMerkleTree other) : this() {
      nodes_ = other.nodes_.Clone();
      root_ = other.root_ != null ? other.root_.Clone() : null;
      leafCount_ = other.leafCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryMerkleTree Clone() {
      return new BinaryMerkleTree(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.Hash> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Proto.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.Hash> nodes_ = new pbc::RepeatedField<global::AElf.Client.Proto.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.Hash> Nodes {
      get { return nodes_; }
    }

    /// <summary>Field number for the "root" field.</summary>
    public const int RootFieldNumber = 2;
    private global::AElf.Client.Proto.Hash root_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash Root {
      get { return root_; }
      set {
        root_ = value;
      }
    }

    /// <summary>Field number for the "leaf_count" field.</summary>
    public const int LeafCountFieldNumber = 3;
    private int leafCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeafCount {
      get { return leafCount_; }
      set {
        leafCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BinaryMerkleTree);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BinaryMerkleTree other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      if (!object.Equals(Root, other.Root)) return false;
      if (LeafCount != other.LeafCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (root_ != null) hash ^= Root.GetHashCode();
      if (LeafCount != 0) hash ^= LeafCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (root_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Root);
      }
      if (LeafCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LeafCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (root_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Root);
      }
      if (LeafCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeafCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BinaryMerkleTree other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      if (other.root_ != null) {
        if (root_ == null) {
          Root = new global::AElf.Client.Proto.Hash();
        }
        Root.MergeFrom(other.Root);
      }
      if (other.LeafCount != 0) {
        LeafCount = other.LeafCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
          case 18: {
            if (root_ == null) {
              Root = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(Root);
            break;
          }
          case 24: {
            LeafCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScopedStatePath : pb::IMessage<ScopedStatePath> {
    private static readonly pb::MessageParser<ScopedStatePath> _parser = new pb::MessageParser<ScopedStatePath>(() => new ScopedStatePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScopedStatePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScopedStatePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScopedStatePath(ScopedStatePath other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      path_ = other.path_ != null ? other.path_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScopedStatePath Clone() {
      return new ScopedStatePath(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::AElf.Client.Proto.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private global::AElf.Client.Proto.StatePath path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.StatePath Path {
      get { return path_; }
      set {
        path_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScopedStatePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScopedStatePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(Path, other.Path)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (path_ != null) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (path_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (path_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScopedStatePath other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Client.Proto.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.path_ != null) {
        if (path_ == null) {
          Path = new global::AElf.Client.Proto.StatePath();
        }
        Path.MergeFrom(other.Path);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::AElf.Client.Proto.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            if (path_ == null) {
              Path = new global::AElf.Client.Proto.StatePath();
            }
            input.ReadMessage(Path);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StatePath : pb::IMessage<StatePath> {
    private static readonly pb::MessageParser<StatePath> _parser = new pb::MessageParser<StatePath>(() => new StatePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatePath(StatePath other) : this() {
      parts_ = other.parts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatePath Clone() {
      return new StatePath(this);
    }

    /// <summary>Field number for the "parts" field.</summary>
    public const int PartsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_parts_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> parts_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Parts {
      get { return parts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!parts_.Equals(other.parts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= parts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      parts_.WriteTo(output, _repeated_parts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += parts_.CalculateSize(_repeated_parts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatePath other) {
      if (other == null) {
        return;
      }
      parts_.Add(other.parts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            parts_.AddEntriesFrom(input, _repeated_parts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SmartContractRegistration : pb::IMessage<SmartContractRegistration> {
    private static readonly pb::MessageParser<SmartContractRegistration> _parser = new pb::MessageParser<SmartContractRegistration>(() => new SmartContractRegistration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SmartContractRegistration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractRegistration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractRegistration(SmartContractRegistration other) : this() {
      category_ = other.category_;
      code_ = other.code_;
      codeHash_ = other.codeHash_ != null ? other.codeHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContractRegistration Clone() {
      return new SmartContractRegistration(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private int category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private pb::ByteString code_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code_hash" field.</summary>
    public const int CodeHashFieldNumber = 3;
    private global::AElf.Client.Proto.Hash codeHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash CodeHash {
      get { return codeHash_; }
      set {
        codeHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SmartContractRegistration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SmartContractRegistration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if (Code != other.Code) return false;
      if (!object.Equals(CodeHash, other.CodeHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Category != 0) hash ^= Category.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (codeHash_ != null) hash ^= CodeHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Category != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Category);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Code);
      }
      if (codeHash_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CodeHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Category);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Code);
      }
      if (codeHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodeHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SmartContractRegistration other) {
      if (other == null) {
        return;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.codeHash_ != null) {
        if (codeHash_ == null) {
          CodeHash = new global::AElf.Client.Proto.Hash();
        }
        CodeHash.MergeFrom(other.CodeHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Category = input.ReadInt32();
            break;
          }
          case 18: {
            Code = input.ReadBytes();
            break;
          }
          case 26: {
            if (codeHash_ == null) {
              CodeHash = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(CodeHash);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///acs0
  /// </summary>
  public sealed partial class ContractInfo : pb::IMessage<ContractInfo> {
    private static readonly pb::MessageParser<ContractInfo> _parser = new pb::MessageParser<ContractInfo>(() => new ContractInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractInfo(ContractInfo other) : this() {
      serialNumber_ = other.serialNumber_;
      category_ = other.category_;
      codeHash_ = other.codeHash_ != null ? other.codeHash_.Clone() : null;
      isSystemContract_ = other.isSystemContract_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractInfo Clone() {
      return new ContractInfo(this);
    }

    /// <summary>Field number for the "serial_number" field.</summary>
    public const int SerialNumberFieldNumber = 1;
    private ulong serialNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SerialNumber {
      get { return serialNumber_; }
      set {
        serialNumber_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 3;
    private int category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "code_hash" field.</summary>
    public const int CodeHashFieldNumber = 4;
    private global::AElf.Client.Proto.Hash codeHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash CodeHash {
      get { return codeHash_; }
      set {
        codeHash_ = value;
      }
    }

    /// <summary>Field number for the "is_system_contract" field.</summary>
    public const int IsSystemContractFieldNumber = 5;
    private bool isSystemContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSystemContract {
      get { return isSystemContract_; }
      set {
        isSystemContract_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SerialNumber != other.SerialNumber) return false;
      if (Category != other.Category) return false;
      if (!object.Equals(CodeHash, other.CodeHash)) return false;
      if (IsSystemContract != other.IsSystemContract) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SerialNumber != 0UL) hash ^= SerialNumber.GetHashCode();
      if (Category != 0) hash ^= Category.GetHashCode();
      if (codeHash_ != null) hash ^= CodeHash.GetHashCode();
      if (IsSystemContract != false) hash ^= IsSystemContract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SerialNumber != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(SerialNumber);
      }
      if (Category != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Category);
      }
      if (codeHash_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CodeHash);
      }
      if (IsSystemContract != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSystemContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SerialNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SerialNumber);
      }
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Category);
      }
      if (codeHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodeHash);
      }
      if (IsSystemContract != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractInfo other) {
      if (other == null) {
        return;
      }
      if (other.SerialNumber != 0UL) {
        SerialNumber = other.SerialNumber;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.codeHash_ != null) {
        if (codeHash_ == null) {
          CodeHash = new global::AElf.Client.Proto.Hash();
        }
        CodeHash.MergeFrom(other.CodeHash);
      }
      if (other.IsSystemContract != false) {
        IsSystemContract = other.IsSystemContract;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SerialNumber = input.ReadUInt64();
            break;
          }
          case 24: {
            Category = input.ReadInt32();
            break;
          }
          case 34: {
            if (codeHash_ == null) {
              CodeHash = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(CodeHash);
            break;
          }
          case 40: {
            IsSystemContract = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///acs1
  /// </summary>
  public sealed partial class MethodFees : pb::IMessage<MethodFees> {
    private static readonly pb::MessageParser<MethodFees> _parser = new pb::MessageParser<MethodFees>(() => new MethodFees());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodFees> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodFees() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodFees(MethodFees other) : this() {
      methodName_ = other.methodName_;
      fees_ = other.fees_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodFees Clone() {
      return new MethodFees(this);
    }

    /// <summary>Field number for the "method_name" field.</summary>
    public const int MethodNameFieldNumber = 1;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fees" field.</summary>
    public const int FeesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.MethodFee> _repeated_fees_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Client.Proto.MethodFee.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.MethodFee> fees_ = new pbc::RepeatedField<global::AElf.Client.Proto.MethodFee>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.MethodFee> Fees {
      get { return fees_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodFees);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodFees other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodName != other.MethodName) return false;
      if(!fees_.Equals(other.fees_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      hash ^= fees_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MethodName);
      }
      fees_.WriteTo(output, _repeated_fees_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      size += fees_.CalculateSize(_repeated_fees_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodFees other) {
      if (other == null) {
        return;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      fees_.Add(other.fees_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MethodName = input.ReadString();
            break;
          }
          case 18: {
            fees_.AddEntriesFrom(input, _repeated_fees_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MethodFee : pb::IMessage<MethodFee> {
    private static readonly pb::MessageParser<MethodFee> _parser = new pb::MessageParser<MethodFee>(() => new MethodFee());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodFee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodFee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodFee(MethodFee other) : this() {
      symbol_ = other.symbol_;
      basicFee_ = other.basicFee_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodFee Clone() {
      return new MethodFee(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "basic_fee" field.</summary>
    public const int BasicFeeFieldNumber = 2;
    private long basicFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BasicFee {
      get { return basicFee_; }
      set {
        basicFee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodFee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodFee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (BasicFee != other.BasicFee) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (BasicFee != 0L) hash ^= BasicFee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (BasicFee != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(BasicFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (BasicFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(BasicFee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodFee other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.BasicFee != 0L) {
        BasicFee = other.BasicFee;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 16: {
            BasicFee = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///acs2
  /// </summary>
  public sealed partial class ResourceInfo : pb::IMessage<ResourceInfo> {
    private static readonly pb::MessageParser<ResourceInfo> _parser = new pb::MessageParser<ResourceInfo>(() => new ResourceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceInfo(ResourceInfo other) : this() {
      paths_ = other.paths_.Clone();
      nonParallelizable_ = other.nonParallelizable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceInfo Clone() {
      return new ResourceInfo(this);
    }

    /// <summary>Field number for the "paths" field.</summary>
    public const int PathsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.ScopedStatePath> _repeated_paths_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Proto.ScopedStatePath.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.ScopedStatePath> paths_ = new pbc::RepeatedField<global::AElf.Client.Proto.ScopedStatePath>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.ScopedStatePath> Paths {
      get { return paths_; }
    }

    /// <summary>Field number for the "non_parallelizable" field.</summary>
    public const int NonParallelizableFieldNumber = 2;
    private bool nonParallelizable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NonParallelizable {
      get { return nonParallelizable_; }
      set {
        nonParallelizable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!paths_.Equals(other.paths_)) return false;
      if (NonParallelizable != other.NonParallelizable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= paths_.GetHashCode();
      if (NonParallelizable != false) hash ^= NonParallelizable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      paths_.WriteTo(output, _repeated_paths_codec);
      if (NonParallelizable != false) {
        output.WriteRawTag(16);
        output.WriteBool(NonParallelizable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += paths_.CalculateSize(_repeated_paths_codec);
      if (NonParallelizable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceInfo other) {
      if (other == null) {
        return;
      }
      paths_.Add(other.paths_);
      if (other.NonParallelizable != false) {
        NonParallelizable = other.NonParallelizable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            paths_.AddEntriesFrom(input, _repeated_paths_codec);
            break;
          }
          case 16: {
            NonParallelizable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// acs3
  /// </summary>
  public sealed partial class ProposalOutput : pb::IMessage<ProposalOutput> {
    private static readonly pb::MessageParser<ProposalOutput> _parser = new pb::MessageParser<ProposalOutput>(() => new ProposalOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposalOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalOutput(ProposalOutput other) : this() {
      proposalId_ = other.proposalId_ != null ? other.proposalId_.Clone() : null;
      contractMethodName_ = other.contractMethodName_;
      toAddress_ = other.toAddress_ != null ? other.toAddress_.Clone() : null;
      params_ = other.params_;
      expiredTime_ = other.expiredTime_ != null ? other.expiredTime_.Clone() : null;
      organizationAddress_ = other.organizationAddress_ != null ? other.organizationAddress_.Clone() : null;
      proposer_ = other.proposer_ != null ? other.proposer_.Clone() : null;
      toBeReleased_ = other.toBeReleased_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalOutput Clone() {
      return new ProposalOutput(this);
    }

    /// <summary>Field number for the "proposal_id" field.</summary>
    public const int ProposalIdFieldNumber = 1;
    private global::AElf.Client.Proto.Hash proposalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash ProposalId {
      get { return proposalId_; }
      set {
        proposalId_ = value;
      }
    }

    /// <summary>Field number for the "contract_method_name" field.</summary>
    public const int ContractMethodNameFieldNumber = 2;
    private string contractMethodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractMethodName {
      get { return contractMethodName_; }
      set {
        contractMethodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_address" field.</summary>
    public const int ToAddressFieldNumber = 3;
    private global::AElf.Client.Proto.Address toAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Address ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = value;
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private pb::ByteString params_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expired_time" field.</summary>
    public const int ExpiredTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiredTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiredTime {
      get { return expiredTime_; }
      set {
        expiredTime_ = value;
      }
    }

    /// <summary>Field number for the "organization_address" field.</summary>
    public const int OrganizationAddressFieldNumber = 6;
    private global::AElf.Client.Proto.Address organizationAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Address OrganizationAddress {
      get { return organizationAddress_; }
      set {
        organizationAddress_ = value;
      }
    }

    /// <summary>Field number for the "proposer" field.</summary>
    public const int ProposerFieldNumber = 7;
    private global::AElf.Client.Proto.Address proposer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Address Proposer {
      get { return proposer_; }
      set {
        proposer_ = value;
      }
    }

    /// <summary>Field number for the "to_be_released" field.</summary>
    public const int ToBeReleasedFieldNumber = 8;
    private bool toBeReleased_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ToBeReleased {
      get { return toBeReleased_; }
      set {
        toBeReleased_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposalOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposalOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProposalId, other.ProposalId)) return false;
      if (ContractMethodName != other.ContractMethodName) return false;
      if (!object.Equals(ToAddress, other.ToAddress)) return false;
      if (Params != other.Params) return false;
      if (!object.Equals(ExpiredTime, other.ExpiredTime)) return false;
      if (!object.Equals(OrganizationAddress, other.OrganizationAddress)) return false;
      if (!object.Equals(Proposer, other.Proposer)) return false;
      if (ToBeReleased != other.ToBeReleased) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposalId_ != null) hash ^= ProposalId.GetHashCode();
      if (ContractMethodName.Length != 0) hash ^= ContractMethodName.GetHashCode();
      if (toAddress_ != null) hash ^= ToAddress.GetHashCode();
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      if (expiredTime_ != null) hash ^= ExpiredTime.GetHashCode();
      if (organizationAddress_ != null) hash ^= OrganizationAddress.GetHashCode();
      if (proposer_ != null) hash ^= Proposer.GetHashCode();
      if (ToBeReleased != false) hash ^= ToBeReleased.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (proposalId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposalId);
      }
      if (ContractMethodName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractMethodName);
      }
      if (toAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ToAddress);
      }
      if (Params.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Params);
      }
      if (expiredTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExpiredTime);
      }
      if (organizationAddress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OrganizationAddress);
      }
      if (proposer_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Proposer);
      }
      if (ToBeReleased != false) {
        output.WriteRawTag(64);
        output.WriteBool(ToBeReleased);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposalId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposalId);
      }
      if (ContractMethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractMethodName);
      }
      if (toAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToAddress);
      }
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Params);
      }
      if (expiredTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiredTime);
      }
      if (organizationAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrganizationAddress);
      }
      if (proposer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposer);
      }
      if (ToBeReleased != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposalOutput other) {
      if (other == null) {
        return;
      }
      if (other.proposalId_ != null) {
        if (proposalId_ == null) {
          ProposalId = new global::AElf.Client.Proto.Hash();
        }
        ProposalId.MergeFrom(other.ProposalId);
      }
      if (other.ContractMethodName.Length != 0) {
        ContractMethodName = other.ContractMethodName;
      }
      if (other.toAddress_ != null) {
        if (toAddress_ == null) {
          ToAddress = new global::AElf.Client.Proto.Address();
        }
        ToAddress.MergeFrom(other.ToAddress);
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
      if (other.expiredTime_ != null) {
        if (expiredTime_ == null) {
          ExpiredTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiredTime.MergeFrom(other.ExpiredTime);
      }
      if (other.organizationAddress_ != null) {
        if (organizationAddress_ == null) {
          OrganizationAddress = new global::AElf.Client.Proto.Address();
        }
        OrganizationAddress.MergeFrom(other.OrganizationAddress);
      }
      if (other.proposer_ != null) {
        if (proposer_ == null) {
          Proposer = new global::AElf.Client.Proto.Address();
        }
        Proposer.MergeFrom(other.Proposer);
      }
      if (other.ToBeReleased != false) {
        ToBeReleased = other.ToBeReleased;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposalId_ == null) {
              ProposalId = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(ProposalId);
            break;
          }
          case 18: {
            ContractMethodName = input.ReadString();
            break;
          }
          case 26: {
            if (toAddress_ == null) {
              ToAddress = new global::AElf.Client.Proto.Address();
            }
            input.ReadMessage(ToAddress);
            break;
          }
          case 34: {
            Params = input.ReadBytes();
            break;
          }
          case 42: {
            if (expiredTime_ == null) {
              ExpiredTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiredTime);
            break;
          }
          case 50: {
            if (organizationAddress_ == null) {
              OrganizationAddress = new global::AElf.Client.Proto.Address();
            }
            input.ReadMessage(OrganizationAddress);
            break;
          }
          case 58: {
            if (proposer_ == null) {
              Proposer = new global::AElf.Client.Proto.Address();
            }
            input.ReadMessage(Proposer);
            break;
          }
          case 64: {
            ToBeReleased = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ValidationResult : pb::IMessage<ValidationResult> {
    private static readonly pb::MessageParser<ValidationResult> _parser = new pb::MessageParser<ValidationResult>(() => new ValidationResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidationResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidationResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidationResult(ValidationResult other) : this() {
      success_ = other.success_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidationResult Clone() {
      return new ValidationResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidationResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidationResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidationResult other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///acs5
  /// </summary>
  public sealed partial class MethodCallingThreshold : pb::IMessage<MethodCallingThreshold> {
    private static readonly pb::MessageParser<MethodCallingThreshold> _parser = new pb::MessageParser<MethodCallingThreshold>(() => new MethodCallingThreshold());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodCallingThreshold> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodCallingThreshold() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodCallingThreshold(MethodCallingThreshold other) : this() {
      symbolToAmount_ = other.symbolToAmount_.Clone();
      thresholdCheckType_ = other.thresholdCheckType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodCallingThreshold Clone() {
      return new MethodCallingThreshold(this);
    }

    /// <summary>Field number for the "symbol_to_amount" field.</summary>
    public const int SymbolToAmountFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_symbolToAmount_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForSInt64(16), 10);
    private readonly pbc::MapField<string, long> symbolToAmount_ = new pbc::MapField<string, long>();
    /// <summary>
    /// The order matters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> SymbolToAmount {
      get { return symbolToAmount_; }
    }

    /// <summary>Field number for the "threshold_check_type" field.</summary>
    public const int ThresholdCheckTypeFieldNumber = 2;
    private global::AElf.Client.Proto.ThresholdCheckType thresholdCheckType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.ThresholdCheckType ThresholdCheckType {
      get { return thresholdCheckType_; }
      set {
        thresholdCheckType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodCallingThreshold);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodCallingThreshold other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SymbolToAmount.Equals(other.SymbolToAmount)) return false;
      if (ThresholdCheckType != other.ThresholdCheckType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SymbolToAmount.GetHashCode();
      if (ThresholdCheckType != 0) hash ^= ThresholdCheckType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      symbolToAmount_.WriteTo(output, _map_symbolToAmount_codec);
      if (ThresholdCheckType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ThresholdCheckType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += symbolToAmount_.CalculateSize(_map_symbolToAmount_codec);
      if (ThresholdCheckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ThresholdCheckType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodCallingThreshold other) {
      if (other == null) {
        return;
      }
      symbolToAmount_.Add(other.symbolToAmount_);
      if (other.ThresholdCheckType != 0) {
        ThresholdCheckType = other.ThresholdCheckType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            symbolToAmount_.AddEntriesFrom(input, _map_symbolToAmount_codec);
            break;
          }
          case 16: {
            ThresholdCheckType = (global::AElf.Client.Proto.ThresholdCheckType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///acs7
  /// </summary>
  public sealed partial class SideChainIdAndHeightDict : pb::IMessage<SideChainIdAndHeightDict> {
    private static readonly pb::MessageParser<SideChainIdAndHeightDict> _parser = new pb::MessageParser<SideChainIdAndHeightDict>(() => new SideChainIdAndHeightDict());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainIdAndHeightDict> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIdAndHeightDict() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIdAndHeightDict(SideChainIdAndHeightDict other) : this() {
      idHeightDict_ = other.idHeightDict_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIdAndHeightDict Clone() {
      return new SideChainIdAndHeightDict(this);
    }

    /// <summary>Field number for the "id_height_dict" field.</summary>
    public const int IdHeightDictFieldNumber = 1;
    private static readonly pbc::MapField<int, long>.Codec _map_idHeightDict_codec
        = new pbc::MapField<int, long>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt64(16), 10);
    private readonly pbc::MapField<int, long> idHeightDict_ = new pbc::MapField<int, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, long> IdHeightDict {
      get { return idHeightDict_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainIdAndHeightDict);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainIdAndHeightDict other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IdHeightDict.Equals(other.IdHeightDict)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IdHeightDict.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      idHeightDict_.WriteTo(output, _map_idHeightDict_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += idHeightDict_.CalculateSize(_map_idHeightDict_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainIdAndHeightDict other) {
      if (other == null) {
        return;
      }
      idHeightDict_.Add(other.idHeightDict_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            idHeightDict_.AddEntriesFrom(input, _map_idHeightDict_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainIndexingInformationList : pb::IMessage<SideChainIndexingInformationList> {
    private static readonly pb::MessageParser<SideChainIndexingInformationList> _parser = new pb::MessageParser<SideChainIndexingInformationList>(() => new SideChainIndexingInformationList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainIndexingInformationList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingInformationList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingInformationList(SideChainIndexingInformationList other) : this() {
      indexingInformationList_ = other.indexingInformationList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingInformationList Clone() {
      return new SideChainIndexingInformationList(this);
    }

    /// <summary>Field number for the "indexing_information_list" field.</summary>
    public const int IndexingInformationListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.SideChainIndexingInformation> _repeated_indexingInformationList_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Proto.SideChainIndexingInformation.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.SideChainIndexingInformation> indexingInformationList_ = new pbc::RepeatedField<global::AElf.Client.Proto.SideChainIndexingInformation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.SideChainIndexingInformation> IndexingInformationList {
      get { return indexingInformationList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainIndexingInformationList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainIndexingInformationList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!indexingInformationList_.Equals(other.indexingInformationList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= indexingInformationList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      indexingInformationList_.WriteTo(output, _repeated_indexingInformationList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += indexingInformationList_.CalculateSize(_repeated_indexingInformationList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainIndexingInformationList other) {
      if (other == null) {
        return;
      }
      indexingInformationList_.Add(other.indexingInformationList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            indexingInformationList_.AddEntriesFrom(input, _repeated_indexingInformationList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainIndexingInformation : pb::IMessage<SideChainIndexingInformation> {
    private static readonly pb::MessageParser<SideChainIndexingInformation> _parser = new pb::MessageParser<SideChainIndexingInformation>(() => new SideChainIndexingInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainIndexingInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingInformation(SideChainIndexingInformation other) : this() {
      chainId_ = other.chainId_;
      indexedHeight_ = other.indexedHeight_;
      toBeIndexedCount_ = other.toBeIndexedCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingInformation Clone() {
      return new SideChainIndexingInformation(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "indexed_height" field.</summary>
    public const int IndexedHeightFieldNumber = 2;
    private long indexedHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IndexedHeight {
      get { return indexedHeight_; }
      set {
        indexedHeight_ = value;
      }
    }

    /// <summary>Field number for the "to_be_indexed_count" field.</summary>
    public const int ToBeIndexedCountFieldNumber = 3;
    private long toBeIndexedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToBeIndexedCount {
      get { return toBeIndexedCount_; }
      set {
        toBeIndexedCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainIndexingInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainIndexingInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      if (IndexedHeight != other.IndexedHeight) return false;
      if (ToBeIndexedCount != other.ToBeIndexedCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (IndexedHeight != 0L) hash ^= IndexedHeight.GetHashCode();
      if (ToBeIndexedCount != 0L) hash ^= ToBeIndexedCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (IndexedHeight != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(IndexedHeight);
      }
      if (ToBeIndexedCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ToBeIndexedCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (IndexedHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IndexedHeight);
      }
      if (ToBeIndexedCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToBeIndexedCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainIndexingInformation other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      if (other.IndexedHeight != 0L) {
        IndexedHeight = other.IndexedHeight;
      }
      if (other.ToBeIndexedCount != 0L) {
        ToBeIndexedCount = other.ToBeIndexedCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
          case 16: {
            IndexedHeight = input.ReadInt64();
            break;
          }
          case 24: {
            ToBeIndexedCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossChainBlockData : pb::IMessage<CrossChainBlockData> {
    private static readonly pb::MessageParser<CrossChainBlockData> _parser = new pb::MessageParser<CrossChainBlockData>(() => new CrossChainBlockData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossChainBlockData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainBlockData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainBlockData(CrossChainBlockData other) : this() {
      sideChainBlockData_ = other.sideChainBlockData_.Clone();
      parentChainBlockData_ = other.parentChainBlockData_.Clone();
      previousBlockHeight_ = other.previousBlockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainBlockData Clone() {
      return new CrossChainBlockData(this);
    }

    /// <summary>Field number for the "side_chain_block_data" field.</summary>
    public const int SideChainBlockDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.SideChainBlockData> _repeated_sideChainBlockData_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Proto.SideChainBlockData.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.SideChainBlockData> sideChainBlockData_ = new pbc::RepeatedField<global::AElf.Client.Proto.SideChainBlockData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.SideChainBlockData> SideChainBlockData {
      get { return sideChainBlockData_; }
    }

    /// <summary>Field number for the "parent_chain_block_data" field.</summary>
    public const int ParentChainBlockDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.ParentChainBlockData> _repeated_parentChainBlockData_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Client.Proto.ParentChainBlockData.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.ParentChainBlockData> parentChainBlockData_ = new pbc::RepeatedField<global::AElf.Client.Proto.ParentChainBlockData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.ParentChainBlockData> ParentChainBlockData {
      get { return parentChainBlockData_; }
    }

    /// <summary>Field number for the "previous_block_height" field.</summary>
    public const int PreviousBlockHeightFieldNumber = 3;
    private long previousBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PreviousBlockHeight {
      get { return previousBlockHeight_; }
      set {
        previousBlockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossChainBlockData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossChainBlockData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sideChainBlockData_.Equals(other.sideChainBlockData_)) return false;
      if(!parentChainBlockData_.Equals(other.parentChainBlockData_)) return false;
      if (PreviousBlockHeight != other.PreviousBlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sideChainBlockData_.GetHashCode();
      hash ^= parentChainBlockData_.GetHashCode();
      if (PreviousBlockHeight != 0L) hash ^= PreviousBlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sideChainBlockData_.WriteTo(output, _repeated_sideChainBlockData_codec);
      parentChainBlockData_.WriteTo(output, _repeated_parentChainBlockData_codec);
      if (PreviousBlockHeight != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PreviousBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sideChainBlockData_.CalculateSize(_repeated_sideChainBlockData_codec);
      size += parentChainBlockData_.CalculateSize(_repeated_parentChainBlockData_codec);
      if (PreviousBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PreviousBlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossChainBlockData other) {
      if (other == null) {
        return;
      }
      sideChainBlockData_.Add(other.sideChainBlockData_);
      parentChainBlockData_.Add(other.parentChainBlockData_);
      if (other.PreviousBlockHeight != 0L) {
        PreviousBlockHeight = other.PreviousBlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sideChainBlockData_.AddEntriesFrom(input, _repeated_sideChainBlockData_codec);
            break;
          }
          case 18: {
            parentChainBlockData_.AddEntriesFrom(input, _repeated_parentChainBlockData_codec);
            break;
          }
          case 24: {
            PreviousBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainBlockData : pb::IMessage<SideChainBlockData> {
    private static readonly pb::MessageParser<SideChainBlockData> _parser = new pb::MessageParser<SideChainBlockData>(() => new SideChainBlockData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainBlockData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainBlockData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainBlockData(SideChainBlockData other) : this() {
      height_ = other.height_;
      blockHeaderHash_ = other.blockHeaderHash_ != null ? other.blockHeaderHash_.Clone() : null;
      transactionStatusMerkleTreeRoot_ = other.transactionStatusMerkleTreeRoot_ != null ? other.transactionStatusMerkleTreeRoot_.Clone() : null;
      chainId_ = other.chainId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainBlockData Clone() {
      return new SideChainBlockData(this);
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 1;
    private long height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "block_header_hash" field.</summary>
    public const int BlockHeaderHashFieldNumber = 2;
    private global::AElf.Client.Proto.Hash blockHeaderHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash BlockHeaderHash {
      get { return blockHeaderHash_; }
      set {
        blockHeaderHash_ = value;
      }
    }

    /// <summary>Field number for the "transaction_status_merkle_tree_root" field.</summary>
    public const int TransactionStatusMerkleTreeRootFieldNumber = 3;
    private global::AElf.Client.Proto.Hash transactionStatusMerkleTreeRoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash TransactionStatusMerkleTreeRoot {
      get { return transactionStatusMerkleTreeRoot_; }
      set {
        transactionStatusMerkleTreeRoot_ = value;
      }
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 4;
    private int chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainBlockData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainBlockData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Height != other.Height) return false;
      if (!object.Equals(BlockHeaderHash, other.BlockHeaderHash)) return false;
      if (!object.Equals(TransactionStatusMerkleTreeRoot, other.TransactionStatusMerkleTreeRoot)) return false;
      if (ChainId != other.ChainId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Height != 0L) hash ^= Height.GetHashCode();
      if (blockHeaderHash_ != null) hash ^= BlockHeaderHash.GetHashCode();
      if (transactionStatusMerkleTreeRoot_ != null) hash ^= TransactionStatusMerkleTreeRoot.GetHashCode();
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Height != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Height);
      }
      if (blockHeaderHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockHeaderHash);
      }
      if (transactionStatusMerkleTreeRoot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransactionStatusMerkleTreeRoot);
      }
      if (ChainId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ChainId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Height != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Height);
      }
      if (blockHeaderHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeaderHash);
      }
      if (transactionStatusMerkleTreeRoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionStatusMerkleTreeRoot);
      }
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainBlockData other) {
      if (other == null) {
        return;
      }
      if (other.Height != 0L) {
        Height = other.Height;
      }
      if (other.blockHeaderHash_ != null) {
        if (blockHeaderHash_ == null) {
          BlockHeaderHash = new global::AElf.Client.Proto.Hash();
        }
        BlockHeaderHash.MergeFrom(other.BlockHeaderHash);
      }
      if (other.transactionStatusMerkleTreeRoot_ != null) {
        if (transactionStatusMerkleTreeRoot_ == null) {
          TransactionStatusMerkleTreeRoot = new global::AElf.Client.Proto.Hash();
        }
        TransactionStatusMerkleTreeRoot.MergeFrom(other.TransactionStatusMerkleTreeRoot);
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Height = input.ReadInt64();
            break;
          }
          case 18: {
            if (blockHeaderHash_ == null) {
              BlockHeaderHash = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(BlockHeaderHash);
            break;
          }
          case 26: {
            if (transactionStatusMerkleTreeRoot_ == null) {
              TransactionStatusMerkleTreeRoot = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(TransactionStatusMerkleTreeRoot);
            break;
          }
          case 32: {
            ChainId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParentChainBlockData : pb::IMessage<ParentChainBlockData> {
    private static readonly pb::MessageParser<ParentChainBlockData> _parser = new pb::MessageParser<ParentChainBlockData>(() => new ParentChainBlockData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParentChainBlockData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentChainBlockData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentChainBlockData(ParentChainBlockData other) : this() {
      height_ = other.height_;
      crossChainExtraData_ = other.crossChainExtraData_ != null ? other.crossChainExtraData_.Clone() : null;
      chainId_ = other.chainId_;
      transactionStatusMerkleTreeRoot_ = other.transactionStatusMerkleTreeRoot_ != null ? other.transactionStatusMerkleTreeRoot_.Clone() : null;
      indexedMerklePath_ = other.indexedMerklePath_.Clone();
      extraData_ = other.extraData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentChainBlockData Clone() {
      return new ParentChainBlockData(this);
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 1;
    private long height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "cross_chain_extra_data" field.</summary>
    public const int CrossChainExtraDataFieldNumber = 2;
    private global::AElf.Client.Proto.CrossChainExtraData crossChainExtraData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.CrossChainExtraData CrossChainExtraData {
      get { return crossChainExtraData_; }
      set {
        crossChainExtraData_ = value;
      }
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 3;
    private int chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "transaction_status_merkle_tree_root" field.</summary>
    public const int TransactionStatusMerkleTreeRootFieldNumber = 4;
    private global::AElf.Client.Proto.Hash transactionStatusMerkleTreeRoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash TransactionStatusMerkleTreeRoot {
      get { return transactionStatusMerkleTreeRoot_; }
      set {
        transactionStatusMerkleTreeRoot_ = value;
      }
    }

    /// <summary>Field number for the "indexed_merkle_path" field.</summary>
    public const int IndexedMerklePathFieldNumber = 5;
    private static readonly pbc::MapField<long, global::AElf.Client.Proto.MerklePath>.Codec _map_indexedMerklePath_codec
        = new pbc::MapField<long, global::AElf.Client.Proto.MerklePath>.Codec(pb::FieldCodec.ForInt64(8), pb::FieldCodec.ForMessage(18, global::AElf.Client.Proto.MerklePath.Parser), 42);
    private readonly pbc::MapField<long, global::AElf.Client.Proto.MerklePath> indexedMerklePath_ = new pbc::MapField<long, global::AElf.Client.Proto.MerklePath>();
    /// <summary>
    /// Indexed block height from side chain and merkle path for this side chain block
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<long, global::AElf.Client.Proto.MerklePath> IndexedMerklePath {
      get { return indexedMerklePath_; }
    }

    /// <summary>Field number for the "extra_data" field.</summary>
    public const int ExtraDataFieldNumber = 6;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_extraData_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForBytes(18), 50);
    private readonly pbc::MapField<string, pb::ByteString> extraData_ = new pbc::MapField<string, pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> ExtraData {
      get { return extraData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParentChainBlockData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParentChainBlockData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Height != other.Height) return false;
      if (!object.Equals(CrossChainExtraData, other.CrossChainExtraData)) return false;
      if (ChainId != other.ChainId) return false;
      if (!object.Equals(TransactionStatusMerkleTreeRoot, other.TransactionStatusMerkleTreeRoot)) return false;
      if (!IndexedMerklePath.Equals(other.IndexedMerklePath)) return false;
      if (!ExtraData.Equals(other.ExtraData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Height != 0L) hash ^= Height.GetHashCode();
      if (crossChainExtraData_ != null) hash ^= CrossChainExtraData.GetHashCode();
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (transactionStatusMerkleTreeRoot_ != null) hash ^= TransactionStatusMerkleTreeRoot.GetHashCode();
      hash ^= IndexedMerklePath.GetHashCode();
      hash ^= ExtraData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Height != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Height);
      }
      if (crossChainExtraData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CrossChainExtraData);
      }
      if (ChainId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChainId);
      }
      if (transactionStatusMerkleTreeRoot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransactionStatusMerkleTreeRoot);
      }
      indexedMerklePath_.WriteTo(output, _map_indexedMerklePath_codec);
      extraData_.WriteTo(output, _map_extraData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Height != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Height);
      }
      if (crossChainExtraData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrossChainExtraData);
      }
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (transactionStatusMerkleTreeRoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionStatusMerkleTreeRoot);
      }
      size += indexedMerklePath_.CalculateSize(_map_indexedMerklePath_codec);
      size += extraData_.CalculateSize(_map_extraData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParentChainBlockData other) {
      if (other == null) {
        return;
      }
      if (other.Height != 0L) {
        Height = other.Height;
      }
      if (other.crossChainExtraData_ != null) {
        if (crossChainExtraData_ == null) {
          CrossChainExtraData = new global::AElf.Client.Proto.CrossChainExtraData();
        }
        CrossChainExtraData.MergeFrom(other.CrossChainExtraData);
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      if (other.transactionStatusMerkleTreeRoot_ != null) {
        if (transactionStatusMerkleTreeRoot_ == null) {
          TransactionStatusMerkleTreeRoot = new global::AElf.Client.Proto.Hash();
        }
        TransactionStatusMerkleTreeRoot.MergeFrom(other.TransactionStatusMerkleTreeRoot);
      }
      indexedMerklePath_.Add(other.indexedMerklePath_);
      extraData_.Add(other.extraData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Height = input.ReadInt64();
            break;
          }
          case 18: {
            if (crossChainExtraData_ == null) {
              CrossChainExtraData = new global::AElf.Client.Proto.CrossChainExtraData();
            }
            input.ReadMessage(CrossChainExtraData);
            break;
          }
          case 24: {
            ChainId = input.ReadInt32();
            break;
          }
          case 34: {
            if (transactionStatusMerkleTreeRoot_ == null) {
              TransactionStatusMerkleTreeRoot = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(TransactionStatusMerkleTreeRoot);
            break;
          }
          case 42: {
            indexedMerklePath_.AddEntriesFrom(input, _map_indexedMerklePath_codec);
            break;
          }
          case 50: {
            extraData_.AddEntriesFrom(input, _map_extraData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossChainExtraData : pb::IMessage<CrossChainExtraData> {
    private static readonly pb::MessageParser<CrossChainExtraData> _parser = new pb::MessageParser<CrossChainExtraData>(() => new CrossChainExtraData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossChainExtraData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainExtraData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainExtraData(CrossChainExtraData other) : this() {
      transactionStatusMerkleTreeRoot_ = other.transactionStatusMerkleTreeRoot_ != null ? other.transactionStatusMerkleTreeRoot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainExtraData Clone() {
      return new CrossChainExtraData(this);
    }

    /// <summary>Field number for the "transaction_status_merkle_tree_root" field.</summary>
    public const int TransactionStatusMerkleTreeRootFieldNumber = 1;
    private global::AElf.Client.Proto.Hash transactionStatusMerkleTreeRoot_;
    /// <summary>
    /// Merkle tree root of side chain block transaction status root
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Hash TransactionStatusMerkleTreeRoot {
      get { return transactionStatusMerkleTreeRoot_; }
      set {
        transactionStatusMerkleTreeRoot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossChainExtraData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossChainExtraData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TransactionStatusMerkleTreeRoot, other.TransactionStatusMerkleTreeRoot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transactionStatusMerkleTreeRoot_ != null) hash ^= TransactionStatusMerkleTreeRoot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transactionStatusMerkleTreeRoot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TransactionStatusMerkleTreeRoot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transactionStatusMerkleTreeRoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionStatusMerkleTreeRoot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossChainExtraData other) {
      if (other == null) {
        return;
      }
      if (other.transactionStatusMerkleTreeRoot_ != null) {
        if (transactionStatusMerkleTreeRoot_ == null) {
          TransactionStatusMerkleTreeRoot = new global::AElf.Client.Proto.Hash();
        }
        TransactionStatusMerkleTreeRoot.MergeFrom(other.TransactionStatusMerkleTreeRoot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transactionStatusMerkleTreeRoot_ == null) {
              TransactionStatusMerkleTreeRoot = new global::AElf.Client.Proto.Hash();
            }
            input.ReadMessage(TransactionStatusMerkleTreeRoot);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndexedSideChainBlockData : pb::IMessage<IndexedSideChainBlockData> {
    private static readonly pb::MessageParser<IndexedSideChainBlockData> _parser = new pb::MessageParser<IndexedSideChainBlockData>(() => new IndexedSideChainBlockData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexedSideChainBlockData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexedSideChainBlockData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexedSideChainBlockData(IndexedSideChainBlockData other) : this() {
      sideChainBlockData_ = other.sideChainBlockData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexedSideChainBlockData Clone() {
      return new IndexedSideChainBlockData(this);
    }

    /// <summary>Field number for the "side_chain_block_data" field.</summary>
    public const int SideChainBlockDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Client.Proto.SideChainBlockData> _repeated_sideChainBlockData_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Client.Proto.SideChainBlockData.Parser);
    private readonly pbc::RepeatedField<global::AElf.Client.Proto.SideChainBlockData> sideChainBlockData_ = new pbc::RepeatedField<global::AElf.Client.Proto.SideChainBlockData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Client.Proto.SideChainBlockData> SideChainBlockData {
      get { return sideChainBlockData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexedSideChainBlockData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexedSideChainBlockData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sideChainBlockData_.Equals(other.sideChainBlockData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sideChainBlockData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sideChainBlockData_.WriteTo(output, _repeated_sideChainBlockData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sideChainBlockData_.CalculateSize(_repeated_sideChainBlockData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexedSideChainBlockData other) {
      if (other == null) {
        return;
      }
      sideChainBlockData_.Add(other.sideChainBlockData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sideChainBlockData_.AddEntriesFrom(input, _repeated_sideChainBlockData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossChainMerkleProofContext : pb::IMessage<CrossChainMerkleProofContext> {
    private static readonly pb::MessageParser<CrossChainMerkleProofContext> _parser = new pb::MessageParser<CrossChainMerkleProofContext>(() => new CrossChainMerkleProofContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossChainMerkleProofContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainMerkleProofContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainMerkleProofContext(CrossChainMerkleProofContext other) : this() {
      boundParentChainHeight_ = other.boundParentChainHeight_;
      merklePathFromParentChain_ = other.merklePathFromParentChain_ != null ? other.merklePathFromParentChain_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainMerkleProofContext Clone() {
      return new CrossChainMerkleProofContext(this);
    }

    /// <summary>Field number for the "bound_parent_chain_height" field.</summary>
    public const int BoundParentChainHeightFieldNumber = 1;
    private long boundParentChainHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BoundParentChainHeight {
      get { return boundParentChainHeight_; }
      set {
        boundParentChainHeight_ = value;
      }
    }

    /// <summary>Field number for the "merkle_path_from_parent_chain" field.</summary>
    public const int MerklePathFromParentChainFieldNumber = 2;
    private global::AElf.Client.Proto.MerklePath merklePathFromParentChain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.MerklePath MerklePathFromParentChain {
      get { return merklePathFromParentChain_; }
      set {
        merklePathFromParentChain_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossChainMerkleProofContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossChainMerkleProofContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoundParentChainHeight != other.BoundParentChainHeight) return false;
      if (!object.Equals(MerklePathFromParentChain, other.MerklePathFromParentChain)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BoundParentChainHeight != 0L) hash ^= BoundParentChainHeight.GetHashCode();
      if (merklePathFromParentChain_ != null) hash ^= MerklePathFromParentChain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BoundParentChainHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BoundParentChainHeight);
      }
      if (merklePathFromParentChain_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MerklePathFromParentChain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BoundParentChainHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BoundParentChainHeight);
      }
      if (merklePathFromParentChain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerklePathFromParentChain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossChainMerkleProofContext other) {
      if (other == null) {
        return;
      }
      if (other.BoundParentChainHeight != 0L) {
        BoundParentChainHeight = other.BoundParentChainHeight;
      }
      if (other.merklePathFromParentChain_ != null) {
        if (merklePathFromParentChain_ == null) {
          MerklePathFromParentChain = new global::AElf.Client.Proto.MerklePath();
        }
        MerklePathFromParentChain.MergeFrom(other.MerklePathFromParentChain);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BoundParentChainHeight = input.ReadInt64();
            break;
          }
          case 18: {
            if (merklePathFromParentChain_ == null) {
              MerklePathFromParentChain = new global::AElf.Client.Proto.MerklePath();
            }
            input.ReadMessage(MerklePathFromParentChain);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChainInitializationData : pb::IMessage<ChainInitializationData> {
    private static readonly pb::MessageParser<ChainInitializationData> _parser = new pb::MessageParser<ChainInitializationData>(() => new ChainInitializationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChainInitializationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Client.Proto.ClientReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainInitializationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainInitializationData(ChainInitializationData other) : this() {
      chainId_ = other.chainId_;
      creator_ = other.creator_ != null ? other.creator_.Clone() : null;
      creationTimestamp_ = other.creationTimestamp_ != null ? other.creationTimestamp_.Clone() : null;
      extraInformation_ = other.extraInformation_.Clone();
      creationHeightOnParentChain_ = other.creationHeightOnParentChain_;
      chainCreatorPrivilegePreserved_ = other.chainCreatorPrivilegePreserved_;
      sideChainTokenSymbol_ = other.sideChainTokenSymbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainInitializationData Clone() {
      return new ChainInitializationData(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 2;
    private global::AElf.Client.Proto.Address creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Client.Proto.Address Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "creation_timestamp" field.</summary>
    public const int CreationTimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp creationTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreationTimestamp {
      get { return creationTimestamp_; }
      set {
        creationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "extra_information" field.</summary>
    public const int ExtraInformationFieldNumber = 4;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_extraInformation_codec
        = pb::FieldCodec.ForBytes(34);
    private readonly pbc::RepeatedField<pb::ByteString> extraInformation_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ExtraInformation {
      get { return extraInformation_; }
    }

    /// <summary>Field number for the "creation_height_on_parent_chain" field.</summary>
    public const int CreationHeightOnParentChainFieldNumber = 5;
    private long creationHeightOnParentChain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationHeightOnParentChain {
      get { return creationHeightOnParentChain_; }
      set {
        creationHeightOnParentChain_ = value;
      }
    }

    /// <summary>Field number for the "chain_creator_privilege_preserved" field.</summary>
    public const int ChainCreatorPrivilegePreservedFieldNumber = 6;
    private bool chainCreatorPrivilegePreserved_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ChainCreatorPrivilegePreserved {
      get { return chainCreatorPrivilegePreserved_; }
      set {
        chainCreatorPrivilegePreserved_ = value;
      }
    }

    /// <summary>Field number for the "side_chain_token_symbol" field.</summary>
    public const int SideChainTokenSymbolFieldNumber = 7;
    private string sideChainTokenSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SideChainTokenSymbol {
      get { return sideChainTokenSymbol_; }
      set {
        sideChainTokenSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChainInitializationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChainInitializationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      if (!object.Equals(Creator, other.Creator)) return false;
      if (!object.Equals(CreationTimestamp, other.CreationTimestamp)) return false;
      if(!extraInformation_.Equals(other.extraInformation_)) return false;
      if (CreationHeightOnParentChain != other.CreationHeightOnParentChain) return false;
      if (ChainCreatorPrivilegePreserved != other.ChainCreatorPrivilegePreserved) return false;
      if (SideChainTokenSymbol != other.SideChainTokenSymbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (creator_ != null) hash ^= Creator.GetHashCode();
      if (creationTimestamp_ != null) hash ^= CreationTimestamp.GetHashCode();
      hash ^= extraInformation_.GetHashCode();
      if (CreationHeightOnParentChain != 0L) hash ^= CreationHeightOnParentChain.GetHashCode();
      if (ChainCreatorPrivilegePreserved != false) hash ^= ChainCreatorPrivilegePreserved.GetHashCode();
      if (SideChainTokenSymbol.Length != 0) hash ^= SideChainTokenSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (creator_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Creator);
      }
      if (creationTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreationTimestamp);
      }
      extraInformation_.WriteTo(output, _repeated_extraInformation_codec);
      if (CreationHeightOnParentChain != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreationHeightOnParentChain);
      }
      if (ChainCreatorPrivilegePreserved != false) {
        output.WriteRawTag(48);
        output.WriteBool(ChainCreatorPrivilegePreserved);
      }
      if (SideChainTokenSymbol.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SideChainTokenSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (creator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creator);
      }
      if (creationTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreationTimestamp);
      }
      size += extraInformation_.CalculateSize(_repeated_extraInformation_codec);
      if (CreationHeightOnParentChain != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationHeightOnParentChain);
      }
      if (ChainCreatorPrivilegePreserved != false) {
        size += 1 + 1;
      }
      if (SideChainTokenSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SideChainTokenSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChainInitializationData other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      if (other.creator_ != null) {
        if (creator_ == null) {
          Creator = new global::AElf.Client.Proto.Address();
        }
        Creator.MergeFrom(other.Creator);
      }
      if (other.creationTimestamp_ != null) {
        if (creationTimestamp_ == null) {
          CreationTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreationTimestamp.MergeFrom(other.CreationTimestamp);
      }
      extraInformation_.Add(other.extraInformation_);
      if (other.CreationHeightOnParentChain != 0L) {
        CreationHeightOnParentChain = other.CreationHeightOnParentChain;
      }
      if (other.ChainCreatorPrivilegePreserved != false) {
        ChainCreatorPrivilegePreserved = other.ChainCreatorPrivilegePreserved;
      }
      if (other.SideChainTokenSymbol.Length != 0) {
        SideChainTokenSymbol = other.SideChainTokenSymbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
          case 18: {
            if (creator_ == null) {
              Creator = new global::AElf.Client.Proto.Address();
            }
            input.ReadMessage(Creator);
            break;
          }
          case 26: {
            if (creationTimestamp_ == null) {
              CreationTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationTimestamp);
            break;
          }
          case 34: {
            extraInformation_.AddEntriesFrom(input, _repeated_extraInformation_codec);
            break;
          }
          case 40: {
            CreationHeightOnParentChain = input.ReadInt64();
            break;
          }
          case 48: {
            ChainCreatorPrivilegePreserved = input.ReadBool();
            break;
          }
          case 58: {
            SideChainTokenSymbol = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
