// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vote.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Vote {

  /// <summary>Holder for reflection information generated from vote.proto</summary>
  public static partial class VoteReflection {

    #region Descriptor
    /// <summary>File descriptor for vote.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VoteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgp2b3RlLnByb3RvEgR2b3RlGgxjb21tb24ucHJvdG8aH2dvb2dsZS9wcm90",
            "b2J1Zi90aW1lc3RhbXAucHJvdG8iRQoYSW5pdGlhbFZvdGVDb250cmFjdElu",
            "cHV0EikKGnRva2VuX2NvbnRyYWN0X3N5c3RlbV9uYW1lGAEgASgLMgUuSGFz",
            "aCLJAQoTVm90aW5nUmVnaXN0ZXJJbnB1dBIUCgV0b3BpYxgBIAEoCzIFLkhh",
            "c2gSMwoPc3RhcnRfdGltZXN0YW1wGAIgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIZChFhY2NlcHRlZF9jdXJyZW5jeRgDIAEoCRITCgthY3Rp",
            "dmVfZGF5cxgEIAEoEhIRCglkZWxlZ2F0ZWQYBSABKAgSEwoLdG90YWxfZXBv",
            "Y2gYBiABKBISDwoHb3B0aW9ucxgHIAMoCSLmAgoLVm90aW5nRXZlbnQSFAoF",
            "dG9waWMYASABKAsyBS5IYXNoEhkKB3Nwb25zb3IYAiABKAsyCC5BZGRyZXNz",
            "EhkKEWFjY2VwdGVkX2N1cnJlbmN5GAMgASgJEhMKC2FjdGl2ZV9kYXlzGAQg",
            "ASgSEhEKCWRlbGVnYXRlZBgFIAEoCBIVCg1jdXJyZW50X2Vwb2NoGAYgASgS",
            "EhMKC3RvdGFsX2Vwb2NoGAcgASgSEg8KB29wdGlvbnMYCCADKAkSNgoScmVn",
            "aXN0ZXJfdGltZXN0YW1wGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIzCg9zdGFydF90aW1lc3RhbXAYCiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEjkKFWVwb2NoX3N0YXJ0X3RpbWVzdGFtcBgLIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAijQEKCVZvdGVJbnB1dBIUCgV0",
            "b3BpYxgBIAEoCzIFLkhhc2gSGQoHc3BvbnNvchgCIAEoCzIILkFkZHJlc3MS",
            "DgoGYW1vdW50GAMgASgSEg4KBm9wdGlvbhgEIAEoCRIWCgd2b3RlX2lkGAUg",
            "ASgLMgUuSGFzaBIXCgV2b3RlchgGIAEoCzIILkFkZHJlc3MiJwoNV2l0aGRy",
            "YXdJbnB1dBIWCgd2b3RlX2lkGAEgASgLMgUuSGFzaCJdChRHZXRWb3RpbmdS",
            "ZXN1bHRJbnB1dBIUCgV0b3BpYxgBIAEoCzIFLkhhc2gSGQoHc3BvbnNvchgC",
            "IAEoCzIILkFkZHJlc3MSFAoMZXBvY2hfbnVtYmVyGAMgASgSIrUCCgxWb3Rp",
            "bmdSZXN1bHQSFAoFdG9waWMYASABKAsyBS5IYXNoEhkKB3Nwb25zb3IYAiAB",
            "KAsyCC5BZGRyZXNzEhQKDGVwb2NoX251bWJlchgDIAEoEhIwCgdyZXN1bHRz",
            "GAQgAygLMh8udm90ZS5Wb3RpbmdSZXN1bHQuUmVzdWx0c0VudHJ5EhQKDHZv",
            "dGVyc19jb3VudBgFIAEoEhIzCg9zdGFydF90aW1lc3RhbXAYBiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEjEKDWVuZF90aW1lc3RhbXAYByAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGi4KDFJlc3VsdHNFbnRy",
            "eRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKBI6AjgBIkQKFlVwZGF0ZUVw",
            "b2NoTnVtYmVySW5wdXQSFAoFdG9waWMYASABKAsyBS5IYXNoEhQKDGVwb2No",
            "X251bWJlchgDIAEoEiKiAgoMVm90aW5nUmVjb3JkEhQKBXRvcGljGAEgASgL",
            "MgUuSGFzaBIZCgdzcG9uc29yGAIgASgLMgguQWRkcmVzcxIUCgxlcG9jaF9u",
            "dW1iZXIYAyABKBISFwoFdm90ZXIYBCABKAsyCC5BZGRyZXNzEg4KBmFtb3Vu",
            "dBgFIAEoEhI2ChJ3aXRoZHJhd190aW1lc3RhbXAYBiABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEjIKDnZvdGVfdGltZXN0YW1wGAcgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIUCgxpc193aXRoZHJhd24YCCAB",
            "KAgSDgoGb3B0aW9uGAkgASgJEhAKCGN1cnJlbmN5GAogASgJIlEKDkFkZE9w",
            "dGlvbklucHV0EhQKBXRvcGljGAEgASgLMgUuSGFzaBIZCgdzcG9uc29yGAIg",
            "ASgLMgguQWRkcmVzcxIOCgZvcHRpb24YAyABKAkiVAoRUmVtb3ZlT3B0aW9u",
            "SW5wdXQSFAoFdG9waWMYASABKAsyBS5IYXNoEhkKB3Nwb25zb3IYAiABKAsy",
            "CC5BZGRyZXNzEg4KBm9wdGlvbhgDIAEoCSKeAQoPVm90aW5nSGlzdG9yaWVz",
            "EhcKBXZvdGVyGAEgASgLMgguQWRkcmVzcxIvCgV2b3RlcxgCIAMoCzIgLnZv",
            "dGUuVm90aW5nSGlzdG9yaWVzLlZvdGVzRW50cnkaQQoKVm90ZXNFbnRyeRIL",
            "CgNrZXkYASABKAkSIgoFdmFsdWUYAiABKAsyEy52b3RlLlZvdGluZ0hpc3Rv",
            "cnk6AjgBIkwKDVZvdGluZ0hpc3RvcnkSGwoMYWN0aXZlX3ZvdGVzGAEgAygL",
            "MgUuSGFzaBIeCg93aXRoZHJhd25fdm90ZXMYAiADKAsyBS5IYXNoImEKFUdl",
            "dFZvdGluZ0hpc3RvcnlJbnB1dBIXCgV2b3RlchgBIAEoCzIILkFkZHJlc3MS",
            "FAoFdG9waWMYAiABKAsyBS5IYXNoEhkKB3Nwb25zb3IYAyABKAsyCC5BZGRy",
            "ZXNzIkYKE0dldFZvdGluZ0V2ZW50SW5wdXQSFAoFdG9waWMYASABKAsyBS5I",
            "YXNoEhkKB3Nwb25zb3IYAiABKAsyCC5BZGRyZXNzIisKFUdldFZvdGluZ1Jl",
            "Y29yZHNJbnB1dBISCgNpZHMYASADKAsyBS5IYXNoIj0KFkdldFZvdGluZ1Jl",
            "Y29yZHNPdXRwdXQSIwoHcmVjb3JkcxgBIAMoCzISLnZvdGUuVm90aW5nUmVj",
            "b3JkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.InitialVoteContractInput), global::Vote.InitialVoteContractInput.Parser, new[]{ "TokenContractSystemName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.VotingRegisterInput), global::Vote.VotingRegisterInput.Parser, new[]{ "Topic", "StartTimestamp", "AcceptedCurrency", "ActiveDays", "Delegated", "TotalEpoch", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.VotingEvent), global::Vote.VotingEvent.Parser, new[]{ "Topic", "Sponsor", "AcceptedCurrency", "ActiveDays", "Delegated", "CurrentEpoch", "TotalEpoch", "Options", "RegisterTimestamp", "StartTimestamp", "EpochStartTimestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.VoteInput), global::Vote.VoteInput.Parser, new[]{ "Topic", "Sponsor", "Amount", "Option", "VoteId", "Voter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.WithdrawInput), global::Vote.WithdrawInput.Parser, new[]{ "VoteId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.GetVotingResultInput), global::Vote.GetVotingResultInput.Parser, new[]{ "Topic", "Sponsor", "EpochNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.VotingResult), global::Vote.VotingResult.Parser, new[]{ "Topic", "Sponsor", "EpochNumber", "Results", "VotersCount", "StartTimestamp", "EndTimestamp" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.UpdateEpochNumberInput), global::Vote.UpdateEpochNumberInput.Parser, new[]{ "Topic", "EpochNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.VotingRecord), global::Vote.VotingRecord.Parser, new[]{ "Topic", "Sponsor", "EpochNumber", "Voter", "Amount", "WithdrawTimestamp", "VoteTimestamp", "IsWithdrawn", "Option", "Currency" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.AddOptionInput), global::Vote.AddOptionInput.Parser, new[]{ "Topic", "Sponsor", "Option" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.RemoveOptionInput), global::Vote.RemoveOptionInput.Parser, new[]{ "Topic", "Sponsor", "Option" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.VotingHistories), global::Vote.VotingHistories.Parser, new[]{ "Voter", "Votes" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.VotingHistory), global::Vote.VotingHistory.Parser, new[]{ "ActiveVotes", "WithdrawnVotes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.GetVotingHistoryInput), global::Vote.GetVotingHistoryInput.Parser, new[]{ "Voter", "Topic", "Sponsor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.GetVotingEventInput), global::Vote.GetVotingEventInput.Parser, new[]{ "Topic", "Sponsor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.GetVotingRecordsInput), global::Vote.GetVotingRecordsInput.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vote.GetVotingRecordsOutput), global::Vote.GetVotingRecordsOutput.Parser, new[]{ "Records" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InitialVoteContractInput : pb::IMessage<InitialVoteContractInput> {
    private static readonly pb::MessageParser<InitialVoteContractInput> _parser = new pb::MessageParser<InitialVoteContractInput>(() => new InitialVoteContractInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitialVoteContractInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialVoteContractInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialVoteContractInput(InitialVoteContractInput other) : this() {
      tokenContractSystemName_ = other.tokenContractSystemName_ != null ? other.tokenContractSystemName_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialVoteContractInput Clone() {
      return new InitialVoteContractInput(this);
    }

    /// <summary>Field number for the "token_contract_system_name" field.</summary>
    public const int TokenContractSystemNameFieldNumber = 1;
    private global::AElf.Hash tokenContractSystemName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash TokenContractSystemName {
      get { return tokenContractSystemName_; }
      set {
        tokenContractSystemName_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitialVoteContractInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitialVoteContractInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TokenContractSystemName, other.TokenContractSystemName)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokenContractSystemName_ != null) hash ^= TokenContractSystemName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tokenContractSystemName_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TokenContractSystemName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokenContractSystemName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenContractSystemName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitialVoteContractInput other) {
      if (other == null) {
        return;
      }
      if (other.tokenContractSystemName_ != null) {
        if (tokenContractSystemName_ == null) {
          TokenContractSystemName = new global::AElf.Hash();
        }
        TokenContractSystemName.MergeFrom(other.TokenContractSystemName);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokenContractSystemName_ == null) {
              TokenContractSystemName = new global::AElf.Hash();
            }
            input.ReadMessage(TokenContractSystemName);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VotingRegisterInput : pb::IMessage<VotingRegisterInput> {
    private static readonly pb::MessageParser<VotingRegisterInput> _parser = new pb::MessageParser<VotingRegisterInput>(() => new VotingRegisterInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingRegisterInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRegisterInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRegisterInput(VotingRegisterInput other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      acceptedCurrency_ = other.acceptedCurrency_;
      activeDays_ = other.activeDays_;
      delegated_ = other.delegated_;
      totalEpoch_ = other.totalEpoch_;
      options_ = other.options_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRegisterInput Clone() {
      return new VotingRegisterInput(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "accepted_currency" field.</summary>
    public const int AcceptedCurrencyFieldNumber = 3;
    private string acceptedCurrency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceptedCurrency {
      get { return acceptedCurrency_; }
      set {
        acceptedCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active_days" field.</summary>
    public const int ActiveDaysFieldNumber = 4;
    private long activeDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActiveDays {
      get { return activeDays_; }
      set {
        activeDays_ = value;
      }
    }

    /// <summary>Field number for the "delegated" field.</summary>
    public const int DelegatedFieldNumber = 5;
    private bool delegated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Delegated {
      get { return delegated_; }
      set {
        delegated_ = value;
      }
    }

    /// <summary>Field number for the "total_epoch" field.</summary>
    public const int TotalEpochFieldNumber = 6;
    private long totalEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalEpoch {
      get { return totalEpoch_; }
      set {
        totalEpoch_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_options_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> options_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Options {
      get { return options_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingRegisterInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingRegisterInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (AcceptedCurrency != other.AcceptedCurrency) return false;
      if (ActiveDays != other.ActiveDays) return false;
      if (Delegated != other.Delegated) return false;
      if (TotalEpoch != other.TotalEpoch) return false;
      if(!options_.Equals(other.options_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (AcceptedCurrency.Length != 0) hash ^= AcceptedCurrency.GetHashCode();
      if (ActiveDays != 0L) hash ^= ActiveDays.GetHashCode();
      if (Delegated != false) hash ^= Delegated.GetHashCode();
      if (TotalEpoch != 0L) hash ^= TotalEpoch.GetHashCode();
      hash ^= options_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (startTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTimestamp);
      }
      if (AcceptedCurrency.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AcceptedCurrency);
      }
      if (ActiveDays != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(ActiveDays);
      }
      if (Delegated != false) {
        output.WriteRawTag(40);
        output.WriteBool(Delegated);
      }
      if (TotalEpoch != 0L) {
        output.WriteRawTag(48);
        output.WriteSInt64(TotalEpoch);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (AcceptedCurrency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceptedCurrency);
      }
      if (ActiveDays != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ActiveDays);
      }
      if (Delegated != false) {
        size += 1 + 1;
      }
      if (TotalEpoch != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TotalEpoch);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingRegisterInput other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.AcceptedCurrency.Length != 0) {
        AcceptedCurrency = other.AcceptedCurrency;
      }
      if (other.ActiveDays != 0L) {
        ActiveDays = other.ActiveDays;
      }
      if (other.Delegated != false) {
        Delegated = other.Delegated;
      }
      if (other.TotalEpoch != 0L) {
        TotalEpoch = other.TotalEpoch;
      }
      options_.Add(other.options_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 26: {
            AcceptedCurrency = input.ReadString();
            break;
          }
          case 32: {
            ActiveDays = input.ReadSInt64();
            break;
          }
          case 40: {
            Delegated = input.ReadBool();
            break;
          }
          case 48: {
            TotalEpoch = input.ReadSInt64();
            break;
          }
          case 58: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VotingEvent : pb::IMessage<VotingEvent> {
    private static readonly pb::MessageParser<VotingEvent> _parser = new pb::MessageParser<VotingEvent>(() => new VotingEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingEvent(VotingEvent other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      acceptedCurrency_ = other.acceptedCurrency_;
      activeDays_ = other.activeDays_;
      delegated_ = other.delegated_;
      currentEpoch_ = other.currentEpoch_;
      totalEpoch_ = other.totalEpoch_;
      options_ = other.options_.Clone();
      registerTimestamp_ = other.registerTimestamp_ != null ? other.registerTimestamp_.Clone() : null;
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      epochStartTimestamp_ = other.epochStartTimestamp_ != null ? other.epochStartTimestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingEvent Clone() {
      return new VotingEvent(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 2;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    /// <summary>Field number for the "accepted_currency" field.</summary>
    public const int AcceptedCurrencyFieldNumber = 3;
    private string acceptedCurrency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceptedCurrency {
      get { return acceptedCurrency_; }
      set {
        acceptedCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active_days" field.</summary>
    public const int ActiveDaysFieldNumber = 4;
    private long activeDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActiveDays {
      get { return activeDays_; }
      set {
        activeDays_ = value;
      }
    }

    /// <summary>Field number for the "delegated" field.</summary>
    public const int DelegatedFieldNumber = 5;
    private bool delegated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Delegated {
      get { return delegated_; }
      set {
        delegated_ = value;
      }
    }

    /// <summary>Field number for the "current_epoch" field.</summary>
    public const int CurrentEpochFieldNumber = 6;
    private long currentEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentEpoch {
      get { return currentEpoch_; }
      set {
        currentEpoch_ = value;
      }
    }

    /// <summary>Field number for the "total_epoch" field.</summary>
    public const int TotalEpochFieldNumber = 7;
    private long totalEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalEpoch {
      get { return totalEpoch_; }
      set {
        totalEpoch_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_options_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> options_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Options {
      get { return options_; }
    }

    /// <summary>Field number for the "register_timestamp" field.</summary>
    public const int RegisterTimestampFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp registerTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RegisterTimestamp {
      get { return registerTimestamp_; }
      set {
        registerTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "epoch_start_timestamp" field.</summary>
    public const int EpochStartTimestampFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp epochStartTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EpochStartTimestamp {
      get { return epochStartTimestamp_; }
      set {
        epochStartTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      if (AcceptedCurrency != other.AcceptedCurrency) return false;
      if (ActiveDays != other.ActiveDays) return false;
      if (Delegated != other.Delegated) return false;
      if (CurrentEpoch != other.CurrentEpoch) return false;
      if (TotalEpoch != other.TotalEpoch) return false;
      if(!options_.Equals(other.options_)) return false;
      if (!object.Equals(RegisterTimestamp, other.RegisterTimestamp)) return false;
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (!object.Equals(EpochStartTimestamp, other.EpochStartTimestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (AcceptedCurrency.Length != 0) hash ^= AcceptedCurrency.GetHashCode();
      if (ActiveDays != 0L) hash ^= ActiveDays.GetHashCode();
      if (Delegated != false) hash ^= Delegated.GetHashCode();
      if (CurrentEpoch != 0L) hash ^= CurrentEpoch.GetHashCode();
      if (TotalEpoch != 0L) hash ^= TotalEpoch.GetHashCode();
      hash ^= options_.GetHashCode();
      if (registerTimestamp_ != null) hash ^= RegisterTimestamp.GetHashCode();
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (epochStartTimestamp_ != null) hash ^= EpochStartTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sponsor);
      }
      if (AcceptedCurrency.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AcceptedCurrency);
      }
      if (ActiveDays != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(ActiveDays);
      }
      if (Delegated != false) {
        output.WriteRawTag(40);
        output.WriteBool(Delegated);
      }
      if (CurrentEpoch != 0L) {
        output.WriteRawTag(48);
        output.WriteSInt64(CurrentEpoch);
      }
      if (TotalEpoch != 0L) {
        output.WriteRawTag(56);
        output.WriteSInt64(TotalEpoch);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (registerTimestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RegisterTimestamp);
      }
      if (startTimestamp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartTimestamp);
      }
      if (epochStartTimestamp_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(EpochStartTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (AcceptedCurrency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceptedCurrency);
      }
      if (ActiveDays != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ActiveDays);
      }
      if (Delegated != false) {
        size += 1 + 1;
      }
      if (CurrentEpoch != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CurrentEpoch);
      }
      if (TotalEpoch != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TotalEpoch);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (registerTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterTimestamp);
      }
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (epochStartTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EpochStartTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingEvent other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      if (other.AcceptedCurrency.Length != 0) {
        AcceptedCurrency = other.AcceptedCurrency;
      }
      if (other.ActiveDays != 0L) {
        ActiveDays = other.ActiveDays;
      }
      if (other.Delegated != false) {
        Delegated = other.Delegated;
      }
      if (other.CurrentEpoch != 0L) {
        CurrentEpoch = other.CurrentEpoch;
      }
      if (other.TotalEpoch != 0L) {
        TotalEpoch = other.TotalEpoch;
      }
      options_.Add(other.options_);
      if (other.registerTimestamp_ != null) {
        if (registerTimestamp_ == null) {
          RegisterTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RegisterTimestamp.MergeFrom(other.RegisterTimestamp);
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.epochStartTimestamp_ != null) {
        if (epochStartTimestamp_ == null) {
          EpochStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EpochStartTimestamp.MergeFrom(other.EpochStartTimestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
          case 26: {
            AcceptedCurrency = input.ReadString();
            break;
          }
          case 32: {
            ActiveDays = input.ReadSInt64();
            break;
          }
          case 40: {
            Delegated = input.ReadBool();
            break;
          }
          case 48: {
            CurrentEpoch = input.ReadSInt64();
            break;
          }
          case 56: {
            TotalEpoch = input.ReadSInt64();
            break;
          }
          case 66: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
          case 74: {
            if (registerTimestamp_ == null) {
              RegisterTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RegisterTimestamp);
            break;
          }
          case 82: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 90: {
            if (epochStartTimestamp_ == null) {
              EpochStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EpochStartTimestamp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoteInput : pb::IMessage<VoteInput> {
    private static readonly pb::MessageParser<VoteInput> _parser = new pb::MessageParser<VoteInput>(() => new VoteInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInput(VoteInput other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      amount_ = other.amount_;
      option_ = other.option_;
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInput Clone() {
      return new VoteInput(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 2;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 4;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 5;
    private global::AElf.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 6;
    private global::AElf.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      if (Amount != other.Amount) return false;
      if (Option != other.Option) return false;
      if (!object.Equals(VoteId, other.VoteId)) return false;
      if (!object.Equals(Voter, other.Voter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sponsor);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(Amount);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Option);
      }
      if (voteId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VoteId);
      }
      if (voter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Voter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Amount);
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteInput other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
          case 24: {
            Amount = input.ReadSInt64();
            break;
          }
          case 34: {
            Option = input.ReadString();
            break;
          }
          case 42: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
          case 50: {
            if (voter_ == null) {
              Voter = new global::AElf.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WithdrawInput : pb::IMessage<WithdrawInput> {
    private static readonly pb::MessageParser<WithdrawInput> _parser = new pb::MessageParser<WithdrawInput>(() => new WithdrawInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WithdrawInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawInput(WithdrawInput other) : this() {
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawInput Clone() {
      return new WithdrawInput(this);
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 1;
    private global::AElf.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WithdrawInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WithdrawInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoteId, other.VoteId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voteId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoteId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WithdrawInput other) {
      if (other == null) {
        return;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVotingResultInput : pb::IMessage<GetVotingResultInput> {
    private static readonly pb::MessageParser<GetVotingResultInput> _parser = new pb::MessageParser<GetVotingResultInput>(() => new GetVotingResultInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingResultInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingResultInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingResultInput(GetVotingResultInput other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      epochNumber_ = other.epochNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingResultInput Clone() {
      return new GetVotingResultInput(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 2;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    /// <summary>Field number for the "epoch_number" field.</summary>
    public const int EpochNumberFieldNumber = 3;
    private long epochNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EpochNumber {
      get { return epochNumber_; }
      set {
        epochNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingResultInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingResultInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      if (EpochNumber != other.EpochNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (EpochNumber != 0L) hash ^= EpochNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sponsor);
      }
      if (EpochNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(EpochNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (EpochNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(EpochNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingResultInput other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      if (other.EpochNumber != 0L) {
        EpochNumber = other.EpochNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
          case 24: {
            EpochNumber = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VotingResult : pb::IMessage<VotingResult> {
    private static readonly pb::MessageParser<VotingResult> _parser = new pb::MessageParser<VotingResult>(() => new VotingResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingResult(VotingResult other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      epochNumber_ = other.epochNumber_;
      results_ = other.results_.Clone();
      votersCount_ = other.votersCount_;
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      endTimestamp_ = other.endTimestamp_ != null ? other.endTimestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingResult Clone() {
      return new VotingResult(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 2;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    /// <summary>Field number for the "epoch_number" field.</summary>
    public const int EpochNumberFieldNumber = 3;
    private long epochNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EpochNumber {
      get { return epochNumber_; }
      set {
        epochNumber_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 4;
    private static readonly pbc::MapField<string, long>.Codec _map_results_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForSInt64(16), 34);
    private readonly pbc::MapField<string, long> results_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "voters_count" field.</summary>
    public const int VotersCountFieldNumber = 5;
    private long votersCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VotersCount {
      get { return votersCount_; }
      set {
        votersCount_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "end_timestamp" field.</summary>
    public const int EndTimestampFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTimestamp {
      get { return endTimestamp_; }
      set {
        endTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      if (EpochNumber != other.EpochNumber) return false;
      if (!Results.Equals(other.Results)) return false;
      if (VotersCount != other.VotersCount) return false;
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (!object.Equals(EndTimestamp, other.EndTimestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (EpochNumber != 0L) hash ^= EpochNumber.GetHashCode();
      hash ^= Results.GetHashCode();
      if (VotersCount != 0L) hash ^= VotersCount.GetHashCode();
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (endTimestamp_ != null) hash ^= EndTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sponsor);
      }
      if (EpochNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(EpochNumber);
      }
      results_.WriteTo(output, _map_results_codec);
      if (VotersCount != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(VotersCount);
      }
      if (startTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EndTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (EpochNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(EpochNumber);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (VotersCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(VotersCount);
      }
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingResult other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      if (other.EpochNumber != 0L) {
        EpochNumber = other.EpochNumber;
      }
      results_.Add(other.results_);
      if (other.VotersCount != 0L) {
        VotersCount = other.VotersCount;
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.endTimestamp_ != null) {
        if (endTimestamp_ == null) {
          EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTimestamp.MergeFrom(other.EndTimestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
          case 24: {
            EpochNumber = input.ReadSInt64();
            break;
          }
          case 34: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
          case 40: {
            VotersCount = input.ReadSInt64();
            break;
          }
          case 50: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 58: {
            if (endTimestamp_ == null) {
              EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTimestamp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateEpochNumberInput : pb::IMessage<UpdateEpochNumberInput> {
    private static readonly pb::MessageParser<UpdateEpochNumberInput> _parser = new pb::MessageParser<UpdateEpochNumberInput>(() => new UpdateEpochNumberInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateEpochNumberInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEpochNumberInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEpochNumberInput(UpdateEpochNumberInput other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      epochNumber_ = other.epochNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEpochNumberInput Clone() {
      return new UpdateEpochNumberInput(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "epoch_number" field.</summary>
    public const int EpochNumberFieldNumber = 3;
    private long epochNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EpochNumber {
      get { return epochNumber_; }
      set {
        epochNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateEpochNumberInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateEpochNumberInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (EpochNumber != other.EpochNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (EpochNumber != 0L) hash ^= EpochNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (EpochNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(EpochNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (EpochNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(EpochNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateEpochNumberInput other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.EpochNumber != 0L) {
        EpochNumber = other.EpochNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 24: {
            EpochNumber = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VotingRecord : pb::IMessage<VotingRecord> {
    private static readonly pb::MessageParser<VotingRecord> _parser = new pb::MessageParser<VotingRecord>(() => new VotingRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecord(VotingRecord other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      epochNumber_ = other.epochNumber_;
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      amount_ = other.amount_;
      withdrawTimestamp_ = other.withdrawTimestamp_ != null ? other.withdrawTimestamp_.Clone() : null;
      voteTimestamp_ = other.voteTimestamp_ != null ? other.voteTimestamp_.Clone() : null;
      isWithdrawn_ = other.isWithdrawn_;
      option_ = other.option_;
      currency_ = other.currency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecord Clone() {
      return new VotingRecord(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 2;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    /// <summary>Field number for the "epoch_number" field.</summary>
    public const int EpochNumberFieldNumber = 3;
    private long epochNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EpochNumber {
      get { return epochNumber_; }
      set {
        epochNumber_ = value;
      }
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 4;
    private global::AElf.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 5;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "withdraw_timestamp" field.</summary>
    public const int WithdrawTimestampFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp withdrawTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WithdrawTimestamp {
      get { return withdrawTimestamp_; }
      set {
        withdrawTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "vote_timestamp" field.</summary>
    public const int VoteTimestampFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp voteTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VoteTimestamp {
      get { return voteTimestamp_; }
      set {
        voteTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "is_withdrawn" field.</summary>
    public const int IsWithdrawnFieldNumber = 8;
    private bool isWithdrawn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWithdrawn {
      get { return isWithdrawn_; }
      set {
        isWithdrawn_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 9;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 10;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      if (EpochNumber != other.EpochNumber) return false;
      if (!object.Equals(Voter, other.Voter)) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(WithdrawTimestamp, other.WithdrawTimestamp)) return false;
      if (!object.Equals(VoteTimestamp, other.VoteTimestamp)) return false;
      if (IsWithdrawn != other.IsWithdrawn) return false;
      if (Option != other.Option) return false;
      if (Currency != other.Currency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (EpochNumber != 0L) hash ^= EpochNumber.GetHashCode();
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (withdrawTimestamp_ != null) hash ^= WithdrawTimestamp.GetHashCode();
      if (voteTimestamp_ != null) hash ^= VoteTimestamp.GetHashCode();
      if (IsWithdrawn != false) hash ^= IsWithdrawn.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sponsor);
      }
      if (EpochNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(EpochNumber);
      }
      if (voter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Voter);
      }
      if (Amount != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(Amount);
      }
      if (withdrawTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsWithdrawn);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Option);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (EpochNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(EpochNumber);
      }
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Amount);
      }
      if (withdrawTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        size += 1 + 1;
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingRecord other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      if (other.EpochNumber != 0L) {
        EpochNumber = other.EpochNumber;
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.withdrawTimestamp_ != null) {
        if (withdrawTimestamp_ == null) {
          WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WithdrawTimestamp.MergeFrom(other.WithdrawTimestamp);
      }
      if (other.voteTimestamp_ != null) {
        if (voteTimestamp_ == null) {
          VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VoteTimestamp.MergeFrom(other.VoteTimestamp);
      }
      if (other.IsWithdrawn != false) {
        IsWithdrawn = other.IsWithdrawn;
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
          case 24: {
            EpochNumber = input.ReadSInt64();
            break;
          }
          case 34: {
            if (voter_ == null) {
              Voter = new global::AElf.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 40: {
            Amount = input.ReadSInt64();
            break;
          }
          case 50: {
            if (withdrawTimestamp_ == null) {
              WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WithdrawTimestamp);
            break;
          }
          case 58: {
            if (voteTimestamp_ == null) {
              VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VoteTimestamp);
            break;
          }
          case 64: {
            IsWithdrawn = input.ReadBool();
            break;
          }
          case 74: {
            Option = input.ReadString();
            break;
          }
          case 82: {
            Currency = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddOptionInput : pb::IMessage<AddOptionInput> {
    private static readonly pb::MessageParser<AddOptionInput> _parser = new pb::MessageParser<AddOptionInput>(() => new AddOptionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddOptionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionInput(AddOptionInput other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      option_ = other.option_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionInput Clone() {
      return new AddOptionInput(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 2;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 3;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddOptionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddOptionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      if (Option != other.Option) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sponsor);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Option);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddOptionInput other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
          case 26: {
            Option = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveOptionInput : pb::IMessage<RemoveOptionInput> {
    private static readonly pb::MessageParser<RemoveOptionInput> _parser = new pb::MessageParser<RemoveOptionInput>(() => new RemoveOptionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveOptionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionInput(RemoveOptionInput other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      option_ = other.option_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionInput Clone() {
      return new RemoveOptionInput(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 2;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 3;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveOptionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveOptionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      if (Option != other.Option) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sponsor);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Option);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveOptionInput other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
          case 26: {
            Option = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VotingHistories : pb::IMessage<VotingHistories> {
    private static readonly pb::MessageParser<VotingHistories> _parser = new pb::MessageParser<VotingHistories>(() => new VotingHistories());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingHistories> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingHistories() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingHistories(VotingHistories other) : this() {
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      votes_ = other.votes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingHistories Clone() {
      return new VotingHistories(this);
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 1;
    private global::AElf.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "votes" field.</summary>
    public const int VotesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Vote.VotingHistory>.Codec _map_votes_codec
        = new pbc::MapField<string, global::Vote.VotingHistory>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Vote.VotingHistory.Parser), 18);
    private readonly pbc::MapField<string, global::Vote.VotingHistory> votes_ = new pbc::MapField<string, global::Vote.VotingHistory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Vote.VotingHistory> Votes {
      get { return votes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingHistories);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingHistories other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Voter, other.Voter)) return false;
      if (!Votes.Equals(other.Votes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voter_ != null) hash ^= Voter.GetHashCode();
      hash ^= Votes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Voter);
      }
      votes_.WriteTo(output, _map_votes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      size += votes_.CalculateSize(_map_votes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingHistories other) {
      if (other == null) {
        return;
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      votes_.Add(other.votes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voter_ == null) {
              Voter = new global::AElf.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 18: {
            votes_.AddEntriesFrom(input, _map_votes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VotingHistory : pb::IMessage<VotingHistory> {
    private static readonly pb::MessageParser<VotingHistory> _parser = new pb::MessageParser<VotingHistory>(() => new VotingHistory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingHistory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingHistory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingHistory(VotingHistory other) : this() {
      activeVotes_ = other.activeVotes_.Clone();
      withdrawnVotes_ = other.withdrawnVotes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingHistory Clone() {
      return new VotingHistory(this);
    }

    /// <summary>Field number for the "active_votes" field.</summary>
    public const int ActiveVotesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Hash> _repeated_activeVotes_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Hash> activeVotes_ = new pbc::RepeatedField<global::AElf.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Hash> ActiveVotes {
      get { return activeVotes_; }
    }

    /// <summary>Field number for the "withdrawn_votes" field.</summary>
    public const int WithdrawnVotesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Hash> _repeated_withdrawnVotes_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Hash> withdrawnVotes_ = new pbc::RepeatedField<global::AElf.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Hash> WithdrawnVotes {
      get { return withdrawnVotes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingHistory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingHistory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activeVotes_.Equals(other.activeVotes_)) return false;
      if(!withdrawnVotes_.Equals(other.withdrawnVotes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activeVotes_.GetHashCode();
      hash ^= withdrawnVotes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activeVotes_.WriteTo(output, _repeated_activeVotes_codec);
      withdrawnVotes_.WriteTo(output, _repeated_withdrawnVotes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activeVotes_.CalculateSize(_repeated_activeVotes_codec);
      size += withdrawnVotes_.CalculateSize(_repeated_withdrawnVotes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingHistory other) {
      if (other == null) {
        return;
      }
      activeVotes_.Add(other.activeVotes_);
      withdrawnVotes_.Add(other.withdrawnVotes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activeVotes_.AddEntriesFrom(input, _repeated_activeVotes_codec);
            break;
          }
          case 18: {
            withdrawnVotes_.AddEntriesFrom(input, _repeated_withdrawnVotes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVotingHistoryInput : pb::IMessage<GetVotingHistoryInput> {
    private static readonly pb::MessageParser<GetVotingHistoryInput> _parser = new pb::MessageParser<GetVotingHistoryInput>(() => new GetVotingHistoryInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingHistoryInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingHistoryInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingHistoryInput(GetVotingHistoryInput other) : this() {
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingHistoryInput Clone() {
      return new GetVotingHistoryInput(this);
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 1;
    private global::AElf.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 3;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingHistoryInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingHistoryInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Voter, other.Voter)) return false;
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Voter);
      }
      if (topic_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Sponsor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingHistoryInput other) {
      if (other == null) {
        return;
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voter_ == null) {
              Voter = new global::AElf.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 18: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 26: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVotingEventInput : pb::IMessage<GetVotingEventInput> {
    private static readonly pb::MessageParser<GetVotingEventInput> _parser = new pb::MessageParser<GetVotingEventInput>(() => new GetVotingEventInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingEventInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingEventInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingEventInput(GetVotingEventInput other) : this() {
      topic_ = other.topic_ != null ? other.topic_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingEventInput Clone() {
      return new GetVotingEventInput(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private global::AElf.Hash topic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash Topic {
      get { return topic_; }
      set {
        topic_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 2;
    private global::AElf.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingEventInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingEventInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (topic_ != null) hash ^= Topic.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (topic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Topic);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sponsor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (topic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingEventInput other) {
      if (other == null) {
        return;
      }
      if (other.topic_ != null) {
        if (topic_ == null) {
          Topic = new global::AElf.Hash();
        }
        Topic.MergeFrom(other.Topic);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (topic_ == null) {
              Topic = new global::AElf.Hash();
            }
            input.ReadMessage(Topic);
            break;
          }
          case 18: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVotingRecordsInput : pb::IMessage<GetVotingRecordsInput> {
    private static readonly pb::MessageParser<GetVotingRecordsInput> _parser = new pb::MessageParser<GetVotingRecordsInput>(() => new GetVotingRecordsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingRecordsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsInput(GetVotingRecordsInput other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsInput Clone() {
      return new GetVotingRecordsInput(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Hash> _repeated_ids_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Hash> ids_ = new pbc::RepeatedField<global::AElf.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Hash> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingRecordsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingRecordsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingRecordsInput other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVotingRecordsOutput : pb::IMessage<GetVotingRecordsOutput> {
    private static readonly pb::MessageParser<GetVotingRecordsOutput> _parser = new pb::MessageParser<GetVotingRecordsOutput>(() => new GetVotingRecordsOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingRecordsOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vote.VoteReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsOutput(GetVotingRecordsOutput other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsOutput Clone() {
      return new GetVotingRecordsOutput(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Vote.VotingRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::Vote.VotingRecord.Parser);
    private readonly pbc::RepeatedField<global::Vote.VotingRecord> records_ = new pbc::RepeatedField<global::Vote.VotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Vote.VotingRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingRecordsOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingRecordsOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingRecordsOutput other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
