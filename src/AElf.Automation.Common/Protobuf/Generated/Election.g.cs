// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: election.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Kernel {

  /// <summary>Holder for reflection information generated from election.proto</summary>
  public static partial class ElectionReflection {

    #region Descriptor
    /// <summary>File descriptor for election.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ElectionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5lbGVjdGlvbi5wcm90bxIIZWxlY3Rpb24aDGNvbW1vbi5wcm90bxofZ29v",
            "Z2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byJzChxJbml0aWFsRWxlY3Rp",
            "b25Db250cmFjdElucHV0EigKGXZvdGVfY29udHJhY3Rfc3lzdGVtX25hbWUY",
            "ASABKAsyBS5IYXNoEikKGnRva2VuX2NvbnRyYWN0X3N5c3RlbV9uYW1lGAIg",
            "ASgLMgUuSGFzaCImChVBbm5vdW5jZUVsZWN0aW9uSW5wdXQSDQoFYWxpYXMY",
            "ASABKAkifQoOVm90ZU1pbmVySW5wdXQSGwoTY2FuZGlkYXRlX3B1YmxpY0tl",
            "eRgBIAEoCRIOCgZhbW91bnQYAiABKBISEAoIbG9ja1RpbWUYAyABKBESLAoM",
            "TG9ja1RpbWVVbml0GAQgASgOMhYuZWxlY3Rpb24uTG9ja1RpbWVVbml0IiwK",
            "FVVwZGF0ZVRlcm1OdW1iZXJJbnB1dBITCgt0ZXJtX251bWJlchgBIAEoESIt",
            "ChZHZXRFbGVjdGlvblJlc3VsdElucHV0EhMKC3Rlcm1fbnVtYmVyGAEgASgR",
            "IqABCg5FbGVjdGlvblJlc3VsdBITCgt0ZXJtX251bWJlchgBIAEoERI2Cgdy",
            "ZXN1bHRzGAIgAygLMiUuZWxlY3Rpb24uRWxlY3Rpb25SZXN1bHQuUmVzdWx0",
            "c0VudHJ5EhEKCWlzX2FjdGl2ZRgDIAEoCBouCgxSZXN1bHRzRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgSOgI4ASJECgVWb3RlcxIbCgxhY3Rp",
            "dmVfdm90ZXMYASADKAsyBS5IYXNoEh4KD3dpdGhkcmF3bl92b3RlcxgCIAMo",
            "CzIFLkhhc2giwAIKEENhbmRpZGF0ZUhpc3RvcnkSEQoJUHVibGljS2V5GAEg",
            "ASgJEg0KBVRlcm1zGAIgAygDEhYKDlByb2R1Y2VkQmxvY2tzGAMgASgDEhcK",
            "D01pc3NlZFRpbWVTbG90cxgEIAEoAxIhChlDb250aW51YWxBcHBvaW50bWVu",
            "dENvdW50GAUgASgDEhoKElJlYXBwb2ludG1lbnRDb3VudBgGIAEoAxIPCgdB",
            "bGlhc2VzGAcgAygJEhQKDEN1cnJlbnRBbGlhcxgIIAEoCRIaChJDdXJyZW50",
            "Vm90ZXNOdW1iZXIYCSABKAMSGQoHQWRkcmVzcxgLIAEoCzIILkFkZHJlc3MS",
            "KAoZQW5ub3VuY2VtZW50VHJhbnNhY3Rpb25JZBgMIAEoCzIFLkhhc2gSEgoK",
            "SXNFdmlsTm9kZRgNIAEoCCK1AgoPRWxlY3Rpb25UaWNrZXRzEj8KF2VsZWN0",
            "aW9uX3ZvdGluZ19yZWNvcmRzGAEgAygLMh4uZWxlY3Rpb24uRWxlY3Rpb25W",
            "b3RpbmdSZWNvcmQSGgoSVm90aW5nUmVjb3Jkc0NvdW50GAIgASgDEhcKD09i",
            "dGFpbmVkVGlja2V0cxgDIAEoAxIUCgxWb3RlZFRpY2tldHMYBCABKAMSHgoW",
            "SGlzdG9yeU9idGFpbmVkVGlja2V0cxgFIAEoAxIbChNIaXN0b3J5Vm90ZWRU",
            "aWNrZXRzGAYgASgDEiEKElZvdGVUb1RyYW5zYWN0aW9ucxgIIAMoCzIFLkhh",
            "c2gSIwoUVm90ZUZyb21UcmFuc2FjdGlvbnMYCSADKAsyBS5IYXNoEhEKCVB1",
            "YmxpY0tleRgKIAEoCSL0AgoURWxlY3Rpb25Wb3RpbmdSZWNvcmQSDAoERnJv",
            "bRgBIAEoCRIKCgJUbxgCIAEoCRINCgVDb3VudBgDIAEoAxITCgtSb3VuZE51",
            "bWJlchgEIAEoAxIcCg1UcmFuc2FjdGlvbklkGAUgASgLMgUuSGFzaBIPCgdW",
            "b3RlQWdlGAYgASgDEhQKDExvY2tEYXlzTGlzdBgHIAMoBRIRCglVbmxvY2tB",
            "Z2UYCCABKAMSEgoKVGVybU51bWJlchgJIAEoAxIzCg9VbmxvY2tUaW1lc3Rh",
            "bXAYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjUKEVdpdGhk",
            "cmF3VGltZXN0YW1wGAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIxCg1Wb3RlVGltZXN0YW1wGAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBITCgtJc1dpdGhkcmF3bhgNIAEoCCJUCiBQYWdlYWJsZUVsZWN0",
            "aW9uVGlja2V0c0luZm9JbnB1dBINCgVzdGFydBgBIAEoERIOCgZsZW5ndGgY",
            "AiABKBESEQoJcHVibGljS2V5GAMgASgJIikKCFBhZ2VJbmZvEg0KBXN0YXJ0",
            "GAEgASgREg4KBmxlbmd0aBgCIAEoESK9AQoaQ2FuZGlkYXRlSGlzdG9yeURp",
            "Y3Rpb25hcnkSPAoETWFwcxgBIAMoCzIuLmVsZWN0aW9uLkNhbmRpZGF0ZUhp",
            "c3RvcnlEaWN0aW9uYXJ5Lk1hcHNFbnRyeRIYChBDYW5kaWRhdGVzTnVtYmVy",
            "GAMgASgFGkcKCU1hcHNFbnRyeRILCgNrZXkYASABKAkSKQoFdmFsdWUYAiAB",
            "KAsyGi5lbGVjdGlvbi5DYW5kaWRhdGVIaXN0b3J5OgI4ASJlChhFbGVjdGlv",
            "blRpY2tldHNIaXN0b3JpZXMSMAoGVmFsdWVzGAEgAygLMiAuZWxlY3Rpb24u",
            "RWxlY3Rpb25UaWNrZXRzSGlzdG9yeRIXCg9IaXN0b3JpZXNOdW1iZXIYAiAB",
            "KAMitwEKFkVsZWN0aW9uVGlja2V0c0hpc3RvcnkSFgoOQ2FuZGlkYXRlQWxp",
            "YXMYASABKAkSEwoLVm90ZXNOdW1iZXIYAiABKAMSLQoJVGltZXN0YW1wGAMg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBINCgVTdGF0ZRgEIAEo",
            "CBIyCgRUeXBlGAUgASgOMiQuZWxlY3Rpb24uRWxlY3Rpb25UaWNrZXRzSGlz",
            "dG9yeVR5cGUiHAoLU3RyaW5nSW5wdXQSDQoFdmFsdWUYASABKAkiHQoMU3Ry",
            "aW5nT3V0cHV0Eg0KBXZhbHVlGAEgASgJKiQKDExvY2tUaW1lVW5pdBIICgRE",
            "YXlzEAASCgoGTW91dGhzEAEqPAoaRWxlY3Rpb25UaWNrZXRzSGlzdG9yeVR5",
            "cGUSCAoETm9uZRAAEgoKBlJlZGVlbRABEggKBFZvdGUQAkIOqgILQUVsZi5L",
            "ZXJuZWxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.Kernel.LockTimeUnit), typeof(global::AElf.Kernel.ElectionTicketsHistoryType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.InitialElectionContractInput), global::AElf.Kernel.InitialElectionContractInput.Parser, new[]{ "VoteContractSystemName", "TokenContractSystemName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.AnnounceElectionInput), global::AElf.Kernel.AnnounceElectionInput.Parser, new[]{ "Alias" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.VoteMinerInput), global::AElf.Kernel.VoteMinerInput.Parser, new[]{ "CandidatePublicKey", "Amount", "LockTime", "LockTimeUnit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.UpdateTermNumberInput), global::AElf.Kernel.UpdateTermNumberInput.Parser, new[]{ "TermNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.GetElectionResultInput), global::AElf.Kernel.GetElectionResultInput.Parser, new[]{ "TermNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.ElectionResult), global::AElf.Kernel.ElectionResult.Parser, new[]{ "TermNumber", "Results", "IsActive" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Votes), global::AElf.Kernel.Votes.Parser, new[]{ "ActiveVotes", "WithdrawnVotes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.CandidateHistory), global::AElf.Kernel.CandidateHistory.Parser, new[]{ "PublicKey", "Terms", "ProducedBlocks", "MissedTimeSlots", "ContinualAppointmentCount", "ReappointmentCount", "Aliases", "CurrentAlias", "CurrentVotesNumber", "Address", "AnnouncementTransactionId", "IsEvilNode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.ElectionTickets), global::AElf.Kernel.ElectionTickets.Parser, new[]{ "ElectionVotingRecords", "VotingRecordsCount", "ObtainedTickets", "VotedTickets", "HistoryObtainedTickets", "HistoryVotedTickets", "VoteToTransactions", "VoteFromTransactions", "PublicKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.ElectionVotingRecord), global::AElf.Kernel.ElectionVotingRecord.Parser, new[]{ "From", "To", "Count", "RoundNumber", "TransactionId", "VoteAge", "LockDaysList", "UnlockAge", "TermNumber", "UnlockTimestamp", "WithdrawTimestamp", "VoteTimestamp", "IsWithdrawn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.PageableElectionTicketsInfoInput), global::AElf.Kernel.PageableElectionTicketsInfoInput.Parser, new[]{ "Start", "Length", "PublicKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.PageInfo), global::AElf.Kernel.PageInfo.Parser, new[]{ "Start", "Length" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.CandidateHistoryDictionary), global::AElf.Kernel.CandidateHistoryDictionary.Parser, new[]{ "Maps", "CandidatesNumber" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.ElectionTicketsHistories), global::AElf.Kernel.ElectionTicketsHistories.Parser, new[]{ "Values", "HistoriesNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.ElectionTicketsHistory), global::AElf.Kernel.ElectionTicketsHistory.Parser, new[]{ "CandidateAlias", "VotesNumber", "Timestamp", "State", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.StringInput), global::AElf.Kernel.StringInput.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.StringOutput), global::AElf.Kernel.StringOutput.Parser, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LockTimeUnit {
    [pbr::OriginalName("Days")] Days = 0,
    [pbr::OriginalName("Mouths")] Mouths = 1,
  }

  public enum ElectionTicketsHistoryType {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("Redeem")] Redeem = 1,
    [pbr::OriginalName("Vote")] Vote = 2,
  }

  #endregion

  #region Messages
  public sealed partial class InitialElectionContractInput : pb::IMessage<InitialElectionContractInput> {
    private static readonly pb::MessageParser<InitialElectionContractInput> _parser = new pb::MessageParser<InitialElectionContractInput>(() => new InitialElectionContractInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitialElectionContractInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialElectionContractInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialElectionContractInput(InitialElectionContractInput other) : this() {
      voteContractSystemName_ = other.voteContractSystemName_ != null ? other.voteContractSystemName_.Clone() : null;
      tokenContractSystemName_ = other.tokenContractSystemName_ != null ? other.tokenContractSystemName_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialElectionContractInput Clone() {
      return new InitialElectionContractInput(this);
    }

    /// <summary>Field number for the "vote_contract_system_name" field.</summary>
    public const int VoteContractSystemNameFieldNumber = 1;
    private global::AElf.Hash voteContractSystemName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash VoteContractSystemName {
      get { return voteContractSystemName_; }
      set {
        voteContractSystemName_ = value;
      }
    }

    /// <summary>Field number for the "token_contract_system_name" field.</summary>
    public const int TokenContractSystemNameFieldNumber = 2;
    private global::AElf.Hash tokenContractSystemName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash TokenContractSystemName {
      get { return tokenContractSystemName_; }
      set {
        tokenContractSystemName_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitialElectionContractInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitialElectionContractInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoteContractSystemName, other.VoteContractSystemName)) return false;
      if (!object.Equals(TokenContractSystemName, other.TokenContractSystemName)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voteContractSystemName_ != null) hash ^= VoteContractSystemName.GetHashCode();
      if (tokenContractSystemName_ != null) hash ^= TokenContractSystemName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voteContractSystemName_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoteContractSystemName);
      }
      if (tokenContractSystemName_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenContractSystemName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voteContractSystemName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteContractSystemName);
      }
      if (tokenContractSystemName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenContractSystemName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitialElectionContractInput other) {
      if (other == null) {
        return;
      }
      if (other.voteContractSystemName_ != null) {
        if (voteContractSystemName_ == null) {
          VoteContractSystemName = new global::AElf.Hash();
        }
        VoteContractSystemName.MergeFrom(other.VoteContractSystemName);
      }
      if (other.tokenContractSystemName_ != null) {
        if (tokenContractSystemName_ == null) {
          TokenContractSystemName = new global::AElf.Hash();
        }
        TokenContractSystemName.MergeFrom(other.TokenContractSystemName);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voteContractSystemName_ == null) {
              VoteContractSystemName = new global::AElf.Hash();
            }
            input.ReadMessage(VoteContractSystemName);
            break;
          }
          case 18: {
            if (tokenContractSystemName_ == null) {
              TokenContractSystemName = new global::AElf.Hash();
            }
            input.ReadMessage(TokenContractSystemName);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnnounceElectionInput : pb::IMessage<AnnounceElectionInput> {
    private static readonly pb::MessageParser<AnnounceElectionInput> _parser = new pb::MessageParser<AnnounceElectionInput>(() => new AnnounceElectionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnounceElectionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnounceElectionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnounceElectionInput(AnnounceElectionInput other) : this() {
      alias_ = other.alias_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnounceElectionInput Clone() {
      return new AnnounceElectionInput(this);
    }

    /// <summary>Field number for the "alias" field.</summary>
    public const int AliasFieldNumber = 1;
    private string alias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Alias {
      get { return alias_; }
      set {
        alias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnounceElectionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnounceElectionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Alias != other.Alias) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Alias.Length != 0) hash ^= Alias.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Alias.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Alias);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Alias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Alias);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnounceElectionInput other) {
      if (other == null) {
        return;
      }
      if (other.Alias.Length != 0) {
        Alias = other.Alias;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Alias = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoteMinerInput : pb::IMessage<VoteMinerInput> {
    private static readonly pb::MessageParser<VoteMinerInput> _parser = new pb::MessageParser<VoteMinerInput>(() => new VoteMinerInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteMinerInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteMinerInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteMinerInput(VoteMinerInput other) : this() {
      candidatePublicKey_ = other.candidatePublicKey_;
      amount_ = other.amount_;
      lockTime_ = other.lockTime_;
      lockTimeUnit_ = other.lockTimeUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteMinerInput Clone() {
      return new VoteMinerInput(this);
    }

    /// <summary>Field number for the "candidate_publicKey" field.</summary>
    public const int CandidatePublicKeyFieldNumber = 1;
    private string candidatePublicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CandidatePublicKey {
      get { return candidatePublicKey_; }
      set {
        candidatePublicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "lockTime" field.</summary>
    public const int LockTimeFieldNumber = 3;
    private int lockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LockTime {
      get { return lockTime_; }
      set {
        lockTime_ = value;
      }
    }

    /// <summary>Field number for the "LockTimeUnit" field.</summary>
    public const int LockTimeUnitFieldNumber = 4;
    private global::AElf.Kernel.LockTimeUnit lockTimeUnit_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.LockTimeUnit LockTimeUnit {
      get { return lockTimeUnit_; }
      set {
        lockTimeUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteMinerInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteMinerInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CandidatePublicKey != other.CandidatePublicKey) return false;
      if (Amount != other.Amount) return false;
      if (LockTime != other.LockTime) return false;
      if (LockTimeUnit != other.LockTimeUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CandidatePublicKey.Length != 0) hash ^= CandidatePublicKey.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (LockTime != 0) hash ^= LockTime.GetHashCode();
      if (LockTimeUnit != 0) hash ^= LockTimeUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CandidatePublicKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CandidatePublicKey);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(Amount);
      }
      if (LockTime != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(LockTime);
      }
      if (LockTimeUnit != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) LockTimeUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CandidatePublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CandidatePublicKey);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Amount);
      }
      if (LockTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LockTime);
      }
      if (LockTimeUnit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LockTimeUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteMinerInput other) {
      if (other == null) {
        return;
      }
      if (other.CandidatePublicKey.Length != 0) {
        CandidatePublicKey = other.CandidatePublicKey;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.LockTime != 0) {
        LockTime = other.LockTime;
      }
      if (other.LockTimeUnit != 0) {
        LockTimeUnit = other.LockTimeUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CandidatePublicKey = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadSInt64();
            break;
          }
          case 24: {
            LockTime = input.ReadSInt32();
            break;
          }
          case 32: {
            LockTimeUnit = (global::AElf.Kernel.LockTimeUnit) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTermNumberInput : pb::IMessage<UpdateTermNumberInput> {
    private static readonly pb::MessageParser<UpdateTermNumberInput> _parser = new pb::MessageParser<UpdateTermNumberInput>(() => new UpdateTermNumberInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTermNumberInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTermNumberInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTermNumberInput(UpdateTermNumberInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTermNumberInput Clone() {
      return new UpdateTermNumberInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private int termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTermNumberInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTermNumberInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTermNumberInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetElectionResultInput : pb::IMessage<GetElectionResultInput> {
    private static readonly pb::MessageParser<GetElectionResultInput> _parser = new pb::MessageParser<GetElectionResultInput>(() => new GetElectionResultInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetElectionResultInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput(GetElectionResultInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElectionResultInput Clone() {
      return new GetElectionResultInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private int termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetElectionResultInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetElectionResultInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetElectionResultInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectionResult : pb::IMessage<ElectionResult> {
    private static readonly pb::MessageParser<ElectionResult> _parser = new pb::MessageParser<ElectionResult>(() => new ElectionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult(ElectionResult other) : this() {
      termNumber_ = other.termNumber_;
      results_ = other.results_.Clone();
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionResult Clone() {
      return new ElectionResult(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private int termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pbc::MapField<string, long>.Codec _map_results_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForSInt64(16), 18);
    private readonly pbc::MapField<string, long> results_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 3;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      if (!Results.Equals(other.Results)) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0) hash ^= TermNumber.GetHashCode();
      hash ^= Results.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TermNumber != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(TermNumber);
      }
      results_.WriteTo(output, _map_results_codec);
      if (IsActive != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TermNumber);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionResult other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0) {
        TermNumber = other.TermNumber;
      }
      results_.Add(other.results_);
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadSInt32();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
          case 24: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Votes : pb::IMessage<Votes> {
    private static readonly pb::MessageParser<Votes> _parser = new pb::MessageParser<Votes>(() => new Votes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Votes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Votes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Votes(Votes other) : this() {
      activeVotes_ = other.activeVotes_.Clone();
      withdrawnVotes_ = other.withdrawnVotes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Votes Clone() {
      return new Votes(this);
    }

    /// <summary>Field number for the "active_votes" field.</summary>
    public const int ActiveVotesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Hash> _repeated_activeVotes_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Hash> activeVotes_ = new pbc::RepeatedField<global::AElf.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Hash> ActiveVotes {
      get { return activeVotes_; }
    }

    /// <summary>Field number for the "withdrawn_votes" field.</summary>
    public const int WithdrawnVotesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Hash> _repeated_withdrawnVotes_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Hash> withdrawnVotes_ = new pbc::RepeatedField<global::AElf.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Hash> WithdrawnVotes {
      get { return withdrawnVotes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Votes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Votes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activeVotes_.Equals(other.activeVotes_)) return false;
      if(!withdrawnVotes_.Equals(other.withdrawnVotes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activeVotes_.GetHashCode();
      hash ^= withdrawnVotes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activeVotes_.WriteTo(output, _repeated_activeVotes_codec);
      withdrawnVotes_.WriteTo(output, _repeated_withdrawnVotes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activeVotes_.CalculateSize(_repeated_activeVotes_codec);
      size += withdrawnVotes_.CalculateSize(_repeated_withdrawnVotes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Votes other) {
      if (other == null) {
        return;
      }
      activeVotes_.Add(other.activeVotes_);
      withdrawnVotes_.Add(other.withdrawnVotes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activeVotes_.AddEntriesFrom(input, _repeated_activeVotes_codec);
            break;
          }
          case 18: {
            withdrawnVotes_.AddEntriesFrom(input, _repeated_withdrawnVotes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CandidateHistory : pb::IMessage<CandidateHistory> {
    private static readonly pb::MessageParser<CandidateHistory> _parser = new pb::MessageParser<CandidateHistory>(() => new CandidateHistory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateHistory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateHistory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateHistory(CandidateHistory other) : this() {
      publicKey_ = other.publicKey_;
      terms_ = other.terms_.Clone();
      producedBlocks_ = other.producedBlocks_;
      missedTimeSlots_ = other.missedTimeSlots_;
      continualAppointmentCount_ = other.continualAppointmentCount_;
      reappointmentCount_ = other.reappointmentCount_;
      aliases_ = other.aliases_.Clone();
      currentAlias_ = other.currentAlias_;
      currentVotesNumber_ = other.currentVotesNumber_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      announcementTransactionId_ = other.announcementTransactionId_ != null ? other.announcementTransactionId_.Clone() : null;
      isEvilNode_ = other.isEvilNode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateHistory Clone() {
      return new CandidateHistory(this);
    }

    /// <summary>Field number for the "PublicKey" field.</summary>
    public const int PublicKeyFieldNumber = 1;
    private string publicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Terms" field.</summary>
    public const int TermsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_terms_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> terms_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Terms {
      get { return terms_; }
    }

    /// <summary>Field number for the "ProducedBlocks" field.</summary>
    public const int ProducedBlocksFieldNumber = 3;
    private long producedBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProducedBlocks {
      get { return producedBlocks_; }
      set {
        producedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "MissedTimeSlots" field.</summary>
    public const int MissedTimeSlotsFieldNumber = 4;
    private long missedTimeSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MissedTimeSlots {
      get { return missedTimeSlots_; }
      set {
        missedTimeSlots_ = value;
      }
    }

    /// <summary>Field number for the "ContinualAppointmentCount" field.</summary>
    public const int ContinualAppointmentCountFieldNumber = 5;
    private long continualAppointmentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ContinualAppointmentCount {
      get { return continualAppointmentCount_; }
      set {
        continualAppointmentCount_ = value;
      }
    }

    /// <summary>Field number for the "ReappointmentCount" field.</summary>
    public const int ReappointmentCountFieldNumber = 6;
    private long reappointmentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReappointmentCount {
      get { return reappointmentCount_; }
      set {
        reappointmentCount_ = value;
      }
    }

    /// <summary>Field number for the "Aliases" field.</summary>
    public const int AliasesFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_aliases_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> aliases_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Aliases {
      get { return aliases_; }
    }

    /// <summary>Field number for the "CurrentAlias" field.</summary>
    public const int CurrentAliasFieldNumber = 8;
    private string currentAlias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentAlias {
      get { return currentAlias_; }
      set {
        currentAlias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CurrentVotesNumber" field.</summary>
    public const int CurrentVotesNumberFieldNumber = 9;
    private long currentVotesNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentVotesNumber {
      get { return currentVotesNumber_; }
      set {
        currentVotesNumber_ = value;
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 11;
    private global::AElf.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "AnnouncementTransactionId" field.</summary>
    public const int AnnouncementTransactionIdFieldNumber = 12;
    private global::AElf.Hash announcementTransactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash AnnouncementTransactionId {
      get { return announcementTransactionId_; }
      set {
        announcementTransactionId_ = value;
      }
    }

    /// <summary>Field number for the "IsEvilNode" field.</summary>
    public const int IsEvilNodeFieldNumber = 13;
    private bool isEvilNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEvilNode {
      get { return isEvilNode_; }
      set {
        isEvilNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateHistory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateHistory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PublicKey != other.PublicKey) return false;
      if(!terms_.Equals(other.terms_)) return false;
      if (ProducedBlocks != other.ProducedBlocks) return false;
      if (MissedTimeSlots != other.MissedTimeSlots) return false;
      if (ContinualAppointmentCount != other.ContinualAppointmentCount) return false;
      if (ReappointmentCount != other.ReappointmentCount) return false;
      if(!aliases_.Equals(other.aliases_)) return false;
      if (CurrentAlias != other.CurrentAlias) return false;
      if (CurrentVotesNumber != other.CurrentVotesNumber) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(AnnouncementTransactionId, other.AnnouncementTransactionId)) return false;
      if (IsEvilNode != other.IsEvilNode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      hash ^= terms_.GetHashCode();
      if (ProducedBlocks != 0L) hash ^= ProducedBlocks.GetHashCode();
      if (MissedTimeSlots != 0L) hash ^= MissedTimeSlots.GetHashCode();
      if (ContinualAppointmentCount != 0L) hash ^= ContinualAppointmentCount.GetHashCode();
      if (ReappointmentCount != 0L) hash ^= ReappointmentCount.GetHashCode();
      hash ^= aliases_.GetHashCode();
      if (CurrentAlias.Length != 0) hash ^= CurrentAlias.GetHashCode();
      if (CurrentVotesNumber != 0L) hash ^= CurrentVotesNumber.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (announcementTransactionId_ != null) hash ^= AnnouncementTransactionId.GetHashCode();
      if (IsEvilNode != false) hash ^= IsEvilNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PublicKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PublicKey);
      }
      terms_.WriteTo(output, _repeated_terms_codec);
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MissedTimeSlots);
      }
      if (ContinualAppointmentCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ContinualAppointmentCount);
      }
      if (ReappointmentCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ReappointmentCount);
      }
      aliases_.WriteTo(output, _repeated_aliases_codec);
      if (CurrentAlias.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CurrentAlias);
      }
      if (CurrentVotesNumber != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(CurrentVotesNumber);
      }
      if (address_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Address);
      }
      if (announcementTransactionId_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(AnnouncementTransactionId);
      }
      if (IsEvilNode != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsEvilNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
      }
      size += terms_.CalculateSize(_repeated_terms_codec);
      if (ProducedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MissedTimeSlots);
      }
      if (ContinualAppointmentCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ContinualAppointmentCount);
      }
      if (ReappointmentCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReappointmentCount);
      }
      size += aliases_.CalculateSize(_repeated_aliases_codec);
      if (CurrentAlias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentAlias);
      }
      if (CurrentVotesNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentVotesNumber);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (announcementTransactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnouncementTransactionId);
      }
      if (IsEvilNode != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateHistory other) {
      if (other == null) {
        return;
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      terms_.Add(other.terms_);
      if (other.ProducedBlocks != 0L) {
        ProducedBlocks = other.ProducedBlocks;
      }
      if (other.MissedTimeSlots != 0L) {
        MissedTimeSlots = other.MissedTimeSlots;
      }
      if (other.ContinualAppointmentCount != 0L) {
        ContinualAppointmentCount = other.ContinualAppointmentCount;
      }
      if (other.ReappointmentCount != 0L) {
        ReappointmentCount = other.ReappointmentCount;
      }
      aliases_.Add(other.aliases_);
      if (other.CurrentAlias.Length != 0) {
        CurrentAlias = other.CurrentAlias;
      }
      if (other.CurrentVotesNumber != 0L) {
        CurrentVotesNumber = other.CurrentVotesNumber;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.announcementTransactionId_ != null) {
        if (announcementTransactionId_ == null) {
          AnnouncementTransactionId = new global::AElf.Hash();
        }
        AnnouncementTransactionId.MergeFrom(other.AnnouncementTransactionId);
      }
      if (other.IsEvilNode != false) {
        IsEvilNode = other.IsEvilNode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PublicKey = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            terms_.AddEntriesFrom(input, _repeated_terms_codec);
            break;
          }
          case 24: {
            ProducedBlocks = input.ReadInt64();
            break;
          }
          case 32: {
            MissedTimeSlots = input.ReadInt64();
            break;
          }
          case 40: {
            ContinualAppointmentCount = input.ReadInt64();
            break;
          }
          case 48: {
            ReappointmentCount = input.ReadInt64();
            break;
          }
          case 58: {
            aliases_.AddEntriesFrom(input, _repeated_aliases_codec);
            break;
          }
          case 66: {
            CurrentAlias = input.ReadString();
            break;
          }
          case 72: {
            CurrentVotesNumber = input.ReadInt64();
            break;
          }
          case 90: {
            if (address_ == null) {
              Address = new global::AElf.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 98: {
            if (announcementTransactionId_ == null) {
              AnnouncementTransactionId = new global::AElf.Hash();
            }
            input.ReadMessage(AnnouncementTransactionId);
            break;
          }
          case 104: {
            IsEvilNode = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The ticket / voting information for one user.
  /// </summary>
  public sealed partial class ElectionTickets : pb::IMessage<ElectionTickets> {
    private static readonly pb::MessageParser<ElectionTickets> _parser = new pb::MessageParser<ElectionTickets>(() => new ElectionTickets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionTickets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTickets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTickets(ElectionTickets other) : this() {
      electionVotingRecords_ = other.electionVotingRecords_.Clone();
      votingRecordsCount_ = other.votingRecordsCount_;
      obtainedTickets_ = other.obtainedTickets_;
      votedTickets_ = other.votedTickets_;
      historyObtainedTickets_ = other.historyObtainedTickets_;
      historyVotedTickets_ = other.historyVotedTickets_;
      voteToTransactions_ = other.voteToTransactions_.Clone();
      voteFromTransactions_ = other.voteFromTransactions_.Clone();
      publicKey_ = other.publicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTickets Clone() {
      return new ElectionTickets(this);
    }

    /// <summary>Field number for the "election_voting_records" field.</summary>
    public const int ElectionVotingRecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Kernel.ElectionVotingRecord> _repeated_electionVotingRecords_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Kernel.ElectionVotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.ElectionVotingRecord> electionVotingRecords_ = new pbc::RepeatedField<global::AElf.Kernel.ElectionVotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.ElectionVotingRecord> ElectionVotingRecords {
      get { return electionVotingRecords_; }
    }

    /// <summary>Field number for the "VotingRecordsCount" field.</summary>
    public const int VotingRecordsCountFieldNumber = 2;
    private long votingRecordsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VotingRecordsCount {
      get { return votingRecordsCount_; }
      set {
        votingRecordsCount_ = value;
      }
    }

    /// <summary>Field number for the "ObtainedTickets" field.</summary>
    public const int ObtainedTicketsFieldNumber = 3;
    private long obtainedTickets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObtainedTickets {
      get { return obtainedTickets_; }
      set {
        obtainedTickets_ = value;
      }
    }

    /// <summary>Field number for the "VotedTickets" field.</summary>
    public const int VotedTicketsFieldNumber = 4;
    private long votedTickets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VotedTickets {
      get { return votedTickets_; }
      set {
        votedTickets_ = value;
      }
    }

    /// <summary>Field number for the "HistoryObtainedTickets" field.</summary>
    public const int HistoryObtainedTicketsFieldNumber = 5;
    private long historyObtainedTickets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HistoryObtainedTickets {
      get { return historyObtainedTickets_; }
      set {
        historyObtainedTickets_ = value;
      }
    }

    /// <summary>Field number for the "HistoryVotedTickets" field.</summary>
    public const int HistoryVotedTicketsFieldNumber = 6;
    private long historyVotedTickets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HistoryVotedTickets {
      get { return historyVotedTickets_; }
      set {
        historyVotedTickets_ = value;
      }
    }

    /// <summary>Field number for the "VoteToTransactions" field.</summary>
    public const int VoteToTransactionsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::AElf.Hash> _repeated_voteToTransactions_codec
        = pb::FieldCodec.ForMessage(66, global::AElf.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Hash> voteToTransactions_ = new pbc::RepeatedField<global::AElf.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Hash> VoteToTransactions {
      get { return voteToTransactions_; }
    }

    /// <summary>Field number for the "VoteFromTransactions" field.</summary>
    public const int VoteFromTransactionsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::AElf.Hash> _repeated_voteFromTransactions_codec
        = pb::FieldCodec.ForMessage(74, global::AElf.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Hash> voteFromTransactions_ = new pbc::RepeatedField<global::AElf.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Hash> VoteFromTransactions {
      get { return voteFromTransactions_; }
    }

    /// <summary>Field number for the "PublicKey" field.</summary>
    public const int PublicKeyFieldNumber = 10;
    private string publicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionTickets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionTickets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!electionVotingRecords_.Equals(other.electionVotingRecords_)) return false;
      if (VotingRecordsCount != other.VotingRecordsCount) return false;
      if (ObtainedTickets != other.ObtainedTickets) return false;
      if (VotedTickets != other.VotedTickets) return false;
      if (HistoryObtainedTickets != other.HistoryObtainedTickets) return false;
      if (HistoryVotedTickets != other.HistoryVotedTickets) return false;
      if(!voteToTransactions_.Equals(other.voteToTransactions_)) return false;
      if(!voteFromTransactions_.Equals(other.voteFromTransactions_)) return false;
      if (PublicKey != other.PublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= electionVotingRecords_.GetHashCode();
      if (VotingRecordsCount != 0L) hash ^= VotingRecordsCount.GetHashCode();
      if (ObtainedTickets != 0L) hash ^= ObtainedTickets.GetHashCode();
      if (VotedTickets != 0L) hash ^= VotedTickets.GetHashCode();
      if (HistoryObtainedTickets != 0L) hash ^= HistoryObtainedTickets.GetHashCode();
      if (HistoryVotedTickets != 0L) hash ^= HistoryVotedTickets.GetHashCode();
      hash ^= voteToTransactions_.GetHashCode();
      hash ^= voteFromTransactions_.GetHashCode();
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      electionVotingRecords_.WriteTo(output, _repeated_electionVotingRecords_codec);
      if (VotingRecordsCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(VotingRecordsCount);
      }
      if (ObtainedTickets != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ObtainedTickets);
      }
      if (VotedTickets != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(VotedTickets);
      }
      if (HistoryObtainedTickets != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(HistoryObtainedTickets);
      }
      if (HistoryVotedTickets != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(HistoryVotedTickets);
      }
      voteToTransactions_.WriteTo(output, _repeated_voteToTransactions_codec);
      voteFromTransactions_.WriteTo(output, _repeated_voteFromTransactions_codec);
      if (PublicKey.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += electionVotingRecords_.CalculateSize(_repeated_electionVotingRecords_codec);
      if (VotingRecordsCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VotingRecordsCount);
      }
      if (ObtainedTickets != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObtainedTickets);
      }
      if (VotedTickets != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VotedTickets);
      }
      if (HistoryObtainedTickets != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HistoryObtainedTickets);
      }
      if (HistoryVotedTickets != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HistoryVotedTickets);
      }
      size += voteToTransactions_.CalculateSize(_repeated_voteToTransactions_codec);
      size += voteFromTransactions_.CalculateSize(_repeated_voteFromTransactions_codec);
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionTickets other) {
      if (other == null) {
        return;
      }
      electionVotingRecords_.Add(other.electionVotingRecords_);
      if (other.VotingRecordsCount != 0L) {
        VotingRecordsCount = other.VotingRecordsCount;
      }
      if (other.ObtainedTickets != 0L) {
        ObtainedTickets = other.ObtainedTickets;
      }
      if (other.VotedTickets != 0L) {
        VotedTickets = other.VotedTickets;
      }
      if (other.HistoryObtainedTickets != 0L) {
        HistoryObtainedTickets = other.HistoryObtainedTickets;
      }
      if (other.HistoryVotedTickets != 0L) {
        HistoryVotedTickets = other.HistoryVotedTickets;
      }
      voteToTransactions_.Add(other.voteToTransactions_);
      voteFromTransactions_.Add(other.voteFromTransactions_);
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            electionVotingRecords_.AddEntriesFrom(input, _repeated_electionVotingRecords_codec);
            break;
          }
          case 16: {
            VotingRecordsCount = input.ReadInt64();
            break;
          }
          case 24: {
            ObtainedTickets = input.ReadInt64();
            break;
          }
          case 32: {
            VotedTickets = input.ReadInt64();
            break;
          }
          case 40: {
            HistoryObtainedTickets = input.ReadInt64();
            break;
          }
          case 48: {
            HistoryVotedTickets = input.ReadInt64();
            break;
          }
          case 66: {
            voteToTransactions_.AddEntriesFrom(input, _repeated_voteToTransactions_codec);
            break;
          }
          case 74: {
            voteFromTransactions_.AddEntriesFrom(input, _repeated_voteFromTransactions_codec);
            break;
          }
          case 82: {
            PublicKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectionVotingRecord : pb::IMessage<ElectionVotingRecord> {
    private static readonly pb::MessageParser<ElectionVotingRecord> _parser = new pb::MessageParser<ElectionVotingRecord>(() => new ElectionVotingRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionVotingRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord(ElectionVotingRecord other) : this() {
      from_ = other.from_;
      to_ = other.to_;
      count_ = other.count_;
      roundNumber_ = other.roundNumber_;
      transactionId_ = other.transactionId_ != null ? other.transactionId_.Clone() : null;
      voteAge_ = other.voteAge_;
      lockDaysList_ = other.lockDaysList_.Clone();
      unlockAge_ = other.unlockAge_;
      termNumber_ = other.termNumber_;
      unlockTimestamp_ = other.unlockTimestamp_ != null ? other.unlockTimestamp_.Clone() : null;
      withdrawTimestamp_ = other.withdrawTimestamp_ != null ? other.withdrawTimestamp_.Clone() : null;
      voteTimestamp_ = other.voteTimestamp_ != null ? other.voteTimestamp_.Clone() : null;
      isWithdrawn_ = other.isWithdrawn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionVotingRecord Clone() {
      return new ElectionVotingRecord(this);
    }

    /// <summary>Field number for the "From" field.</summary>
    public const int FromFieldNumber = 1;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "To" field.</summary>
    public const int ToFieldNumber = 2;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 3;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "RoundNumber" field.</summary>
    public const int RoundNumberFieldNumber = 4;
    private long roundNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    /// <summary>Field number for the "TransactionId" field.</summary>
    public const int TransactionIdFieldNumber = 5;
    private global::AElf.Hash transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Hash TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "VoteAge" field.</summary>
    public const int VoteAgeFieldNumber = 6;
    private long voteAge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VoteAge {
      get { return voteAge_; }
      set {
        voteAge_ = value;
      }
    }

    /// <summary>Field number for the "LockDaysList" field.</summary>
    public const int LockDaysListFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_lockDaysList_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> lockDaysList_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Can be renewed by adding items.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LockDaysList {
      get { return lockDaysList_; }
    }

    /// <summary>Field number for the "UnlockAge" field.</summary>
    public const int UnlockAgeFieldNumber = 8;
    private long unlockAge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnlockAge {
      get { return unlockAge_; }
      set {
        unlockAge_ = value;
      }
    }

    /// <summary>Field number for the "TermNumber" field.</summary>
    public const int TermNumberFieldNumber = 9;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "UnlockTimestamp" field.</summary>
    public const int UnlockTimestampFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp unlockTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UnlockTimestamp {
      get { return unlockTimestamp_; }
      set {
        unlockTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "WithdrawTimestamp" field.</summary>
    public const int WithdrawTimestampFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp withdrawTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WithdrawTimestamp {
      get { return withdrawTimestamp_; }
      set {
        withdrawTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "VoteTimestamp" field.</summary>
    public const int VoteTimestampFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp voteTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VoteTimestamp {
      get { return voteTimestamp_; }
      set {
        voteTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "IsWithdrawn" field.</summary>
    public const int IsWithdrawnFieldNumber = 13;
    private bool isWithdrawn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWithdrawn {
      get { return isWithdrawn_; }
      set {
        isWithdrawn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionVotingRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionVotingRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      if (Count != other.Count) return false;
      if (RoundNumber != other.RoundNumber) return false;
      if (!object.Equals(TransactionId, other.TransactionId)) return false;
      if (VoteAge != other.VoteAge) return false;
      if(!lockDaysList_.Equals(other.lockDaysList_)) return false;
      if (UnlockAge != other.UnlockAge) return false;
      if (TermNumber != other.TermNumber) return false;
      if (!object.Equals(UnlockTimestamp, other.UnlockTimestamp)) return false;
      if (!object.Equals(WithdrawTimestamp, other.WithdrawTimestamp)) return false;
      if (!object.Equals(VoteTimestamp, other.VoteTimestamp)) return false;
      if (IsWithdrawn != other.IsWithdrawn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      if (transactionId_ != null) hash ^= TransactionId.GetHashCode();
      if (VoteAge != 0L) hash ^= VoteAge.GetHashCode();
      hash ^= lockDaysList_.GetHashCode();
      if (UnlockAge != 0L) hash ^= UnlockAge.GetHashCode();
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (unlockTimestamp_ != null) hash ^= UnlockTimestamp.GetHashCode();
      if (withdrawTimestamp_ != null) hash ^= WithdrawTimestamp.GetHashCode();
      if (voteTimestamp_ != null) hash ^= VoteTimestamp.GetHashCode();
      if (IsWithdrawn != false) hash ^= IsWithdrawn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(From);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (Count != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Count);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RoundNumber);
      }
      if (transactionId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TransactionId);
      }
      if (VoteAge != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(VoteAge);
      }
      lockDaysList_.WriteTo(output, _repeated_lockDaysList_codec);
      if (UnlockAge != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(UnlockAge);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TermNumber);
      }
      if (unlockTimestamp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UnlockTimestamp);
      }
      if (withdrawTimestamp_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsWithdrawn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundNumber);
      }
      if (transactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionId);
      }
      if (VoteAge != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VoteAge);
      }
      size += lockDaysList_.CalculateSize(_repeated_lockDaysList_codec);
      if (UnlockAge != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockAge);
      }
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (unlockTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockTimestamp);
      }
      if (withdrawTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionVotingRecord other) {
      if (other == null) {
        return;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      if (other.transactionId_ != null) {
        if (transactionId_ == null) {
          TransactionId = new global::AElf.Hash();
        }
        TransactionId.MergeFrom(other.TransactionId);
      }
      if (other.VoteAge != 0L) {
        VoteAge = other.VoteAge;
      }
      lockDaysList_.Add(other.lockDaysList_);
      if (other.UnlockAge != 0L) {
        UnlockAge = other.UnlockAge;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.unlockTimestamp_ != null) {
        if (unlockTimestamp_ == null) {
          UnlockTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UnlockTimestamp.MergeFrom(other.UnlockTimestamp);
      }
      if (other.withdrawTimestamp_ != null) {
        if (withdrawTimestamp_ == null) {
          WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WithdrawTimestamp.MergeFrom(other.WithdrawTimestamp);
      }
      if (other.voteTimestamp_ != null) {
        if (voteTimestamp_ == null) {
          VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VoteTimestamp.MergeFrom(other.VoteTimestamp);
      }
      if (other.IsWithdrawn != false) {
        IsWithdrawn = other.IsWithdrawn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            From = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
          case 24: {
            Count = input.ReadInt64();
            break;
          }
          case 32: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 42: {
            if (transactionId_ == null) {
              TransactionId = new global::AElf.Hash();
            }
            input.ReadMessage(TransactionId);
            break;
          }
          case 48: {
            VoteAge = input.ReadInt64();
            break;
          }
          case 58:
          case 56: {
            lockDaysList_.AddEntriesFrom(input, _repeated_lockDaysList_codec);
            break;
          }
          case 64: {
            UnlockAge = input.ReadInt64();
            break;
          }
          case 72: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 82: {
            if (unlockTimestamp_ == null) {
              UnlockTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTimestamp);
            break;
          }
          case 90: {
            if (withdrawTimestamp_ == null) {
              WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WithdrawTimestamp);
            break;
          }
          case 98: {
            if (voteTimestamp_ == null) {
              VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VoteTimestamp);
            break;
          }
          case 104: {
            IsWithdrawn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PageableElectionTicketsInfoInput : pb::IMessage<PageableElectionTicketsInfoInput> {
    private static readonly pb::MessageParser<PageableElectionTicketsInfoInput> _parser = new pb::MessageParser<PageableElectionTicketsInfoInput>(() => new PageableElectionTicketsInfoInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PageableElectionTicketsInfoInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageableElectionTicketsInfoInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageableElectionTicketsInfoInput(PageableElectionTicketsInfoInput other) : this() {
      start_ = other.start_;
      length_ = other.length_;
      publicKey_ = other.publicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageableElectionTicketsInfoInput Clone() {
      return new PageableElectionTicketsInfoInput(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "publicKey" field.</summary>
    public const int PublicKeyFieldNumber = 3;
    private string publicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PageableElectionTicketsInfoInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PageableElectionTicketsInfoInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (Length != other.Length) return false;
      if (PublicKey != other.PublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Start);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Length);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Start);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Length);
      }
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PageableElectionTicketsInfoInput other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadSInt32();
            break;
          }
          case 16: {
            Length = input.ReadSInt32();
            break;
          }
          case 26: {
            PublicKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PageInfo : pb::IMessage<PageInfo> {
    private static readonly pb::MessageParser<PageInfo> _parser = new pb::MessageParser<PageInfo>(() => new PageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInfo(PageInfo other) : this() {
      start_ = other.start_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInfo Clone() {
      return new PageInfo(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Start);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Start);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PageInfo other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadSInt32();
            break;
          }
          case 16: {
            Length = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CandidateHistoryDictionary : pb::IMessage<CandidateHistoryDictionary> {
    private static readonly pb::MessageParser<CandidateHistoryDictionary> _parser = new pb::MessageParser<CandidateHistoryDictionary>(() => new CandidateHistoryDictionary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CandidateHistoryDictionary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateHistoryDictionary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateHistoryDictionary(CandidateHistoryDictionary other) : this() {
      maps_ = other.maps_.Clone();
      candidatesNumber_ = other.candidatesNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CandidateHistoryDictionary Clone() {
      return new CandidateHistoryDictionary(this);
    }

    /// <summary>Field number for the "Maps" field.</summary>
    public const int MapsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::AElf.Kernel.CandidateHistory>.Codec _map_maps_codec
        = new pbc::MapField<string, global::AElf.Kernel.CandidateHistory>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::AElf.Kernel.CandidateHistory.Parser), 10);
    private readonly pbc::MapField<string, global::AElf.Kernel.CandidateHistory> maps_ = new pbc::MapField<string, global::AElf.Kernel.CandidateHistory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::AElf.Kernel.CandidateHistory> Maps {
      get { return maps_; }
    }

    /// <summary>Field number for the "CandidatesNumber" field.</summary>
    public const int CandidatesNumberFieldNumber = 3;
    private int candidatesNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CandidatesNumber {
      get { return candidatesNumber_; }
      set {
        candidatesNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CandidateHistoryDictionary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CandidateHistoryDictionary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Maps.Equals(other.Maps)) return false;
      if (CandidatesNumber != other.CandidatesNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Maps.GetHashCode();
      if (CandidatesNumber != 0) hash ^= CandidatesNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      maps_.WriteTo(output, _map_maps_codec);
      if (CandidatesNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CandidatesNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += maps_.CalculateSize(_map_maps_codec);
      if (CandidatesNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CandidatesNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CandidateHistoryDictionary other) {
      if (other == null) {
        return;
      }
      maps_.Add(other.maps_);
      if (other.CandidatesNumber != 0) {
        CandidatesNumber = other.CandidatesNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            maps_.AddEntriesFrom(input, _map_maps_codec);
            break;
          }
          case 24: {
            CandidatesNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectionTicketsHistories : pb::IMessage<ElectionTicketsHistories> {
    private static readonly pb::MessageParser<ElectionTicketsHistories> _parser = new pb::MessageParser<ElectionTicketsHistories>(() => new ElectionTicketsHistories());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionTicketsHistories> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTicketsHistories() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTicketsHistories(ElectionTicketsHistories other) : this() {
      values_ = other.values_.Clone();
      historiesNumber_ = other.historiesNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTicketsHistories Clone() {
      return new ElectionTicketsHistories(this);
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Kernel.ElectionTicketsHistory> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Kernel.ElectionTicketsHistory.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.ElectionTicketsHistory> values_ = new pbc::RepeatedField<global::AElf.Kernel.ElectionTicketsHistory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.ElectionTicketsHistory> Values {
      get { return values_; }
    }

    /// <summary>Field number for the "HistoriesNumber" field.</summary>
    public const int HistoriesNumberFieldNumber = 2;
    private long historiesNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HistoriesNumber {
      get { return historiesNumber_; }
      set {
        historiesNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionTicketsHistories);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionTicketsHistories other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      if (HistoriesNumber != other.HistoriesNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (HistoriesNumber != 0L) hash ^= HistoriesNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (HistoriesNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HistoriesNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (HistoriesNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HistoriesNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionTicketsHistories other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      if (other.HistoriesNumber != 0L) {
        HistoriesNumber = other.HistoriesNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
          case 16: {
            HistoriesNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectionTicketsHistory : pb::IMessage<ElectionTicketsHistory> {
    private static readonly pb::MessageParser<ElectionTicketsHistory> _parser = new pb::MessageParser<ElectionTicketsHistory>(() => new ElectionTicketsHistory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectionTicketsHistory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTicketsHistory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTicketsHistory(ElectionTicketsHistory other) : this() {
      candidateAlias_ = other.candidateAlias_;
      votesNumber_ = other.votesNumber_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      state_ = other.state_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectionTicketsHistory Clone() {
      return new ElectionTicketsHistory(this);
    }

    /// <summary>Field number for the "CandidateAlias" field.</summary>
    public const int CandidateAliasFieldNumber = 1;
    private string candidateAlias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CandidateAlias {
      get { return candidateAlias_; }
      set {
        candidateAlias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VotesNumber" field.</summary>
    public const int VotesNumberFieldNumber = 2;
    private long votesNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VotesNumber {
      get { return votesNumber_; }
      set {
        votesNumber_ = value;
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 4;
    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::AElf.Kernel.ElectionTicketsHistoryType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.ElectionTicketsHistoryType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectionTicketsHistory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectionTicketsHistory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CandidateAlias != other.CandidateAlias) return false;
      if (VotesNumber != other.VotesNumber) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (State != other.State) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CandidateAlias.Length != 0) hash ^= CandidateAlias.GetHashCode();
      if (VotesNumber != 0L) hash ^= VotesNumber.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (State != false) hash ^= State.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CandidateAlias.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CandidateAlias);
      }
      if (VotesNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(VotesNumber);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timestamp);
      }
      if (State != false) {
        output.WriteRawTag(32);
        output.WriteBool(State);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CandidateAlias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CandidateAlias);
      }
      if (VotesNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VotesNumber);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (State != false) {
        size += 1 + 1;
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectionTicketsHistory other) {
      if (other == null) {
        return;
      }
      if (other.CandidateAlias.Length != 0) {
        CandidateAlias = other.CandidateAlias;
      }
      if (other.VotesNumber != 0L) {
        VotesNumber = other.VotesNumber;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.State != false) {
        State = other.State;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CandidateAlias = input.ReadString();
            break;
          }
          case 16: {
            VotesNumber = input.ReadInt64();
            break;
          }
          case 26: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 32: {
            State = input.ReadBool();
            break;
          }
          case 40: {
            Type = (global::AElf.Kernel.ElectionTicketsHistoryType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringInput : pb::IMessage<StringInput> {
    private static readonly pb::MessageParser<StringInput> _parser = new pb::MessageParser<StringInput>(() => new StringInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringInput(StringInput other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringInput Clone() {
      return new StringInput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringInput other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringOutput : pb::IMessage<StringOutput> {
    private static readonly pb::MessageParser<StringOutput> _parser = new pb::MessageParser<StringOutput>(() => new StringOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ElectionReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringOutput(StringOutput other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringOutput Clone() {
      return new StringOutput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringOutput other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
